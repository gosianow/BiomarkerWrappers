[{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Differential_Gene_Expression.html","id":"load-rna-seq-data","dir":"Articles","previous_headings":"","what":"Load RNA-seq data","title":"Differential gene expression","text":"gse SummarisedExperiment object contains RNA-seq data 553 samples GOYA clinical trial. GOYA trial tested efficacy Gazyva (GA101) compared Rituxan (Rituximab) first line, untreated DLBCL patients. Patients randomized 1:1 either G R combined CHOP chemotherapy backbone. Tumor samples collected baseline, RNA isolated using RNA-Access, RNASeq run TruSeq (Illumina) RNASeq. https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE125966","code":"data(gse)  gse ## class: SummarizedExperiment  ## dim: 27675 553  ## metadata(0): ## assays(1): counts ## rownames(27675): 1 10 ... 9994 9997 ## rowData names(2): EntrezIDs Hgnc_Symbol ## colnames(553): bo21005_bo2100500001_20160904 ##   bo21005_bo2100500002_20160904 ... bo21005_bo2100501181_20160904 ##   bo21005_bo2100501182_20160901 ## colData names(23): RNASeq_sample_id Run ... ipi region colData(gse) ## DataFrame with 553 rows and 23 columns ##                                     RNASeq_sample_id         Run  BioProject ##                                          <character> <character> <character> ## bo21005_bo2100500001_20160904 bo21005_bo2100500001..  SRR8512989 PRJNA518119 ## bo21005_bo2100500002_20160904 bo21005_bo2100500002..  SRR8512990 PRJNA518119 ## bo21005_bo2100500003_20160904 bo21005_bo2100500003..  SRR8512991 PRJNA518119 ## bo21005_bo2100500004_20160827 bo21005_bo2100500004..  SRR8512992 PRJNA518119 ## bo21005_bo2100500005_20160827 bo21005_bo2100500005..  SRR8512993 PRJNA518119 ## ...                                              ...         ...         ... ## bo21005_bo2100501175_20160911 bo21005_bo2100501175..  SRR8513393 PRJNA518119 ## bo21005_bo2100501176_20160906 bo21005_bo2100501176..  SRR8513394 PRJNA518119 ## bo21005_bo2100501177_20160901 bo21005_bo2100501177..  SRR8513395 PRJNA518119 ## bo21005_bo2100501181_20160904 bo21005_bo2100501181..  SRR8513396 PRJNA518119 ## bo21005_bo2100501182_20160901 bo21005_bo2100501182..  SRR8513397 PRJNA518119 ##                                  BioSample  Experiment GEO_Accession ##                                <character> <character>   <character> ## bo21005_bo2100500001_20160904 SAMN10853933  SRX5316605    GSM3586436 ## bo21005_bo2100500002_20160904 SAMN10853932  SRX5316606    GSM3586437 ## bo21005_bo2100500003_20160904 SAMN10853931  SRX5316607    GSM3586438 ## bo21005_bo2100500004_20160827 SAMN10853930  SRX5316608    GSM3586439 ## bo21005_bo2100500005_20160827 SAMN10853929  SRX5316609    GSM3586440 ## ...                                    ...         ...           ... ## bo21005_bo2100501175_20160911 SAMN10853936  SRX5317057    GSM3586984 ## bo21005_bo2100501176_20160906 SAMN10853935  SRX5317058    GSM3586985 ## bo21005_bo2100501177_20160901 SAMN10853934  SRX5317059    GSM3586986 ## bo21005_bo2100501181_20160904 SAMN10853906  SRX5317060    GSM3586987 ## bo21005_bo2100501182_20160901 SAMN10853905  SRX5317157    GSM3586988 ##                                        Instrument LibraryLayout ##                                       <character>   <character> ## bo21005_bo2100500001_20160904 Illumina HiSeq 2500        PAIRED ## bo21005_bo2100500002_20160904 Illumina HiSeq 2500        PAIRED ## bo21005_bo2100500003_20160904 Illumina HiSeq 2500        PAIRED ## bo21005_bo2100500004_20160827 Illumina HiSeq 2500        PAIRED ## bo21005_bo2100500005_20160827 Illumina HiSeq 2500        PAIRED ## ...                                           ...           ... ## bo21005_bo2100501175_20160911 Illumina HiSeq 2500        PAIRED ## bo21005_bo2100501176_20160906 Illumina HiSeq 2500        PAIRED ## bo21005_bo2100501177_20160901 Illumina HiSeq 2500        PAIRED ## bo21005_bo2100501181_20160904 Illumina HiSeq 2500        PAIRED ## bo21005_bo2100501182_20160901 Illumina HiSeq 2500        PAIRED ##                               LibrarySelection  LibrarySource    MBases ##                                    <character>    <character> <integer> ## bo21005_bo2100500001_20160904             cDNA TRANSCRIPTOMIC      4621 ## bo21005_bo2100500002_20160904             cDNA TRANSCRIPTOMIC      4740 ## bo21005_bo2100500003_20160904             cDNA TRANSCRIPTOMIC      4504 ## bo21005_bo2100500004_20160827             cDNA TRANSCRIPTOMIC      5033 ## bo21005_bo2100500005_20160827             cDNA TRANSCRIPTOMIC      4906 ## ...                                        ...            ...       ... ## bo21005_bo2100501175_20160911             cDNA TRANSCRIPTOMIC      4695 ## bo21005_bo2100501176_20160906             cDNA TRANSCRIPTOMIC      4861 ## bo21005_bo2100501177_20160901             cDNA TRANSCRIPTOMIC      5486 ## bo21005_bo2100501181_20160904             cDNA TRANSCRIPTOMIC      4730 ## bo21005_bo2100501182_20160901             cDNA TRANSCRIPTOMIC      5295 ##                                  MBytes    Platform  sample_acc Sample.Name ##                               <integer> <character> <character> <character> ## bo21005_bo2100500001_20160904      1990    ILLUMINA  SRS4313138  GSM3586436 ## bo21005_bo2100500002_20160904      2066    ILLUMINA  SRS4313139  GSM3586437 ## bo21005_bo2100500003_20160904      1961    ILLUMINA  SRS4313140  GSM3586438 ## bo21005_bo2100500004_20160827      2290    ILLUMINA  SRS4313141  GSM3586439 ## bo21005_bo2100500005_20160827      2269    ILLUMINA  SRS4313142  GSM3586440 ## ...                                 ...         ...         ...         ... ## bo21005_bo2100501175_20160911      2563    ILLUMINA  SRS4313588  GSM3586984 ## bo21005_bo2100501176_20160906      2146    ILLUMINA  SRS4313589  GSM3586985 ## bo21005_bo2100501177_20160901      2763    ILLUMINA  SRS4313591  GSM3586986 ## bo21005_bo2100501181_20160904      2199    ILLUMINA  SRS4313590  GSM3586987 ## bo21005_bo2100501182_20160901      2498    ILLUMINA  SRS4313664  GSM3586988 ##                               source_name   SRA.Study  patient_id   treatment ##                               <character> <character> <character> <character> ## bo21005_bo2100500001_20160904       DLBCL   SRP183071    Patient1   Rituximab ## bo21005_bo2100500002_20160904       DLBCL   SRP183071    Patient2       GA101 ## bo21005_bo2100500003_20160904       DLBCL   SRP183071    Patient3       GA101 ## bo21005_bo2100500004_20160827       DLBCL   SRP183071    Patient4       GA101 ## bo21005_bo2100500005_20160827       DLBCL   SRP183071    Patient5       GA101 ## ...                                   ...         ...         ...         ... ## bo21005_bo2100501175_20160911       DLBCL   SRP183071  Patient391   Rituximab ## bo21005_bo2100501176_20160906       DLBCL   SRP183071  Patient392   Rituximab ## bo21005_bo2100501177_20160901       DLBCL   SRP183071  Patient393   Rituximab ## bo21005_bo2100501181_20160904       DLBCL   SRP183071  Patient394   Rituximab ## bo21005_bo2100501182_20160901       DLBCL   SRP183071  Patient395       GA101 ##                               chemotherapy_cycles cell_of_origin ##                                         <integer>    <character> ## bo21005_bo2100500001_20160904                   6            GCB ## bo21005_bo2100500002_20160904                   6            GCB ## bo21005_bo2100500003_20160904                   6            GCB ## bo21005_bo2100500004_20160827                   6            GCB ## bo21005_bo2100500005_20160827                   6            ABC ## ...                                           ...            ... ## bo21005_bo2100501175_20160911                   6            GCB ## bo21005_bo2100501176_20160906                   6                ## bo21005_bo2100501177_20160901                   6            GCB ## bo21005_bo2100501181_20160904                   8            GCB ## bo21005_bo2100501182_20160901                   6            GCB ##                                             ipi         region ##                                     <character>    <character> ## bo21005_bo2100500001_20160904              High          Other ## bo21005_bo2100500002_20160904  Low-Intermediate          Other ## bo21005_bo2100500003_20160904 High-Intermediate          Other ## bo21005_bo2100500004_20160827 High-Intermediate          Other ## bo21005_bo2100500005_20160827  Low-Intermediate          Other ## ...                                         ...            ... ## bo21005_bo2100501175_20160911  Low-Intermediate Western Europe ## bo21005_bo2100501176_20160906  Low-Intermediate Western Europe ## bo21005_bo2100501177_20160901              High Eastern Europe ## bo21005_bo2100501181_20160904 High-Intermediate Eastern Europe ## bo21005_bo2100501182_20160901               Low Western Europe rowData(gse) ## DataFrame with 27675 rows and 2 columns ##         EntrezIDs Hgnc_Symbol ##       <character> <character> ## 1               1        A1BG ## 10             10        NAT2 ## 100           100         ADA ## 1000         1000        CDH2 ## 10000       10000        AKT3 ## ...           ...         ... ## 9991         9991       PTBP3 ## 9992         9992       KCNE2 ## 9993         9993       DGCR2 ## 9994         9994    CASP8AP2 ## 9997         9997        SCO2 rowData(gse)$HGNC_Symbol <- rowData(gse)$Hgnc_Symbol   ## There are some duplicated Hgnc_Symbol. Replace them with EntrezIDs table(duplicated2(rowData(gse)$HGNC_Symbol, value = TRUE)) ##  ##       ## 1777 rowData(gse)$HGNC_Symbol[is.na(rowData(gse)$HGNC_Symbol) | rowData(gse)$HGNC_Symbol %in%     \"\"] <- rowData(gse)$EntrezIDs[is.na(rowData(gse)$HGNC_Symbol) | rowData(gse)$HGNC_Symbol %in%     \"\"]   table(duplicated2(rowData(gse)$HGNC_Symbol, value = TRUE)) ## < table of extent 0 > rowData(gse)$HGNC_Symbol[duplicated(rowData(gse)$HGNC_Symbol)] <- rowData(gse)$EntrezIDs[duplicated(rowData(gse)$HGNC_Symbol)]   table(duplicated2(rowData(gse)$HGNC_Symbol, value = TRUE)) ## < table of extent 0 > # Use HGNC_Symbol as row names. They are needed for the gene set enrichment # analysis.  rownames(gse) <- rowData(gse)$HGNC_Symbol"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Differential_Gene_Expression.html","id":"load-gene-sets-from-msigdb","dir":"Articles","previous_headings":"","what":"Load gene sets from MSigDB","title":"Differential gene expression","text":"description gene sets see https://www.gsea-msigdb.org/gsea/msigdb/genesets.jsp?collection=H","code":"### ------------------------------------------------------------------------- ### Hallmark from MSigDB ### -------------------------------------------------------------------------   geneset_df_hallmark <- msigdbr::msigdbr(species = \"Homo sapiens\", category = \"H\")   ### Skip genes that are missing table(geneset_df_hallmark$human_gene_symbol %in% rowData(gse)$HGNC_Symbol) ##  ## FALSE  TRUE  ##   108  8101 geneset_df_hallmark <- geneset_df_hallmark[geneset_df_hallmark$human_gene_symbol %in%     rowData(gse)$HGNC_Symbol, ]   ### Format the gene set names geneset_df_hallmark$gs_name2 <- gsub(\"_\", \" \", geneset_df_hallmark$gs_name) geneset_df_hallmark$gs_name2 <- gsub(\"^HALLMARK \", \"\", geneset_df_hallmark$gs_name2)   geneset_list_hallmark <- split(geneset_df_hallmark$human_gene_symbol, geneset_df_hallmark$gs_name2)   geneset_extra_hallmark <- data.frame(GenesetID = names(geneset_list_hallmark), Category = \"HALLMARK\",     stringsAsFactors = FALSE)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Differential_Gene_Expression.html","id":"differential-gene-expression-between-cell-of-origin","dir":"Articles","previous_headings":"","what":"Differential gene expression between cell of origin","title":"Differential gene expression","text":"Number samples used analysis.","code":"table(gse$cell_of_origin) ##  ##                       ABC          GCB UNCLASSIFIED  ##           15          151          298           89 gse$DE_var <- factor(gse$cell_of_origin, levels = c(\"GCB\", \"UNCLASSIFIED\", \"ABC\"))   ### Remove samples with NAs  gse_dge <- gse[, !is.na(gse$DE_var)]     expr <- assay(gse_dge)  pdata <- data.frame(colData(gse_dge))  fdata <- data.frame(rowData(gse_dge)) ### Number of samples x <- table(pdata$DE_var) rownames(x) <- gsub(\"_\", \" \", rownames(x))   kable(x, caption = \"Number of samples used for the analysis.\", booktabs = TRUE, linesep = \"\") %>%     kable_styling(bootstrap_options = c(\"condensed\", \"bordered\", \"striped\"), latex_options = c(\"HOLD_position\",         \"striped\"), full_width = FALSE, font_size = font_size)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Differential_Gene_Expression.html","id":"define-the-comparisons-of-interest","dir":"Articles","previous_headings":"Differential gene expression between cell of origin","what":"Define the comparisons of interest","title":"Differential gene expression","text":"","code":"# Design matrix. We include in the model information about treatment arm and # time point design <- model.matrix(~0 + DE_var, data = pdata)  colnames(design)   # Generate contrast of interest - comparisons that we want to test Group names # must exactly match the column names of the design matrix.   contrast_matrix <- makeContrasts(UNCLASSIFIED_vs_GCB = DE_varUNCLASSIFIED - DE_varGCB,     ABC_vs_GCB = DE_varABC - DE_varGCB, levels = design)   contrasts <- colnames(contrast_matrix)  group_var = \"DE_var\"  contrast_mapping = c(UNCLASSIFIED_vs_GCB = \"UNCLASSIFIED\", ABC_vs_GCB = \"ABC\")  pval <- 0.05"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Differential_Gene_Expression.html","id":"run-limma-voom","dir":"Articles","previous_headings":"Differential gene expression between cell of origin","what":"Run limma voom","title":"Differential gene expression","text":"Number DE genes (adj. p-value 0). Number DE genes (adj. p-value 1).","code":"### ---------------------------------------------------------------------- DE ### analysis using voom and limma model approach ### ----------------------------------------------------------------------  # Obtain CPMs myCPM <- edgeR::cpm(expr)  # We would like to skip genes that have very low expression.  We keep genes # that have expression higher than 0.5 CPM in at least X samples, which is the # size of the smallest subgroup that we want to compare genes2keep <- rowSums(myCPM > 0.5) >= min(table(pdata[, group_var])) table(genes2keep) ## genes2keep ## FALSE  TRUE  ## 11591 16084 # Subset the rows of expr to keep the more highly expressed genes  y <- DGEList(expr[genes2keep, ], genes = fdata[genes2keep, ])   # Apply normalization to DGEList object y <- calcNormFactors(y)   # Estimate voom mean-variance trend and precision weights v <- voom(y, design = design, plot = TRUE) # Estimate linear model fit <- lmFit(v, design = design)  # We apply the contrasts matrix to the fit object to get the statistics and # estimated parameters of our comparison that we are interested in  fit <- contrasts.fit(fit, contrasts = contrast_matrix)  # The final step is to call the eBayes function, which performs empirical Bayes # shrinkage on the variances, and estimates moderated t-statistics and the # associated p-values  fit <- eBayes(fit) # ------------------------------------------------------------------------- # Tables with number of DE genes # -------------------------------------------------------------------------   summa_fit_lfc0 <- decideTests(fit, p.value = pval, lfc = 0)  x <- t(as.data.frame.matrix(summary(summa_fit_lfc0)))  kable(x, caption = paste0(\"Number of DE genes (adj. p-value < \", pval, \", |LogFC| > 0).\"),     booktabs = TRUE, linesep = \"\") %>%     kable_styling(bootstrap_options = c(\"condensed\", \"bordered\", \"striped\"), latex_options = c(\"HOLD_position\",         \"striped\"), full_width = FALSE, font_size = font_size) %>%     print() summa_fit_lfc1 <- decideTests(fit, p.value = pval, lfc = 1)  x <- t(as.data.frame.matrix(summary(summa_fit_lfc1)))   kable(x, caption = paste0(\"Number of DE genes (adj. p-value < \", pval, \", |LogFC| > 1).\"),     booktabs = TRUE, linesep = \"\") %>%     kable_styling(bootstrap_options = c(\"condensed\", \"bordered\", \"striped\"), latex_options = c(\"HOLD_position\",         \"striped\"), full_width = FALSE, font_size = font_size) %>%     print() # ------------------------------------------------------------------------- # plotMD # -------------------------------------------------------------------------    par(mfrow = c(1, 3))   for (k in 1:length(colnames(contrast_matrix))) {     # k = 1      contrast <- colnames(contrast_matrix)[k]      plotMD(fit, coef = contrast, status = summa_fit_lfc0[, contrast], values = c(-1,         1), hl.col = c(\"blue\", \"red\"), main = paste0(gsub(\"_\", \" \", contrast), \"\\nDE genes (adj. p-value < \",         pval, \", |LogFC| > 0)\"), cex.main = 1.2)     abline(h = 0)      plotMD(fit, coef = contrast, status = summa_fit_lfc1[, contrast], values = c(-1,         1), hl.col = c(\"blue\", \"red\"), main = paste0(gsub(\"_\", \" \", contrast), \"\\nDE genes (adj. p-value < \",         pval, \", |LogFC| > 1)\"), cex.main = 1.2)     abline(h = 0)      volcanoplot(fit, coef = contrast, highlight = 10, names = fit$genes$HGNC_Symbol,         main = paste0(gsub(\"_\", \" \", contrast), \"\\nHighlighted top 10 genes\"))     abline(v = c(-1, 1), col = \"grey\")  } par(mfrow = c(1, 1)) # ------------------------------------------------------------------------- # topTable # -------------------------------------------------------------------------   topTable <- wrapper_merge_topTables(fit = fit, contrasts = colnames(contrast_matrix),     gene_vars = c(\"EntrezIDs\", \"HGNC_Symbol\"), pval = pval)  rownames(topTable) <- topTable$HGNC_Symbol  head(topTable) ##         EntrezIDs HGNC_Symbol logFC_UNCLASSIFIED_vs_GCB ## A1BG            1        A1BG                0.05258256 ## ADA           100         ADA                0.04592907 ## CDH2         1000        CDH2               -0.09764943 ## AKT3        10000        AKT3               -0.03206742 ## MED6        10001        MED6               -0.07466933 ## NAALAD2     10003     NAALAD2                0.03534835 ##         AveExpr_UNCLASSIFIED_vs_GCB t_UNCLASSIFIED_vs_GCB ## A1BG                       1.183651             0.3896911 ## ADA                        6.836000             0.3804623 ## CDH2                       2.816823            -0.4727322 ## AKT3                       5.454880            -0.3258116 ## MED6                       4.797126            -1.3328362 ## NAALAD2                   -1.094422             0.1547457 ##         P.Value_UNCLASSIFIED_vs_GCB adj.P.Val_UNCLASSIFIED_vs_GCB ## A1BG                      0.6969187                     0.8550797 ## ADA                       0.7037519                     0.8587647 ## CDH2                      0.6365953                     0.8204983 ## AKT3                      0.7446931                     0.8813318 ## MED6                      0.1831478                     0.4264694 ## NAALAD2                   0.8770796                     0.9462036 ##         sign.P.Val_UNCLASSIFIED_vs_GCB summary_pval5_lfc0_UNCLASSIFIED_vs_GCB ## A1BG                        0.15681790                                      0 ## ADA                         0.15258040                                      0 ## CDH2                       -0.19613659                                      0 ## AKT3                       -0.12802266                                      0 ## MED6                       -0.73719829                                      0 ## NAALAD2                     0.05696097                                      0 ##         summary_pval5_lfc1_UNCLASSIFIED_vs_GCB logFC_ABC_vs_GCB ## A1BG                                         0       0.08738254 ## ADA                                          0       0.26680147 ## CDH2                                         0      -0.40113964 ## AKT3                                         0      -0.22395773 ## MED6                                         0       0.08464979 ## NAALAD2                                      0      -0.49081115 ##         AveExpr_ABC_vs_GCB t_ABC_vs_GCB P.Value_ABC_vs_GCB adj.P.Val_ABC_vs_GCB ## A1BG              1.183651    0.7778443        0.437001537           0.51700866 ## ADA               6.836000    2.6816020        0.007551309           0.01575295 ## CDH2              2.816823   -2.2295012        0.026191155           0.04690553 ## AKT3              5.454880   -2.7059657        0.007025991           0.01478943 ## MED6              4.797126    1.8450846        0.065572741           0.10359218 ## NAALAD2          -1.094422   -2.4368811        0.015136556           0.02908331 ##         sign.P.Val_ABC_vs_GCB summary_pval5_lfc0_ABC_vs_GCB ## A1BG                 0.359517                             0 ## ADA                  2.121978                             1 ## CDH2                -1.581845                            -1 ## AKT3                -2.153292                            -1 ## MED6                 1.183277                             0 ## NAALAD2             -1.819973                            -1 ##         summary_pval5_lfc1_ABC_vs_GCB ## A1BG                                0 ## ADA                                 0 ## CDH2                                0 ## AKT3                                0 ## MED6                                0 ## NAALAD2                             0"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Differential_Gene_Expression.html","id":"volcano-plots","dir":"Articles","previous_headings":"Differential gene expression between cell of origin","what":"Volcano plots","title":"Differential gene expression","text":"highlight top 20 genes volcano plot.","code":"for (i in 1:length(contrasts)) {     # i = 1      contrast <- contrasts[i]      direction <- \"both\"      topTable_both <- wrapper_dispaly_significant_genes(topTable, contrast = contrast,         direction = direction, topn = 20, pval = 1, lfc = 0, gene_vars = c(\"EntrezIDs\",             \"HGNC_Symbol\"), lfc_prefix = \"logFC\", pval_prefix = \"P.Value\", adjp_prefix = \"adj.P.Val\")      ggdata <- topTable[, c(\"HGNC_Symbol\", paste0(c(\"logFC_\", \"P.Value_\"), contrast))]      colnames(ggdata) <- c(\"HGNC_Symbol\", \"logFC\", \"P.Value\")      ggdata$P.Value <- -log10(ggdata$P.Value)      ggdata$Label <- ggdata$HGNC_Symbol     ggdata$Label[!ggdata$Label %in% bresults(topTable_both)$HGNC_Symbol] <- NA      ggdata$Highlight <- is.na(ggdata$Label)      ggp <- ggplot(ggdata, aes(x = logFC, y = P.Value, color = Highlight, label = Label)) +         geom_point() + geom_vline(xintercept = 0, linetype = 2, color = \"lightgrey\") +         geom_vline(xintercept = c(-1, 1), linetype = 2, color = \"lightgrey\") + ggrepel::geom_text_repel(size = 2.5) +         labs(title = contrast) + ylab(\"-log10(P-Value)\") + theme(legend.position = \"none\") +         scale_color_manual(values = c(\"darkslateblue\", \"grey\"))      print(ggp)   }"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Differential_Gene_Expression.html","id":"correlation-between-logfc","dir":"Articles","previous_headings":"Differential gene expression between cell of origin","what":"Correlation between LogFC","title":"Differential gene expression","text":"","code":"x <- topTable[, paste0(\"logFC_\", contrasts), drop = FALSE]  colnames(x) <- gsub(\"_\", \" \", colnames(x))  correlation <- cor(x, method = \"spearman\", use = \"pairwise.complete.obs\")  ### Corrplot   corrplot::corrplot(correlation, method = \"color\", addCoef.col = \"black\", number.digits = 1,     number.cex = 0.75, order = \"hclust\", hclust.method = \"complete\", type = \"full\",     tl.col = \"black\", tl.cex = 1, cl.pos = \"n\") ### Scatter plot with LogFC  ggdf <- topTable  logFC1 <- paste0(\"logFC_\", contrasts[1]) logFC2 <- paste0(\"logFC_\", contrasts[2])   logFC_cor <- round(cor(ggdf[, logFC1], ggdf[, logFC2], method = \"spearman\", use = \"pairwise.complete.obs\"),     2)  logfc_range <- range(c(ggdf[, logFC1], ggdf[, logFC2]))  wrapper_point_plot_core(ggdf, x_var = logFC1, y_var = logFC2, title = paste0(\"Spearman's R = \",     logFC_cor), point_shape = 20, background_grid_major = \"xy\", xlim = logfc_range,     ylim = logfc_range) + geom_abline(slope = 1, intercept = 0, color = \"grey\") ### Venn diagram  set1 <- contrasts[1] set2 <- contrasts[2]   venn_data <- topTable[, paste0(\"summary_pval5_lfc0_\", c(set1, set2))] colnames(venn_data) <- c(set1, set2)  vennDiagram(venn_data, include = c(\"up\", \"down\"), counts.col = c(\"red\", \"blue\"),     circle.col = c(\"blue\", \"orange\", \"grey\"), main = \"|LogFC| > 0, adj. p-val < 0.05\",     cex = c(0.8, 0.6, 0.6)) venn_data <- topTable[, paste0(\"summary_pval5_lfc1_\", c(set1, set2))] colnames(venn_data) <- c(set1, set2)  vennDiagram(venn_data, include = c(\"up\", \"down\"), counts.col = c(\"red\", \"blue\"),     circle.col = c(\"blue\", \"orange\", \"grey\"), main = \"|LogFC| > 1, adj. p-val < 0.05\",     cex = c(0.8, 0.6, 0.6))"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Differential_Gene_Expression.html","id":"significant-results","dir":"Articles","previous_headings":"Differential gene expression between cell of origin","what":"Significant results","title":"Differential gene expression","text":"","code":"# ------------------------------ Generate tables with significant results # ------------------------------   significant_genes_list <- lapply(1:length(contrasts), function(i) {     # i = 5      contrast <- contrasts[i]      cat(paste0(\"\\n\\n### Testing for \", gsub(\"_\", \" \", contrast), \"\\n\\n\"))      direction <- \"up\"      topTable_up <- wrapper_dispaly_significant_genes(topTable, contrast = contrast,         direction = direction, topn = 30, pval = pval, lfc = 0, gene_vars = c(\"EntrezIDs\",             \"HGNC_Symbol\"), lfc_prefix = \"logFC\", pval_prefix = \"P.Value\", adjp_prefix = \"adj.P.Val\")      print(topTable_up)      direction <- \"down\"      topTable_down <- wrapper_dispaly_significant_genes(topTable, contrast = contrast,         direction = direction, topn = 30, pval = pval, lfc = 0, gene_vars = c(\"EntrezIDs\",             \"HGNC_Symbol\"), lfc_prefix = \"logFC\", pval_prefix = \"P.Value\", adjp_prefix = \"adj.P.Val\")      print(topTable_down)      significant_genes <- c(bresults(topTable_up)$HGNC_Symbol, bresults(topTable_down)$HGNC_Symbol)   })"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Differential_Gene_Expression.html","id":"testing-for-unclassified-vs-gcb","dir":"Articles","previous_headings":"Differential gene expression between cell of origin > Significant results","what":"Testing for UNCLASSIFIED vs GCB","title":"Differential gene expression","text":"List -regulated genes (adj.P.Val \\(<=\\) 0.05, \\(|\\)logFC\\(|\\) \\(>=\\) 0) testing UNCLASSIFIED vs GCB. Printed 30 960 genes. List -regulated genes (adj.P.Val \\(<=\\) 0.05, \\(|\\)logFC\\(|\\) \\(>=\\) 0) testing UNCLASSIFIED vs GCB. Printed 30 1010 genes.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Differential_Gene_Expression.html","id":"testing-for-abc-vs-gcb","dir":"Articles","previous_headings":"Differential gene expression between cell of origin > Significant results","what":"Testing for ABC vs GCB","title":"Differential gene expression","text":"List -regulated genes (adj.P.Val \\(<=\\) 0.05, \\(|\\)logFC\\(|\\) \\(>=\\) 0) testing ABC vs GCB. Printed 30 4443 genes. List -regulated genes (adj.P.Val \\(<=\\) 0.05, \\(|\\)logFC\\(|\\) \\(>=\\) 0) testing ABC vs GCB. Printed 30 4607 genes.","code":"names(significant_genes_list) <- contrasts"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Differential_Gene_Expression.html","id":"summary","dir":"Articles","previous_headings":"Differential gene expression between cell of origin","what":"Summary","title":"Differential gene expression","text":"","code":"significant_genes <- unique(unlist(significant_genes_list))  topTable_significant_genes <- topTable[significant_genes, , drop = FALSE]   # ----------------------------------------------------------------------- # Clustering by LogFC # -----------------------------------------------------------------------   data_lfc <- wrapper_extract_from_topTable(topTable_significant_genes, extract_prefix = \"logFC\")   if (ncol(data_lfc) > 1) {     # Cluster rows using hierarchical clustering     d <- dist(data_lfc, method = \"euclidean\")     cluster_rows <- hclust(d, method = \"complete\")     clustering_order <- cluster_rows$order } else {     cluster_rows <- FALSE     clustering_order <- 1:nrow(data_lfc) }    ### logFC_dotplot   wrapper_logFC_dotplot(topTable_significant_genes[clustering_order, ], gene_var = \"HGNC_Symbol\",     lfc_prefix = \"logFC\", pval_prefix = \"P.Value\", adjp_prefix = \"adj.P.Val\", pval = pval) ### logFC_heatmap  wrapper_logFC_heatmap(topTable_significant_genes, gene_var = \"HGNC_Symbol\", lfc_prefix = \"logFC\",     adjp_prefix = \"adj.P.Val\", cluster_rows = cluster_rows, row_names_gp = grid::gpar(fontsize = 7)) ### z-score heatmap  expr_de <- v$E[significant_genes, , drop = FALSE]   wrapper_gene_expression_heatmap(expr_de, cluster_rows = cluster_rows, column_split = pdata[,     group_var], row_names_gp = grid::gpar(fontsize = 7), trim_prop = 0.05) ### Mean z-score heatmap  data_adjp <- wrapper_extract_from_topTable(topTable_significant_genes, extract_prefix = \"adj.P.Val\") data_adjp <- data_adjp[, names(contrast_mapping), drop = FALSE] colnames(data_adjp) <- contrast_mapping   wrapper_summarized_expression_heatmap(expr_de, group = pdata[, group_var], adjp = data_adjp,     cluster_rows = cluster_rows, row_names_gp = grid::gpar(fontsize = 7), trim_values = 1)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Differential_Gene_Expression.html","id":"gene-set-enrichment-analysis-gsea","dir":"Articles","previous_headings":"Differential gene expression between cell of origin","what":"Gene set enrichment analysis (GSEA)","title":"Differential gene expression","text":"","code":"gene_mapping <- NULL gene_var <- \"HGNC_Symbol\"  genesets <- geneset_list_hallmark genesets_extra_info <- geneset_extra_hallmark geneset_vars <- \"GenesetID\"   ############################################################################# Run ############################################################################# GSEA   set.seed(1234)  topTable_gsea <- wrapper_gsea(topTable, genesets = genesets, genesets_extra_info = genesets_extra_info,     gene_mapping = gene_mapping, gene_var = gene_var, topn_genes = Inf)   rownames(topTable_gsea) <- topTable_gsea$GenesetID   head(topTable_gsea) ##                               GenesetID Category Size_UNCLASSIFIED_vseading.Genes_UNCLASSIFIED_vs_GCB ## ADIPOGENESIS                                                                                                                                                        BCL6, PFKL, CPT2, CDKN2C, CCNG2, SOD1, COQ5, UBQLN1, CS, ALDH2, PHYH, DBT, NDUFA5, ATL2, MRPL15, ACO2, C3, ACADM, GPAT4, AK2, DNAJC15, COX7B, MAP4K3, MDH2, PGM1, COX6A1, LPL, SULT1A1, NMT1, TANK, APLP2, DLD, TKT, ATP5PO, DRAM2, PHLDB1, SLC25A1, FABP4, OMD, HSPB8, ADIPOR2 ## ALLOGRAFT REJECTION IRF4, IL16, IL12A, IL2RB, LYN, IFNAR2, CCL22, IL10, BCL3, IL12B, IL1B, GZMB, CD47, GALNT1, IL6, GBP2, TAP1, CXCL13, IFNG, IL7, PRKCG, PRF1, ZAP70, TAP2, FGR, AKT1, PRKCB, NCR1, APBB1, IL2RA, CCR1, HLA-G, GPR65, B2M, CCND2, CD80, CXCR3, CCR5, TLR2, BCL10, PSMB10, STAT1, SRGN, GLMN, CD7, CD96, SOCS5, PTPN6, CCL2, FLNA, KLRD1, JAK2, CXCL9, STAB1, CD1D, IL27RA, CD8B, C2, ETS1, ITGAL, HLA-A, MRPL3, NLRP3, DYRK3, CD8A ## ANDROGEN RESPONSE                                                                                                                                                                                                                                                                                                                          ABCC4, PTK2B, TPD52, ALDH1A3, DBI, PMEPA1, UBE2J1, CAMKK2, SMS, ELOVL5, STK39, HERC3, RAB4A, ANKH, ITGAV ## ANGIOGENESIS                                                                                                                                                                                                                                                                                                                                       PTK2, OLR1, POSTN, MSX1, ITGAV, LUM, FSTL1, LPL, TIMP1, SPP1, JAG2, COL5A2, COL3A1, KCNJ8, FGFR1 ## APICAL JUNCTION                                                                                                                                  PTK2, VCL, EPB41L2, CD86, IRS1, ACTN2, MAP4K2, AMH, NF1, SLIT2, EVL, EXOC4, LIMA1, TSC1, MAPK14, SYK, LAYN, FBN1, MMP9, CAP1, SHROOM2, FSCN1, COL16A1, MSN, THY1, SKAP2, PTPRC, AMIGO2, RHOF, TNFRSF11B, CDH11, JUP, PARVA, CDH6, RSU1, ACTG1, STX4, ATP1A3, WASL, ITGB1, TRAF1, RASA1, EGFR, DSC3 ## APICAL SURFACE                                                                                                                                                                                                                                                                                                                                                      IL2RB, LYN, SLC2A4, CD160, ADAM10, B4GALT1, MDGA1, NCOA6, ATP6V0A4, ATP8B1, APP ##                     Median.t_UNCLASSIFIED_vs_GCB Direction_UNCLASSIFIED_vs_GCB ## ADIPOGENESIS                               -0.28                          Down ## ALLOGRAFT REJECTION                         0.64                            Up ## ANDROGEN RESPONSE                           0.13                          Down ## ANGIOGENESIS                               -0.75                          Down ## APICAL JUNCTION                             0.02                          Down ## APICAL SURFACE                              0.00                            Up ##                     ES_UNCLASSIFIED_vs_GCB NES_UNCLASSIFIED_vs_GCB ## ADIPOGENESIS                         -0.20                   -0.95 ## ALLOGRAFT REJECTION                   0.36                    1.70 ## ANDROGEN RESPONSE                    -0.22                   -0.89 ## ANGIOGENESIS                         -0.31                   -1.02 ## APICAL JUNCTION                      -0.24                   -1.09 ## APICAL SURFACE                        0.26                    0.95 ##                     P.Value_UNCLASSIFIED_vs_GCB adj.P.Val_UNCLASSIFIED_vs_GCB ## ADIPOGENESIS                       0.6039783002                  0.7107286177 ## ALLOGRAFT REJECTION                0.0001181803                  0.0006565574 ## ANDROGEN RESPONSE                  0.6563706564                  0.7313368056 ## ANGIOGENESIS                       0.4291262136                  0.6310679612 ## APICAL JUNCTION                    0.2477558348                  0.4129263914 ## APICAL SURFACE                     0.5679012346                  0.7107286177 ##                     sign.P.Val_UNCLASSIFIED_vs_GCB Size_ABC_vs_GCB ## ADIPOGENESIS                            -0.2189787             192 ## ALLOGRAFT REJECTION                      3.9274548             178 ## ANDROGEN RESPONSE                       -0.1828508              95 ## ANGIOGENESIS                            -0.3674150              32 ## APICAL JUNCTION                         -0.6059761             183 ## APICAL SURFACE                           0.2457272              40 ##                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Leading.Genes_ABC_vs_GCB ## ADIPOGENESIS                                                                                                                                                                                                                                                       ATP1B3, IDH3A, DLAT, MCCC1, RREB1, PDCD4, UCP2, ESYT1, ACAA2, GPD2, SLC1A5, ACADM, JAGN1, NDUFAB1, IMMT, QDPR, NMT1, SLC19A1, BAZ2A, GRPEL1, UQCRC1, SLC25A10, COQ3, NDUFS3, SDHC, HADH, NKIRAS1, ECHS1, BCL2L13, NABP1, ACLY, MRPL15, YWHAG, CD36, AGPAT3, ECH1, CYC1, PEX14, GHITM, MDH2, SAMM50, DECR1, UQCRQ, TALDO1, MTCH2, ACADS, NDUFB7, AIFM1, UQCR11, PTCD3, CHCHD10 ## ALLOGRAFT REJECTION                                                                                                                                                                                                                                                                                                                                                                                                                                                                                IRF4, LYN, CCND2, IL16, IL12A, MRPL3, CD47, ABCE1, PRKCB, IL10, IL7, GZMB, NPM1, ETS1, NME1, BCL3, SIT1, IL2RA, CSK, RPS9, PSMB10, GLMN, ABI1 ## ANDROGEN RESPONSE                                                                                                                                                                                                                                                                                                                                                                                       PTK2B, PMEPA1, HERC3, ITGAV, ABCC4, SGK1, PTPN21, GUCY1A1, CAMKK2, ACTN1, ALDH1A3, CCND3, TPD52, STK39, CDC14B, CCND1, PLPP1, FADS1, ELOVL5, MAK, MERTK, HPGD, TSC22D1, BMPR1B, ZBTB10, MAF, ABHD2, PIAS1, MAP7, UBE2J1, HSD17B14, KRT19 ## ANGIOGENESIS                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 PTK2, ITGAV, POSTN, LUM, COL3A1, COL5A2, FSTL1, OLR1, FGFR1, VCAN, JAG1, JAG2, MSX1 ## APICAL JUNCTION     PTK2, VCL, EPB41L2, MMP2, CDH11, FBN1, COL16A1, EVL, PARVA, NF1, NLGN2, BMP1, EGFR, CERCAM, ACTN2, ACTN1, MYH9, JUP, SHC1, VCAN, TJP1, NECTIN3, FSCN1, PLCG1, WASL, LIMA1, THY1, CTNND1, THBS3, CDH6, LAMB3, IRS1, ADAM23, SHROOM2, MMP9, MYL9, MAPK14, MAPK13, CD276, ADAMTS5, CD86, SLIT2, TGFBI, GNAI1, GAMT, SIRPA, MSN, FLNC, BAIAP2, TRAF1, RSU1, CD99, JAM3, PCDH1, RHOF, SPEG, NEXN, STX4, ATP1A3, COL9A1, NEGR1, ICAM1, ALOX15B, AMH, ITGB1, TSC1, RRAS, CDH8, PTPRC, MDK, ZYX, CDH1, NLGN3, CDH3, NECTIN4, LAMC2, NFASC, SRC, CRAT, AKT3, DSC3, MAP4K2, MYH10, FYB1, EXOC4, LAYN, CTNNA1, TNFRSF11B, PKD1, LDLRAP1 ## APICAL SURFACE                                                                                                                                                                                                                                                                                                                                                                                                                                                                             EFNA5, CRYBG1, AKAP7, THY1, PKHD1, SHROOM2, DCBLD2, GAS1, GHRL, PLAUR, GSTM3, HSPB1, AFAP1L2, LYPD3, NTNG1, CROCC, ATP8B1, SRPX, MDGA1, GATA3, SCUBE1 ##                     Median.t_ABC_vs_GCB Direction_ABC_vs_GCB ES_ABC_vs_GCB ## ADIPOGENESIS                      -0.33                   Up          0.17 ## ALLOGRAFT REJECTION               -0.22                   Up          0.28 ## ANDROGEN RESPONSE                 -1.30                 Down         -0.28 ## ANGIOGENESIS                      -3.49                 Down         -0.56 ## APICAL JUNCTION                   -2.30                 Down         -0.42 ## APICAL SURFACE                    -2.96                 Down         -0.41 ##                     NES_ABC_vs_GCB P.Value_ABC_vs_GCB adj.P.Val_ABC_vs_GCB ## ADIPOGENESIS                  0.81       9.153094e-01         9.153094e-01 ## ALLOGRAFT REJECTION           1.30       4.038772e-02         7.479208e-02 ## ANDROGEN RESPONSE            -1.24       1.083123e-01         1.692380e-01 ## ANGIOGENESIS                 -2.00       3.674254e-04         1.224751e-03 ## APICAL JUNCTION              -2.10       3.324609e-09         1.385254e-08 ## APICAL SURFACE               -1.56       1.686440e-02         3.372879e-02 ##                     sign.P.Val_ABC_vs_GCB ## ADIPOGENESIS                   0.03843206 ## ALLOGRAFT REJECTION            1.39375064 ## ANDROGEN RESPONSE             -0.96532205 ## ANGIOGENESIS                  -3.43483079 ## APICAL JUNCTION               -8.47825941 ## APICAL SURFACE                -1.77302921 # ------------------------------------------------------------ Generate tables # with significant results # ------------------------------------------------------------   significant_gsea_list <- lapply(1:length(contrasts), function(i) {     # i = 1      contrast <- contrasts[i]      cat(paste0(\"\\n\\n### GSEA results for \", gsub(\"_\", \" \", contrast), \"\\n\\n\"))      # ------------------------------------------- up     # -------------------------------------------      direction <- \"up\"      topTable_up <- wrapper_dispaly_significant_gsea(topTable_gsea, contrast = contrast,         direction = direction, topn = 20, pval = pval, geneset_vars = geneset_vars,         direction_prefix = \"Direction\", pval_prefix = \"P.Value\", adjp_prefix = \"adj.P.Val\")      print(topTable_up)      ### Plot     if (nrow(topTable_up) > 0) {          genesets2plot <- genesets[bresults(topTable_up)$GenesetID]         names(genesets2plot) <- bresults(topTable_up)$GenesetID         title <- bcaption(topTable_up)          gsea_results <- bresults(topTable_up)          ggp <- wrapper_gsea_plot(topTable, genesets = genesets2plot, contrast = contrast,             title = title, gene_var = gene_var, gsea_results = gsea_results, geneset_var = \"GenesetID\")          print(ggp)      }      # ------------------------------------------- down     # -------------------------------------------      direction <- \"down\"      topTable_down <- wrapper_dispaly_significant_gsea(topTable_gsea, contrast = contrast,         direction = direction, topn = 20, pval = pval, geneset_vars = geneset_vars,         direction_prefix = \"Direction\", pval_prefix = \"P.Value\", adjp_prefix = \"adj.P.Val\")      print(topTable_down)      ### Plot     if (nrow(topTable_down) > 0) {          genesets2plot <- genesets[bresults(topTable_down)$GenesetID]         names(genesets2plot) <- bresults(topTable_down)$GenesetID         title <- bcaption(topTable_down)          gsea_results <- bresults(topTable_down)          ggp <- wrapper_gsea_plot(topTable, genesets = genesets2plot, contrast = contrast,             title = title, gene_var = gene_var, gsea_results = gsea_results, geneset_var = \"GenesetID\")          print(ggp)      }      significant_gsea <- c(bresults(topTable_up)$GenesetID, bresults(topTable_down)$GenesetID)   })"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Differential_Gene_Expression.html","id":"gsea-results-for-unclassified-vs-gcb","dir":"Articles","previous_headings":"Differential gene expression between cell of origin > Gene set enrichment analysis (GSEA)","what":"GSEA results for UNCLASSIFIED vs GCB","title":"Differential gene expression","text":"List gene sets enriched (adj.P.Val \\(<=\\) 0.05) -regulated genes comparing UNCLASSIFIED vs GCB. List gene sets enriched (adj.P.Val \\(<=\\) 0.05) -regulated genes comparing UNCLASSIFIED vs GCB.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Differential_Gene_Expression.html","id":"gsea-results-for-abc-vs-gcb","dir":"Articles","previous_headings":"Differential gene expression between cell of origin > Gene set enrichment analysis (GSEA)","what":"GSEA results for ABC vs GCB","title":"Differential gene expression","text":"List gene sets enriched (adj.P.Val \\(<=\\) 0.05) -regulated genes comparing ABC vs GCB. List gene sets enriched (adj.P.Val \\(<=\\) 0.05) -regulated genes comparing ABC vs GCB.","code":"names(significant_gsea_list) <- contrasts"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Differential_Gene_Expression.html","id":"gsea-summary","dir":"Articles","previous_headings":"Differential gene expression between cell of origin > Gene set enrichment analysis (GSEA)","what":"GSEA summary","title":"Differential gene expression","text":"","code":"############################################################################# GSEA ############################################################################# summary    significant_gsea <- unique(unlist(significant_gsea_list))  topTable_significant_gsea <- topTable_gsea[significant_gsea, , drop = FALSE]    data_lfc <- wrapper_extract_from_topTable(topTable_significant_gsea, extract_prefix = \"NES\")   if (ncol(data_lfc) > 1) {     # Cluster rows using hierarchical clustering     d <- dist(data_lfc, method = \"euclidean\")     cluster_rows <- hclust(d, method = \"complete\")     clustering_order <- cluster_rows$order } else {     cluster_rows <- FALSE     clustering_order <- 1:nrow(data_lfc) }   ### logFC_dotplot  wrapper_logFC_dotplot(topTable_significant_gsea[clustering_order, ], gene_var = \"GenesetID\",     lfc_prefix = \"NES\", pval_prefix = \"P.Value\", adjp_prefix = \"adj.P.Val\", axis_text_y_size = 10,     trim_values = 4, pval = pval, title = \"Gene Set Enrichment Analysis\") ### logFC_heatmap  wrapper_logFC_heatmap(topTable_significant_gsea, gene_var = \"GenesetID\", lfc_prefix = \"NES\",     adjp_prefix = \"adj.P.Val\", cluster_rows = cluster_rows, row_names_gp = grid::gpar(fontsize = 8,         lineheight = 0.8), trim_values = 4) sessionInfo() ## R version 4.4.1 (2024-06-14) ## Platform: x86_64-apple-darwin20 ## Running under: macOS Sonoma 14.6.1 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.4-x86_64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.4-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: Europe/Zurich ## tzcode source: internal ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] BiomarkerWrappers_0.0.0.60  msigdbr_7.5.1               ##  [3] edgeR_4.2.0                 limma_3.60.3                ##  [5] SummarizedExperiment_1.34.0 Biobase_2.64.0              ##  [7] GenomicRanges_1.56.1        GenomeInfoDb_1.40.1         ##  [9] IRanges_2.38.0              S4Vectors_0.42.0            ## [11] BiocGenerics_0.50.0         MatrixGenerics_1.16.0       ## [13] matrixStats_1.3.0           ggplot2_3.5.1               ## [15] kableExtra_1.4.0            rmarkdown_2.27              ## [17] knitr_1.47                  ##  ## loaded via a namespace (and not attached): ##   [1] polynom_1.4-1           formatR_1.14            rlang_1.1.4             ##   [4] magrittr_2.0.3          clue_0.3-65             GetoptLong_1.0.5        ##   [7] compiler_4.4.1          png_0.1-8               systemfonts_1.1.0       ##  [10] vctrs_0.6.5             stringr_1.5.1           pkgconfig_2.0.3         ##  [13] shape_1.4.6.1           crayon_1.5.3            fastmap_1.2.0           ##  [16] magick_2.8.3            XVector_0.44.0          labeling_0.4.3          ##  [19] utf8_1.2.4              UCSC.utils_1.0.0        ragg_1.3.2              ##  [22] purrr_1.0.2             xfun_0.45               zlibbioc_1.50.0         ##  [25] cachem_1.1.0            jsonlite_1.8.8          highr_0.11              ##  [28] DelayedArray_0.30.1     BiocParallel_1.38.0     parallel_4.4.1          ##  [31] cluster_2.1.6           R6_2.5.1                bslib_0.7.0             ##  [34] stringi_1.8.4           RColorBrewer_1.1-3      jquerylib_0.1.4         ##  [37] Rcpp_1.0.12             iterators_1.0.14        Matrix_1.7-0            ##  [40] splines_4.4.1           tidyselect_1.2.1        rstudioapi_0.16.0       ##  [43] abind_1.4-5             yaml_2.3.8              doParallel_1.0.17       ##  [46] codetools_0.2-20        plyr_1.8.9              lattice_0.22-6          ##  [49] tibble_3.2.1            withr_3.0.0             evaluate_0.24.0         ##  [52] desc_1.4.3              survival_3.7-0          ggpp_0.5.8              ##  [55] xml2_1.3.6              circlize_0.4.16         pillar_1.9.0            ##  [58] corrplot_0.92           foreach_1.5.2           generics_0.1.3          ##  [61] munsell_0.5.1           scales_1.3.0            glue_1.7.0              ##  [64] tools_4.4.1             data.table_1.15.4       fgsea_1.30.0            ##  [67] locfit_1.5-9.10         babelgene_22.9          fs_1.6.4                ##  [70] fastmatch_1.1-4         Cairo_1.6-2             cowplot_1.1.3           ##  [73] grid_4.4.1              tidyr_1.3.1             colorspace_2.1-0        ##  [76] GenomeInfoDbData_1.2.12 cli_3.6.3               textshaping_0.4.0       ##  [79] fansi_1.0.6             S4Arrays_1.4.1          viridisLite_0.4.2       ##  [82] svglite_2.1.3           ComplexHeatmap_2.20.0   dplyr_1.1.4             ##  [85] gtable_0.3.5            sass_0.4.9              digest_0.6.36           ##  [88] ggrepel_0.9.5           SparseArray_1.4.8       farver_2.1.2            ##  [91] rjson_0.2.21            htmlwidgets_1.6.4       memoise_2.0.1           ##  [94] htmltools_0.5.8.1       pkgdown_2.0.9           lifecycle_1.0.4         ##  [97] httr_1.4.7              GlobalOptions_0.1.2     statmod_1.5.0           ## [100] MASS_7.3-61"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load data","title":"Exploratory biomarker analysis","text":"bdata object contains random survival biomarker data. expected observe biologically meaningful associations. goal data sets solely demonstrate functionality package.","code":"data(bdata)    ### Dichotomize gene expression into low and high  genes <- c(\"BCL2\", \"GeneA\", \"GeneB\", \"GeneC\", \"GeneD\")  data_cat2 <- dplyr::mutate_all(bdata[, genes], wrapper_cut_2groups)  colnames(data_cat2) <- paste0(genes, \"_cat2\")   ### Stratify gene expression into quartiles  data_cat4 <- dplyr::mutate_all(bdata[, genes], wrapper_cut_quartiles)  colnames(data_cat4) <- paste0(genes, \"_cat4\")   bdata <- cbind(bdata, data_cat2, data_cat4)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"define-variable-names","dir":"Articles","previous_headings":"Load data","what":"Define variable names","title":"Exploratory biomarker analysis","text":"","code":"variable_names <- format_variable_names(bdata)  variable_names ##          Patient_ID                 Age                 Sex                 IPI  ##        \"Patient ID\"               \"Age\"               \"Sex\"               \"IPI\"  ##   Geographic_Region       Treatment_Arm                 PFS           PFS_Event  ## \"Geographic Region\"     \"Treatment Arm\"               \"PFS\"         \"PFS Event\"  ##            Response      Cell_Of_Origin         BCL2_by_IHC        BCL2_by_FISH  ##          \"Response\"    \"Cell Of Origin\"       \"BCL2 by IHC\"      \"BCL2 by FISH\"  ##                BCL2               GeneA               GeneB               GeneC  ##              \"BCL2\"             \"GeneA\"             \"GeneB\"             \"GeneC\"  ##               GeneD          BEP_RNAseq                 ORR           BCL2_cat2  ##             \"GeneD\"        \"BEP RNAseq\"               \"ORR\"         \"BCL2 cat2\"  ##          GeneA_cat2          GeneB_cat2          GeneC_cat2          GeneD_cat2  ##        \"GeneA cat2\"        \"GeneB cat2\"        \"GeneC cat2\"        \"GeneD cat2\"  ##           BCL2_cat4          GeneA_cat4          GeneB_cat4          GeneC_cat4  ##         \"BCL2 cat4\"        \"GeneA cat4\"        \"GeneB cat4\"        \"GeneC cat4\"  ##          GeneD_cat4  ##        \"GeneD cat4\" ### Adjust variable names  variable_names[[\"GeneA_cat2\"]] <- \"Gene A stratified by median\""},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"tile-plot","dir":"Articles","previous_headings":"","what":"Tile plot","title":"Exploratory biomarker analysis","text":"","code":"### Plot generated using geom_tile  wrapper_tile_plot1_core(bdata, y_vars = c(\"BCL2_by_IHC\", \"BCL2_by_FISH\")) cat(\"\\n\\n ------ \\n\\n\") ### Plot generated using geom_col. It has substantially smaller size when ### sample size is large.  wrapper_tile_plot2_core(bdata, y_vars = c(\"BCL2_by_IHC\", \"BCL2_by_FISH\"))"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"cox-regression","dir":"Articles","previous_headings":"","what":"Cox regression","title":"Exploratory biomarker analysis","text":"wrapper_cox_regression_core_simple(), covariate_vars Vector names covariates included formula simple additive model: ~ covariate_vars[1] + covariate_vars[2] + covariate_vars[3] + .... function core function used analysis, function called functions wrapper_cox_regression_biomarker wrapper_cox_regression_treatment. wrapper_cox_regression_biomarker wrapper_cox_regression_treatment, biomarker_vars vector biomarker names. biomarker separate Cox regression model fitted. results combined single table. wrapper_cox_regression_biomarker wrapper_cox_regression_treatment, adjustment_vars added additionally biomarker_vars treatment_var model, example, ~ biomarker_vars[] + treatment_var + adjustment_vars[1] + adjustment_vars[2] + ... adjustment_vars official stratification factors study plus variables want use adjustment, example, known prognostic factors. strata_vars, adjustment_vars. difference define strata_vars used Cox regression “true stratification factors” formula ~ biomarker_vars[] + treatment_var + strata(strata_vars[1] + strata_vars[2] + ...) See https://stats.stackexchange.com/questions/256148/stratification--cox-model strat1_var, strat2_var used split data (call split1_var, split2_var). analysis done within subgroups variables. example, strat2_var = \"PDL1\", Cox regression run separately within PDL1 low PDL1 high. Biomarker effect PFS. Adjusted, unstratified analysis. Cox regression model includes biomarker IPI.  Treatment effect PFS. Adjusted, unstratified analysis. Cox regression model includes treatment IPI.  Effect interaction biomarker treatment PFS. Adjusted, unstratified analysis. Cox regression model includes: biomarker, treatment IPI.","code":"### Biomarker effect  data <- bdata tte_var <- \"PFS\" censor_var <- \"PFS_Event\"  biomarker_vars <- c(\"GeneA_cat2\", \"GeneA\") adjustment_vars <- \"IPI\"  treatment_var = \"Treatment_Arm\"   wrapper_cox_regression_biomarker(data, tte_var = tte_var, censor_var = censor_var,     biomarker_vars = biomarker_vars, adjustment_vars = adjustment_vars, treatment_var = treatment_var) ## To represent the results with a forest plot  x <- wrapper_cox_regression_biomarker(data, tte_var = tte_var, censor_var = censor_var,     biomarker_vars = biomarker_vars, adjustment_vars = adjustment_vars, treatment_var = treatment_var,     print_total = FALSE, print_adjpvalues = FALSE)  bforest(x) ### Treatment effect within biomarker subgroups  data <- bdata tte_var <- \"PFS\" censor_var <- \"PFS_Event\"  treatment_var = \"Treatment_Arm\" biomarker_vars <- c(\"GeneA_cat2\", \"GeneB_cat2\") adjustment_vars <- \"IPI\"   wrapper_cox_regression_treatment(data, tte_var = tte_var, censor_var = censor_var,     treatment_var = treatment_var, biomarker_vars = biomarker_vars, adjustment_vars = adjustment_vars) ## To represent the results with a forest plot  x <- wrapper_cox_regression_treatment(data, tte_var = tte_var, censor_var = censor_var,     treatment_var = treatment_var, biomarker_vars = biomarker_vars, adjustment_vars = adjustment_vars,     print_total = FALSE, print_adjpvalues = FALSE)   bforest(x) ### Treatment-biomarker interaction effect   data <- bdata tte_var <- \"PFS\" censor_var <- \"PFS_Event\"  treatment_var = \"Treatment_Arm\" biomarker_vars <- c(\"GeneA_cat2\", \"GeneA\") adjustment_vars <- \"IPI\"    wrapper_cox_regression_interaction(data, tte_var, censor_var, treatment_var = treatment_var,     biomarker_vars = biomarker_vars, adjustment_vars = adjustment_vars)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"log-rank-test","dir":"Articles","previous_headings":"","what":"Log-rank test","title":"Exploratory biomarker analysis","text":"Biomarker effect PFS. Unstratified log-rank test. Treatment effect PFS. Unstratified log-rank test. Treatment effect PFS. Unstratified log-rank test.","code":"### Biomarker effect  data <- bdata tte_var <- \"PFS\" censor_var <- \"PFS_Event\"  biomarker_vars <- c(\"GeneA_cat2\", \"GeneB_cat2\") treatment_var = \"Treatment_Arm\"   wrapper_log_rank_test_biomarker(data, tte_var = tte_var, censor_var = censor_var,     biomarker_vars = biomarker_vars, treatment_var = treatment_var) ### Treatment effect within biomarker subgroups   data <- bdata tte_var <- \"PFS\" censor_var <- \"PFS_Event\"  treatment_var = \"Treatment_Arm\" biomarker_vars <- c(\"GeneA_cat2\", \"GeneB_cat2\")   wrapper_log_rank_test_treatment(data, tte_var = tte_var, censor_var = censor_var,     treatment_var = treatment_var, biomarker_vars = biomarker_vars) x <- wrapper_log_rank_test_treatment(data, tte_var = tte_var, censor_var = censor_var,     treatment_var = treatment_var, biomarker_vars = biomarker_vars, print_nevent = FALSE,     print_mst = FALSE, print_total = FALSE)   bkable(x) bforest(x)"},{"path":[]},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"core","dir":"Articles","previous_headings":"KM plot","what":"Core","title":"Exploratory biomarker analysis","text":"","code":"data <- bdata  tte_var <- \"PFS\" censor_var <- \"PFS_Event\" covariate_var <- \"Treatment_Arm\"   wrapper_KM_plot_core(data = data, tte_var = tte_var, censor_var = censor_var, covariate_var = covariate_var)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"core-stratified","dir":"Articles","previous_headings":"KM plot","what":"Core stratified","title":"Exploratory biomarker analysis","text":"","code":"data <- bdata tte_var <- \"PFS\" censor_var <- \"PFS_Event\" covariate_var <- \"GeneA_cat2\"  strat1_var = \"Treatment_Arm\" strat2_var = \"Cell_Of_Origin\"   wrapper_KM_plot_core_strat(data = data, tte_var = tte_var, censor_var = censor_var,     covariate_var = covariate_var, strat1_var = strat1_var, strat2_var = strat2_var,     linetypes = c(2, 1))"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"display-tables-with-cox-regression-results","dir":"Articles","previous_headings":"KM plot","what":"Display tables with Cox regression results","title":"Exploratory biomarker analysis","text":"","code":"### Display results from Cox regression as table on the KM plot  data <- bdata  tte_var <- \"PFS\" censor_var <- \"PFS_Event\" biomarker_var <- \"GeneA_cat2\"   x <- wrapper_cox_regression_biomarker(data, tte_var = tte_var, censor_var = censor_var,     biomarker_vars = biomarker_var, print_total = FALSE, print_adjpvalues = FALSE)   tb <- boutput(x)[, -c(1)]  tb <- tibble::tibble(x = 1, y = 1, label = list(tb))   ggp <- wrapper_KM_plot_core(data = data, tte_var = tte_var, censor_var = censor_var,     covariate_var = biomarker_var)  ggp + ggpp::geom_table_npc(data = tb, aes(npcx = x, npcy = y, label = label), size = 3,     hjust = 1, vjust = 1, table.theme = ggpp::ttheme_gtminimal) ### Display results from Cox regression as table on the KM plot using one-level ### stratification  data <- bdata  tte_var <- \"PFS\" censor_var <- \"PFS_Event\" biomarker_var <- \"GeneA_cat2\" treatment_var = \"Treatment_Arm\"   x <- wrapper_cox_regression_biomarker(data, tte_var = tte_var, censor_var = censor_var,     biomarker_vars = biomarker_var, treatment_var = treatment_var, print_total = FALSE,     print_adjpvalues = FALSE)  ### To have the same level order  bresults(x)[[treatment_var]] <- factor(bresults(x)[[treatment_var]], levels = levels(data[,     treatment_var]))   tb <- boutput(x)[, -c(1, 2)]  tb <- split(tb, bresults(x)[[treatment_var]])  tb <- tibble::tibble(x = seq_len(nlevels(data[, treatment_var]))/nlevels(data[, treatment_var]),     y = 1, label = tb)   ggp <- wrapper_KM_plot_core_strat(data = data, tte_var = tte_var, censor_var = censor_var,     covariate_var = biomarker_var, strat1_var = treatment_var)  ggp + ggpp::geom_table_npc(data = tb, aes(npcx = x, npcy = y, label = label), size = 3,     hjust = 1, vjust = 1, table.theme = ggpp::ttheme_gtminimal) ### Display results from Cox regression as table on the KM plot using two-level ### stratification  data <- bdata  tte_var <- \"PFS\" censor_var <- \"PFS_Event\" biomarker_var <- \"GeneA_cat2\" treatment_var = \"Treatment_Arm\"  strat2_var <- \"Cell_Of_Origin\"   x <- wrapper_cox_regression_biomarker(data, tte_var = tte_var, censor_var = censor_var,     biomarker_vars = biomarker_var, treatment_var = treatment_var, strat2_var = strat2_var,     print_total = FALSE, print_adjpvalues = FALSE)  ### To have the same level order  bresults(x)[[treatment_var]] <- factor(bresults(x)[[treatment_var]], levels = levels(data[,     treatment_var])) bresults(x)[[strat2_var]] <- factor(bresults(x)[[strat2_var]], levels = levels(data[,     strat2_var]))   tb <- boutput(x)[, -c(1, 2, 3)]  tb <- split(tb, list(bresults(x)[[treatment_var]], bresults(x)[[strat2_var]]))  tb <- tibble::tibble(x = rep(seq_len(nlevels(data[, treatment_var]))/nlevels(data[,     treatment_var]), times = nlevels(data[, strat2_var])), y = rep(rev(seq_len(nlevels(data[,     strat2_var]))/nlevels(data[, strat2_var])), each = nlevels(data[, treatment_var])),     label = tb)   ggp <- wrapper_KM_plot_core_strat(data = data, tte_var = tte_var, censor_var = censor_var,     covariate_var = biomarker_var, strat1_var = treatment_var, strat2_var = strat2_var,     strat1_label_both = FALSE, strat2_label_both = FALSE)  ggp + ggpp::geom_table_npc(data = tb, aes(npcx = x, npcy = y, label = label), size = 3,     hjust = 1, vjust = 1, table.theme = ggpp::ttheme_gtminimal)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"curves-per-treatment-arm-and-biomarker-subgroups-in-one-plot","dir":"Articles","previous_headings":"KM plot","what":"Curves per treatment arm and biomarker subgroups in one plot","title":"Exploratory biomarker analysis","text":"","code":"data <- bdata tte_var <- \"PFS\" censor_var <- \"PFS_Event\"  biomarker_var <- \"GeneA_cat2\" treatment_var = \"Treatment_Arm\"   wrapper_KM_plot_interaction(data, tte_var = tte_var, censor_var = censor_var, biomarker_var = biomarker_var,     treatment_var = treatment_var) wrapper_KM_plot_interaction(data, tte_var = tte_var, censor_var = censor_var, biomarker_var = biomarker_var,     treatment_var = treatment_var, colors = c(\"blue\", \"blue2\", \"red\", \"red2\"), linetypes = c(2,         1, 2, 1), line_size = 0.5)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"biomarker-effect-per-treatment-arm","dir":"Articles","previous_headings":"KM plot","what":"Biomarker effect per treatment arm","title":"Exploratory biomarker analysis","text":"","code":"data <- bdata tte_var <- \"PFS\" censor_var <- \"PFS_Event\"  biomarker_var <- \"GeneA_cat2\" treatment_var = \"Treatment_Arm\"   wrapper_KM_plot_biomarker(data, tte_var = tte_var, censor_var = censor_var, biomarker_var = biomarker_var,     treatment_var = treatment_var)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"treatment-effect-per-biomarker-subgroup","dir":"Articles","previous_headings":"KM plot","what":"Treatment effect per biomarker subgroup","title":"Exploratory biomarker analysis","text":"","code":"data <- bdata tte_var <- \"PFS\" censor_var <- \"PFS_Event\"  biomarker_var <- \"GeneA_cat2\" treatment_var = \"Treatment_Arm\"   wrapper_KM_plot_treatment(data, tte_var = tte_var, censor_var = censor_var, biomarker_var = biomarker_var,     treatment_var = treatment_var)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"logistic-regression","dir":"Articles","previous_headings":"","what":"Logistic regression","title":"Exploratory biomarker analysis","text":"Biomarker effect ORR. Adjusted analysis. Logistic regression model includes biomarker IPI. Treatment effect ORR. Adjusted analysis. Logistic regression model includes treatment IPI. Effect interaction biomarker treatment ORR.Adjusted analysis. Logistic regression model includes biomarker, treatment IPI.","code":"### Biomarker effect  data <- bdata response_var <- \"ORR\"  biomarker_vars <- c(\"GeneA_cat2\", \"GeneA\") treatment_var = \"Treatment_Arm\" adjustment_vars <- \"IPI\"   wrapper_logistic_regression_biomarker(data, response_var = response_var, biomarker_vars = biomarker_vars,     adjustment_vars = adjustment_vars, treatment_var = treatment_var) ### Treatment effect within biomarker subgroups  data <- bdata response_var <- \"ORR\"  treatment_var = \"Treatment_Arm\" biomarker_vars <- c(\"GeneA_cat2\", \"GeneB_cat2\") adjustment_vars <- \"IPI\"   wrapper_logistic_regression_treatment(data, response_var = response_var, treatment_var = treatment_var,     biomarker_vars = biomarker_vars, adjustment_vars = adjustment_vars) ### Treatment-biomarker interaction effect   data <- bdata response_var <- \"ORR\"  treatment_var = \"Treatment_Arm\" biomarker_vars <- c(\"GeneA_cat2\", \"GeneA\") adjustment_vars <- \"IPI\"    wrapper_logistic_regression_interaction(data, response_var = response_var, treatment_var = treatment_var,     biomarker_vars = biomarker_vars, adjustment_vars = adjustment_vars)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"pearsons-test","dir":"Articles","previous_headings":"","what":"Pearson’s test","title":"Exploratory biomarker analysis","text":"Biomarker effect ORR. Unstratified Pearson’s Chi-squared test. Treatment effect ORR. Unstratified Pearson’s Chi-squared test.","code":"### Biomarker effect  data <- bdata response_var <- \"ORR\"  biomarker_vars <- c(\"GeneA_cat2\") treatment_var = \"Treatment_Arm\"  wrapper_pearsons_test_biomarker(data, response_var = response_var, biomarker_vars = biomarker_vars,     treatment_var = treatment_var) ### Treatment effect within biomarker subgroups   data <- bdata response_var <- \"ORR\"  biomarker_vars <- c(\"GeneA_cat2\") treatment_var = \"Treatment_Arm\"  wrapper_pearsons_test_treatment(data, response_var = response_var, biomarker_vars = biomarker_vars,     treatment_var = treatment_var)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"cochran-mantel-haenszel-chi-squared-test","dir":"Articles","previous_headings":"","what":"Cochran-Mantel-Haenszel Chi-Squared Test","title":"Exploratory biomarker analysis","text":"Biomarker effect ORR. Stratified Cochran-Mantel-Haenszel Chi-squared test. Stratification factors: IPI. Treatment effect ORR. Stratified Cochran-Mantel-Haenszel Chi-squared test. Stratification factors: IPI.","code":"### Biomarker effect  data <- bdata response_var <- \"ORR\"  biomarker_vars <- c(\"GeneA_cat2\") treatment_var = \"Treatment_Arm\" strata_vars <- \"IPI\"   wrapper_pearsons_test_biomarker(data, response_var = response_var, biomarker_vars = biomarker_vars,     treatment_var = treatment_var, strata_vars = strata_vars) ### Treatment effect within biomarker subgroups   data <- bdata response_var <- \"ORR\"  biomarker_vars <- c(\"GeneA_cat2\") treatment_var = \"Treatment_Arm\" strata_vars <- \"IPI\"   wrapper_pearsons_test_treatment(data, response_var = response_var, biomarker_vars = biomarker_vars,     treatment_var = treatment_var, strata_vars = strata_vars)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"barplot-response","dir":"Articles","previous_headings":"","what":"Barplot response","title":"Exploratory biomarker analysis","text":"","code":"### Biomarker effect  data <- bdata response_var <- \"ORR\"  biomarker_var <- \"GeneA_cat2\" treatment_var = \"Treatment_Arm\"   wrapper_bar_plot_biomarker(data, response_var = response_var, biomarker_var = biomarker_var,     treatment_var = treatment_var, variable_names = variable_names, less_legends = TRUE,     ylab = \"ORR Proportion (%)\", strat1_label_both = FALSE, legend_colors_title = FALSE) ### Treatment effect  data <- bdata response_var <- \"ORR\"  biomarker_var <- \"GeneA_cat2\" treatment_var = \"Treatment_Arm\"   wrapper_bar_plot_treatment(data, response_var = response_var, biomarker_var = biomarker_var,     treatment_var = treatment_var, variable_names = variable_names, less_legends = TRUE,     ylab = \"R Proportion (%)\", strat1_label_both = FALSE, legend_colors_title = FALSE,     skip_levels = c(\"NR\"), legend_position = \"none\")"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"barplot","dir":"Articles","previous_headings":"","what":"Barplot","title":"Exploratory biomarker analysis","text":"","code":"data <- bdata  x_var = \"GeneA_cat2\" y_var = \"Response\"   wrapper_bar_plot_core(data = data, x_var = x_var, y_var = y_var) wrapper_bar_plot_core(data = data, x_var = x_var, y_var = y_var, y_type = \"Count\") wrapper_bar_plot_core(data = data, x_var = y_var, y_var = x_var, y_type = \"Proportion\") wrapper_bar_plot_core(data = data, x_var = y_var, y_var = x_var, y_type = \"Count\") data <- bdata  x_var = \"GeneA_cat2\" y_var = \"Response\" skip_levels <- c(\"NE\", \"PD\", \"SD\") show_subtotal_proportions <- TRUE  wrapper_bar_plot_core(data = data, x_var = x_var, y_var = y_var, show_subtotal_proportions = show_subtotal_proportions,     skip_levels = skip_levels, ylim = c(0, 100))"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"stratified","dir":"Articles","previous_headings":"Barplot","what":"Stratified","title":"Exploratory biomarker analysis","text":"","code":"data <- bdata  x_var = \"GeneA_cat2\" y_var = \"Response\" facet_var <- \"Treatment_Arm\"   wrapper_bar_plot_core(data = data, x_var = x_var, y_var = y_var, facet_var = facet_var) data <- bdata  x_var = \"GeneA_cat2\" y_var = \"Response\"  strat1_var = \"Treatment_Arm\" strat2_var = \"Cell_Of_Origin\"   wrapper_bar_plot_core_strat(data = data, x_var = x_var, y_var = y_var, strat1_var = strat1_var,     strat2_var = strat2_var) wrapper_bar_plot_core_strat(data = data, x_var = x_var, y_var = y_var, strat1_var = strat1_var,     strat2_var = strat2_var, less_legends = TRUE)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"complex-barplot","dir":"Articles","previous_headings":"","what":"Complex barplot","title":"Exploratory biomarker analysis","text":"","code":"data <- bdata  x_var <- \"Cell_Of_Origin\" y_vars <- c(\"GeneA_cat2\", \"GeneB_cat2\", \"GeneC_cat2\")   wrapper_bar_plot_yvars_core_strat(data, x_var = x_var, y_vars = y_vars, values_to = \"Gene expression\") data <- bdata  x_var <- \"Cell_Of_Origin\" y_vars <- c(\"GeneA_cat2\", \"GeneB_cat2\", \"GeneC_cat2\")  skip_levels <- \"low\" method <- \"dodge\"   wrapper_bar_plot_yvars_core_strat(data, x_var = x_var, y_vars = y_vars, skip_levels = skip_levels,     method = method, values_to = \"Gene expression\", names_to = \"Gene\")"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"fishers-test","dir":"Articles","previous_headings":"","what":"Fisher’s test","title":"Exploratory biomarker analysis","text":"Fisher’s exact test. Fisher’s exact test.","code":"data <- bdata  col_var <- \"Cell_Of_Origin\" row_vars <- c(\"GeneA_cat2\", \"GeneB_cat2\", \"GeneC_cat2\")   wrapper_fishers_test(data, col_var = col_var, row_vars = row_vars) wrapper_fishers_test(data, col_var = col_var, row_vars = row_vars, margin = 2)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"box-plot","dir":"Articles","previous_headings":"","what":"Box plot","title":"Exploratory biomarker analysis","text":"","code":"data <- bdata  x_var <- \"Cell_Of_Origin\" y_var <- \"GeneA\"   wrapper_box_plot_core(data = data, x_var = x_var, y_var = y_var)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"stratified-1","dir":"Articles","previous_headings":"Box plot","what":"Stratified","title":"Exploratory biomarker analysis","text":"","code":"data <- bdata  x_var <- \"Cell_Of_Origin\" y_var <- \"GeneA\" facet_var <- \"Treatment_Arm\" dodge_var = NULL   wrapper_box_plot_core(data = data, x_var = x_var, y_var = y_var, facet_var = facet_var,     dodge_var = dodge_var) data <- bdata  x_var <- \"Treatment_Arm\" y_var <- \"GeneA\" facet_var <- NULL dodge_var = \"Cell_Of_Origin\"   wrapper_box_plot_core(data = data, x_var = x_var, y_var = y_var, facet_var = facet_var,     dodge_var = dodge_var) data <- bdata  x_var <- \"Cell_Of_Origin\" y_var <- \"GeneA\"   strat1_var = \"Treatment_Arm\"   wrapper_box_plot_core_strat(data = data, x_var = x_var, y_var = y_var, strat1_var = strat1_var)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"complex-boxplot","dir":"Articles","previous_headings":"","what":"Complex boxplot","title":"Exploratory biomarker analysis","text":"","code":"data <- bdata y_vars <- c(\"GeneA\", \"GeneB\", \"GeneC\")   wrapper_box_plot_yvars_core_strat(data, y_vars = y_vars) data <- bdata y_vars <- c(\"GeneA\", \"GeneB\", \"GeneC\")  x_var = \"Cell_Of_Origin\" facet_var = NULL dodge_var = NULL   wrapper_box_plot_yvars_core_strat(data, y_vars = y_vars, x_var = x_var, facet_var = facet_var,     dodge_var = dodge_var) data <- bdata y_vars <- c(\"GeneA\", \"GeneB\", \"GeneC\")  x_var = NULL facet_var = NULL dodge_var = \"Cell_Of_Origin\"   wrapper_box_plot_yvars_core_strat(data, y_vars = y_vars, x_var = x_var, facet_var = facet_var,     dodge_var = dodge_var)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"kruskalwallis-h-test","dir":"Articles","previous_headings":"","what":"Kruskal–Wallis H test","title":"Exploratory biomarker analysis","text":"Kruskal-Wallis H test. Kruskal-Wallis H test. Kruskal-Wallis H test.","code":"data <- bdata  cat_vars <- \"Cell_Of_Origin\" num_vars <- c(\"GeneA\", \"GeneB\")   wrapper_kruskal_test(data, num_vars = num_vars, cat_vars = cat_vars) wrapper_kruskal_test(data, num_vars = num_vars, cat_vars = cat_vars, print_pvalues = FALSE) data <- bdata  cat_vars <- c(\"Cell_Of_Origin\", \"IPI\", \"Treatment_Arm\") num_vars <- \"GeneA\"   wrapper_kruskal_test(data, num_vars = num_vars, cat_vars = cat_vars)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"point-plot","dir":"Articles","previous_headings":"","what":"Point plot","title":"Exploratory biomarker analysis","text":"","code":"data <- bdata  x_var <- \"GeneA\" y_var <- \"GeneB\"   wrapper_point_plot_core(data = data, x_var = x_var, y_var = y_var)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"stratified-2","dir":"Articles","previous_headings":"Point plot","what":"Stratified","title":"Exploratory biomarker analysis","text":"","code":"data <- bdata  x_var <- \"GeneA\" y_var <- \"GeneB\" facet_var <- \"Treatment_Arm\" color_point_var <- \"Cell_Of_Origin\"   wrapper_point_plot_core(data = data, x_var = x_var, y_var = y_var, facet_var = facet_var,     color_point_var = color_point_var) data <- bdata  x_var <- \"GeneD\" y_var <- \"GeneB\" facet_var <- \"Treatment_Arm\" strat1_var <- \"Cell_Of_Origin\"   wrapper_point_plot_core_strat(data = data, x_var = x_var, y_var = y_var, facet_var = facet_var,     strat1_var = strat1_var)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/articles/Exploratory_Biomarker_Analysis.html","id":"characteristics-of-itt-and-bep","dir":"Articles","previous_headings":"","what":"Characteristics of ITT and BEP","title":"Exploratory biomarker analysis","text":"","code":"data <- bdata  strat_var <- \"Treatment_Arm\" covariate_vars <- c(\"Age\", \"IPI\")   wrapper_characteristics_core(data, strat_var = strat_var, covariate_vars = covariate_vars) bep_vars <- \"BEP_RNAseq\" covariate_vars <- c(\"Age\", \"IPI\")  treatment_var <- \"Treatment_Arm\" itt_name = \"ITT\"   wrapper_characteristics_bep(data, covariate_vars = covariate_vars, bep_vars = bep_vars,     treatment_var = treatment_var, itt_name = itt_name) sessionInfo() ## R version 4.4.1 (2024-06-14) ## Platform: x86_64-apple-darwin20 ## Running under: macOS Sonoma 14.6.1 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.4-x86_64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.4-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: Europe/Zurich ## tzcode source: internal ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] BiomarkerWrappers_0.0.0.60 ggplot2_3.5.1              ## [3] kableExtra_1.4.0           rmarkdown_2.27             ## [5] knitr_1.47                 ##  ## loaded via a namespace (and not attached): ##   [1] polynom_1.4-1         gridExtra_2.3         formatR_1.14          ##   [4] rlang_1.1.4           magrittr_2.0.3        clue_0.3-65           ##   [7] GetoptLong_1.0.5      matrixStats_1.3.0     compiler_4.4.1        ##  [10] png_0.1-8             systemfonts_1.1.0     vctrs_0.6.5           ##  [13] stringr_1.5.1         pkgconfig_2.0.3       shape_1.4.6.1         ##  [16] crayon_1.5.3          fastmap_1.2.0         backports_1.5.0       ##  [19] labeling_0.4.3        KMsurv_0.1-5          utf8_1.2.4            ##  [22] markdown_1.13         forestplot_3.1.3      ggbeeswarm_0.7.2      ##  [25] ragg_1.3.2            purrr_1.0.2           xfun_0.45             ##  [28] cachem_1.1.0          jsonlite_1.8.8        highr_0.11            ##  [31] broom_1.0.6           parallel_4.4.1        cluster_2.1.6         ##  [34] R6_2.5.1              bslib_0.7.0           stringi_1.8.4         ##  [37] RColorBrewer_1.1-3    limma_3.60.3          car_3.1-2             ##  [40] jquerylib_0.1.4       Rcpp_1.0.12           iterators_1.0.14      ##  [43] zoo_1.8-12            IRanges_2.38.0        Matrix_1.7-0          ##  [46] splines_4.4.1         tidyselect_1.2.1      rstudioapi_0.16.0     ##  [49] abind_1.4-5           yaml_2.3.8            ggtext_0.1.2          ##  [52] doParallel_1.0.17     codetools_0.2-20      lattice_0.22-6        ##  [55] tibble_3.2.1          plyr_1.8.9            withr_3.0.0           ##  [58] evaluate_0.24.0       desc_1.4.3            survival_3.7-0        ##  [61] ggpp_0.5.8            xml2_1.3.6            circlize_0.4.16       ##  [64] survMisc_0.5.6        pillar_1.9.0          ggpubr_0.6.0          ##  [67] carData_3.0-5         checkmate_2.3.1       foreach_1.5.2         ##  [70] stats4_4.4.1          generics_0.1.3        S4Vectors_0.42.0      ##  [73] commonmark_1.9.1      munsell_0.5.1         scales_1.3.0          ##  [76] xtable_1.8-4          glue_1.7.0            survminer_0.4.9       ##  [79] tools_4.4.1           data.table_1.15.4     ggsignif_0.6.4        ##  [82] fs_1.6.4              cowplot_1.1.3         grid_4.4.1            ##  [85] tidyr_1.3.1           colorspace_2.1-0      beeswarm_0.4.0        ##  [88] vipor_0.4.7           cli_3.6.3             km.ci_0.5-6           ##  [91] textshaping_0.4.0     fansi_1.0.6           viridisLite_0.4.2     ##  [94] svglite_2.1.3         ComplexHeatmap_2.20.0 dplyr_1.1.4           ##  [97] gtable_0.3.5          rstatix_0.7.2         sass_0.4.9            ## [100] digest_0.6.36         BiocGenerics_0.50.0   rjson_0.2.21          ## [103] htmlwidgets_1.6.4     farver_2.1.2          memoise_2.0.1         ## [106] htmltools_0.5.8.1     pkgdown_2.0.9         lifecycle_1.0.4       ## [109] GlobalOptions_0.1.2   statmod_1.5.0         gridtext_0.1.5        ## [112] MASS_7.3-61"},{"path":"https://gosianow.github.io/BiomarkerWrappers/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Malgorzata Nowicka. Author, maintainer.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nowicka M (2024). BiomarkerWrappers: Suite wrapper functions exploratory biomarker analysis. R package version 0.0.0.60.","code":"@Manual{,   title = {BiomarkerWrappers: Suite of wrapper functions for exploratory biomarker analysis},   author = {Malgorzata Nowicka},   year = {2024},   note = {R package version 0.0.0.60}, }"},{"path":"https://gosianow.github.io/BiomarkerWrappers/index.html","id":"overview","dir":"","previous_headings":"","what":"Suite of wrapper functions for exploratory biomarker analysis","title":"Suite of wrapper functions for exploratory biomarker analysis","text":"BiomarkerWrappers R package contains wrapper functions perform exploratory biomarker analyses. Source code: https://github.com/gosianow/BiomarkerWrappers Project page: https://gosianow.github.io/BiomarkerWrappers/","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Suite of wrapper functions for exploratory biomarker analysis","text":"install package R, use install_github() function devtools package. Type following need install devtools: install BiomarkerWrappers:","code":"install.packages(\"devtools\") devtools::install_github(\"gosianow/BiomarkerWrappers\")"},{"path":"https://gosianow.github.io/BiomarkerWrappers/index.html","id":"note","dir":"","previous_headings":"","what":"Note","title":"Suite of wrapper functions for exploratory biomarker analysis","text":"BiomarkerWrappers heavy development. lacks comprehensive documentation vignette. way.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/Bclass-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Bclass object — Bclass-class","title":"Bclass object — Bclass-class","text":"Bclass object container results generated wrappers.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/Bclass-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bclass object — Bclass-class","text":"","code":"bkable(x, ...)  bforest(x, ...)  bresults(x, ...)  # S4 method for Bclass bresults(x)  # S4 method for NULL bresults(x)  bresults(x) <- value  # S4 method for Bclass bresults(x) <- value  boutput(x, ...)  # S4 method for Bclass boutput(x)  # S4 method for NULL boutput(x)  boutput(x) <- value  # S4 method for Bclass boutput(x) <- value  bcaption(x, ...)  # S4 method for Bclass bcaption(x)  # S4 method for NULL bcaption(x)  bcaption(x) <- value  # S4 method for Bclass bcaption(x) <- value  bheader(x, ...)  # S4 method for Bclass bheader(x)  # S4 method for NULL bheader(x)  bheader(x) <- value  # S4 method for Bclass bheader(x) <- value  # S4 method for Bclass dim(x)  # S4 method for Bclass nrow(x)  # S4 method for Bclass ncol(x)  # S4 method for Bclass colnames(x)  # S4 method for Bclass colnames(x) <- value  # S4 method for Bclass rownames(x)  # S4 method for Bclass rownames(x) <- value  # S4 method for Bclass,ANY [[(x, i, j)  # S4 method for Bclass $(x, name)  # S4 method for Bclass,ANY,ANY,ANY [(x, i, j)  # S4 method for Bclass rbind(..., deparse.level = 1)  # S4 method for Bclass cbind(..., deparse.level = 1)  # S4 method for BclassCharacteristics bkable(x, caption = NULL, header = NULL, font_size = NULL, full_width = NULL)  # S4 method for BclassDE bkable(x, caption = NULL, header = NULL, font_size = NULL, full_width = NULL)  # S4 method for BclassTesting bkable(   x,   caption = NULL,   header = NULL,   block_vars = NULL,   font_size = NULL,   full_width = NULL )  # S4 method for BclassTesting bforest(   x,   mean_var = NULL,   lower_var = NULL,   upper_var = NULL,   block_vars = NULL,   xlab = NULL,   xlog = FALSE,   clip = NULL,   xticks = NULL,   xticks_by = NULL,   lineheight = \"auto\",   label_fontsize = 14,   caption_width = 150,   shapes_gp = forestplot::fpShapesGp() )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/Bclass-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bclass object — Bclass-class","text":"value New values. object, x Bclass object.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/Bclass-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bclass object — Bclass-class","text":"Methods: bresults(x): Get data frame results. boutput(x): Get data frame output dispalyed kable. bcaption(x): Get string caption displayed kable. bheader(x): Get vector header displayed kable. bkable(x): Display output kable. bforest(x): Generate forest plot. Inheriting classes: Bclass","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/Bclass-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Bclass object — Bclass-class","text":"results Data frame results. output Data frame output dispalyed kable. caption String caption displayed table. header Names integer vector header displayed table.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/Bclass-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bclass object — Bclass-class","text":"Malgorzata Nowicka","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/calculate_break_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate break time used in KM plots — calculate_break_time","title":"Calculate break time used in KM plots — calculate_break_time","text":"Calculate break time used KM plots","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/calculate_break_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate break time used in KM plots — calculate_break_time","text":"","code":"calculate_break_time(x, n_breaks = 10)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/calculate_break_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate break time used in KM plots — calculate_break_time","text":"x Vector time--event data. n_breaks Number breaks.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/calculate_break_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate break time used in KM plots — calculate_break_time","text":"","code":"if (FALSE) { data(bdata)  calculate_break_time(bdata$PFS) }"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/compute_lower_whisker.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute lower whisker — compute_lower_whisker","title":"Compute lower whisker — compute_lower_whisker","text":"Compute lower whisker","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/compute_lower_whisker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute lower whisker — compute_lower_whisker","text":"","code":"compute_lower_whisker(x, range = 1.5)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/compute_lower_whisker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute lower whisker — compute_lower_whisker","text":"x Vector data","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/compute_lower_whisker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute lower whisker — compute_lower_whisker","text":"Lower whisker","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/compute_lower_whisker.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute lower whisker — compute_lower_whisker","text":"info whiskers see https://www.r-bloggers.com/2012/06/whisker--boxplot/","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/compute_trim_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute trimming values and trim data to a specified range — compute_trim_values","title":"Compute trimming values and trim data to a specified range — compute_trim_values","text":"Compute trimming values trim data specified range","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/compute_trim_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute trimming values and trim data to a specified range — compute_trim_values","text":"","code":"compute_trim_values(   x,   centered = FALSE,   trim_prop = NULL,   trim_range = NULL,   ceiling = FALSE )  apply_trim_values(   x,   centered = FALSE,   trim_values = NULL,   trim_prop = NULL,   trim_range = NULL,   ceiling = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/compute_trim_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute trimming values and trim data to a specified range — compute_trim_values","text":"x Vector matrix continuous values trimmed. centered Logical. data z-score scaled, trimming ranges made symmetric. Default value FALSE. trim_values Vector length two defining upper lower limits, respectively. NULL, trim_prop trim_range must specified derive trim_values using compute_trim_values.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/compute_trim_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute trimming values and trim data to a specified range — compute_trim_values","text":"Vector length two data range used trimming. Vector matrix values outside specified range squished.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/compute_trim_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute trimming values and trim data to a specified range — compute_trim_values","text":"","code":"set.seed(123)  x <- rnorm(10)  x #>  [1] -0.56047565 -0.23017749  1.55870831  0.07050839  0.12928774  1.71506499 #>  [7]  0.46091621 -1.26506123 -0.68685285 -0.44566197  apply_trim_values(x, trim_values = 1) #>  [1] 1.000000 1.000000 1.558708 1.000000 1.000000 1.715065 1.000000 1.000000 #>  [9] 1.000000 1.000000"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/compute_upper_whisker.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute upper whisker — compute_upper_whisker","title":"Compute upper whisker — compute_upper_whisker","text":"Compute upper whisker","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/compute_upper_whisker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute upper whisker — compute_upper_whisker","text":"","code":"compute_upper_whisker(x, range = 1.5)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/compute_upper_whisker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute upper whisker — compute_upper_whisker","text":"x Vector data","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/compute_upper_whisker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute upper whisker — compute_upper_whisker","text":"Upper whisker","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/compute_upper_whisker.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute upper whisker — compute_upper_whisker","text":"info whiskers see https://www.r-bloggers.com/2012/06/whisker--boxplot/","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/csv2eSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Load content from a CSV file into an eSet — csv2eSet","title":"Load content from a CSV file into an eSet — csv2eSet","text":"Load content CSV file eSet","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/csv2eSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load content from a CSV file into an eSet — csv2eSet","text":"","code":"csv2eSet(file, skip_ncol, skip_nrow, sep = \"\\t\")"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/cut2.html","id":null,"dir":"Reference","previous_headings":"","what":"My version of cut — cut2","title":"My version of cut — cut2","text":"version cut","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/cut2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"My version of cut — cut2","text":"","code":"cut2(x, breaks, labels = NULL, right = TRUE, dig.lab = 3)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/densVals.html","id":null,"dir":"Reference","previous_headings":"","what":"Density Values for Smooth Density Plots — densVals","title":"Density Values for Smooth Density Plots — densVals","text":"produces vector containing density values encode local densities point scatterplot.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/densVals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density Values for Smooth Density Plots — densVals","text":"","code":"densVals(x, y = NULL, nbin = 128, bandwidth)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/densVals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density Values for Smooth Density Plots — densVals","text":"Vector density level.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/densVals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Density Values for Smooth Density Plots — densVals","text":"based function densCols grDevices.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/duplicated2.html","id":null,"dir":"Reference","previous_headings":"","what":"My version of duplicated — duplicated2","title":"My version of duplicated — duplicated2","text":"version duplicated","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/duplicated2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"My version of duplicated — duplicated2","text":"","code":"duplicated2(x, value = FALSE, na.rm = FALSE)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/eSet2csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Save content of an eSet into a CSV file — eSet2csv","title":"Save content of an eSet into a CSV file — eSet2csv","text":"Save content eSet CSV file","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/eSet2csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save content of an eSet into a CSV file — eSet2csv","text":"","code":"eSet2csv(es, file, digits = 2)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/fig.rename.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to rename plots generated by the code chunks — fig.rename","title":"Helper function to rename plots generated by the code chunks — fig.rename","text":"use : `knitr::opts_chunk$set(fig.process=fig.rename, fig.prefix=\"my_prefix\", fig.suffix=\"my_suffix\")`","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/fig.rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to rename plots generated by the code chunks — fig.rename","text":"","code":"fig.rename(path, options)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_CIs.html","id":null,"dir":"Reference","previous_headings":"","what":"Format CIs (confidence intervals) — format_CIs","title":"Format CIs (confidence intervals) — format_CIs","text":"Format CIs (confidence intervals)","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_CIs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format CIs (confidence intervals) — format_CIs","text":"","code":"format_CIs(   CI_lower,   CI_upper,   digits = 2,   non_empty = NULL,   parentheses = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_CIs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format CIs (confidence intervals) — format_CIs","text":"CI_lower Vector lower CIs. CI_upper Vector upper CIs. digits Number decimal places. non_empty Vector defining values displayed despite NAs.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_CIs_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Format CIs (confidence intervals) — format_CIs_df","title":"Format CIs (confidence intervals) — format_CIs_df","text":"Format CIs (confidence intervals)","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_CIs_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format CIs (confidence intervals) — format_CIs_df","text":"","code":"format_CIs_df(   x,   digits = 2,   colnames = NULL,   non_empty = NULL,   parentheses = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_CIs_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format CIs (confidence intervals) — format_CIs_df","text":"x Data frame. digits Number decimal places. colnames New colnames. non_empty Vector defining values displayed despite NAs.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_colors_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Format or create colors for a vector with categorical values — format_colors_cat","title":"Format or create colors for a vector with categorical values — format_colors_cat","text":"Make sure unique named colors created value.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_colors_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format or create colors for a vector with categorical values — format_colors_cat","text":"","code":"format_colors_cat(   x,   colors = NULL,   palette = NULL,   rev = FALSE,   allow_duplicated = TRUE )  format_colors(   x,   colors = NULL,   palette = NULL,   rev = FALSE,   allow_duplicated = TRUE )  format_colors_cat_strata(x, strata = NULL, palette = NULL, rev = FALSE)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_colors_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format or create colors for a vector with categorical values — format_colors_cat","text":"x Vector categorical values want specify colors. colors Vector colors longer equal number unique levels x. Can named non-named. NULL, colors generated. palette List length corresponding number levels strata colors names RColorBrewer palettes. E.g. `list(\"Blues\", \"Oranges\", \"Greens\", \"Purples\", \"Reds\", \"Greys\")` strata Vector categorical values stratification groups.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_colors_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format or create colors for a vector with categorical values — format_colors_cat","text":"Named vector unique colors unique values x.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_colors_cat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format or create colors for a vector with categorical values — format_colors_cat","text":"","code":"x <- c(\"low\", \"high\")  colors <- c(\"high\" = \"red\", \"low\" = \"grey\") palette <- NULL allow_duplicated <- FALSE   format_colors_cat(x, colors = colors, palette = palette, allow_duplicated = allow_duplicated) #>    low   high  #> \"grey\"  \"red\"    x <- c(\"<1\", \"<2\", \"<3\", \"<4\")  colors <- NULL palette <- \"RdYlBu\" allow_duplicated <- FALSE   out <- format_colors_cat(x, colors = colors, palette = palette, allow_duplicated = allow_duplicated)  barplot(rep(1, length(out)), col = out)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_colors_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate colors for ComplexHeatmap for continuous variables — format_colors_num","title":"Generate colors for ComplexHeatmap for continuous variables — format_colors_num","text":"Generate colors ComplexHeatmap continuous variables","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_colors_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate colors for ComplexHeatmap for continuous variables — format_colors_num","text":"","code":"format_colors_num(   x,   centered = TRUE,   palette = NULL,   rev = FALSE,   trim_values = NULL,   trim_prop = NULL,   trim_range = NULL,   ceiling = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_colors_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate colors for ComplexHeatmap for continuous variables — format_colors_num","text":"x Vector matrix continuous values want specify colors. centered Logical. Default value TRUE. palette Vector least two colors used create color palette 'colorRampPalette' name RColorBrewer palette e.g. \"Oranges\", \"Spectral\".","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_colors_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate colors for ComplexHeatmap for continuous variables — format_colors_num","text":"Vector unique colors unique values x.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_colors_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate colors for ComplexHeatmap for continuous variables — format_colors_num","text":"","code":"x <- rnorm(20)  palette <- \"Spectral\"  format_colors_num(x, trim_values = 2.5) #> function (x = NULL, return_rgb = FALSE, max_value = 1)  #> { #>     if (is.null(x)) { #>         stop_wrap(\"Please specify `x`\\n\") #>     } #>     att = attributes(x) #>     if (is.data.frame(x))  #>         x = as.matrix(x) #>     l_na = is.na(x) #>     if (all(l_na)) { #>         return(rep(NA, length(l_na))) #>     } #>     x2 = x[!l_na] #>     x2 = ifelse(x2 < breaks[1], breaks[1], ifelse(x2 > breaks[length(breaks)],  #>         breaks[length(breaks)], x2)) #>     ibin = .bincode(x2, breaks, right = TRUE, include.lowest = TRUE) #>     res_col = character(length(x2)) #>     for (i in unique(ibin)) { #>         l = ibin == i #>         res_col[l] = .get_color(x2[l], breaks[i], breaks[i +  #>             1], colors[i, ], colors[i + 1, ], space = space) #>     } #>     res_col = paste(res_col, transparency_str[1], sep = \"\") #>     if (return_rgb) { #>         res_col = t(col2rgb(as.vector(res_col), alpha = TRUE)/255) #>         return(res_col) #>     } #>     else { #>         res_col2 = character(length(x)) #>         res_col2[l_na] = NA #>         res_col2[!l_na] = res_col #>         attributes(res_col2) = att #>         return(res_col2) #>     } #> } #> <bytecode: 0x7f7b06b4d7d8> #> <environment: 0x7f7b06b3bdf0> #> attr(,\"breaks\") #>  [1] -2.5000000 -2.2058824 -1.9117647 -1.6176471 -1.3235294 -1.0294118 #>  [7] -0.7352941 -0.4411765 -0.1470588  0.1470588  0.4411765  0.7352941 #> [13]  1.0294118  1.3235294  1.6176471  1.9117647  2.2058824  2.5000000 #> attr(,\"colors\") #>  [1] \"#08306BFF\" \"#08519CFF\" \"#2171B5FF\" \"#4292C6FF\" \"#6BAED6FF\" \"#9ECAE1FF\" #>  [7] \"#C6DBEFFF\" \"#DEEBF7FF\" \"#F7FBFFFF\" \"#FFF5EBFF\" \"#FEE6CEFF\" \"#FDD0A2FF\" #> [13] \"#FDAE6BFF\" \"#FD8D3CFF\" \"#F16913FF\" \"#D94801FF\" \"#A63603FF\" \"#7F2704FF\" #> attr(,\"transparency\") #> [1] 0 #> attr(,\"space\") #> [1] \"LAB\""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_counts_and_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Paste counts and proportions corresponding to one subgroup — format_counts_and_props","title":"Paste counts and proportions corresponding to one subgroup — format_counts_and_props","text":"Paste counts proportions corresponding one subgroup","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_counts_and_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paste counts and proportions corresponding to one subgroup — format_counts_and_props","text":"","code":"format_counts_and_props(counts, props, digits = 2)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_counts_and_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paste counts and proportions corresponding to one subgroup — format_counts_and_props","text":"counts Vector counts. props Vector proportions. digits Number decimal places rounding proportions.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_counts_and_props_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Paste counts and proportions corresponding to one subgroup — format_counts_and_props_df","title":"Paste counts and proportions corresponding to one subgroup — format_counts_and_props_df","text":"Paste counts proportions corresponding one subgroup","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_counts_and_props_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paste counts and proportions corresponding to one subgroup — format_counts_and_props_df","text":"","code":"format_counts_and_props_df(   counts,   props,   digits = 2,   prefix_counts = \"counts_\" )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_counts_and_props_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paste counts and proportions corresponding to one subgroup — format_counts_and_props_df","text":"counts Data frame counts. props Data frame proportions. digits Number decimal places rounding proportions.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_difference.html","id":null,"dir":"Reference","previous_headings":"","what":"Format difference — format_difference","title":"Format difference — format_difference","text":"Format difference","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_difference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format difference — format_difference","text":"","code":"format_difference(x, digits = 2, non_empty = NULL)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_difference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format difference — format_difference","text":"x Vector differences. digits Number decimal places. non_empty Vector defining values displayed despite NAs.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Format header for kable — format_header","title":"Format header for kable — format_header","text":"Format header kable","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format header for kable — format_header","text":"","code":"format_header(all_colnames, header_colnames, header_name)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format header for kable — format_header","text":"all_colnames column names header_colnames Column names header placed. header_name Name header.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format header for kable — format_header","text":"","code":"if (FALSE) { all_colnames <- c(\"Covariate\", \"Subgroup\", \"A\", \"B\", \"C\", \"OR\", \"P-value\") header_colnames <- c(\"A\", \"B\", \"C\") header_name <- \"Gene A\"  format_header(all_colnames, header_colnames, header_name)   all_colnames <- c(\"A\", \"B\", \"C\", \"OR\", \"P-value\") header_colnames <- c(\"A\", \"B\", \"C\") header_name <- \"Gene A\"  format_header(all_colnames, header_colnames, header_name) }"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_or.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Odds Ratios — format_or","title":"Format Odds Ratios — format_or","text":"Format Odds Ratios","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_or.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Odds Ratios — format_or","text":"","code":"format_or(x, digits = 2, non_empty = NULL)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_or.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Odds Ratios — format_or","text":"x Vector odds ratios. digits Number decimal places. non_empty Vector defining values displayed despite NAs.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_props.html","id":null,"dir":"Reference","previous_headings":"","what":"Format proportions — format_props","title":"Format proportions — format_props","text":"Format proportions","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_props.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format proportions — format_props","text":"","code":"format_props(x, digits = 2, non_empty = NULL)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_props.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format proportions — format_props","text":"x Vector proportions. digits Number decimal places rounding proportions.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_pvalues.html","id":null,"dir":"Reference","previous_headings":"","what":"Format p-values — format_pvalues","title":"Format p-values — format_pvalues","text":"Format p-values","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_pvalues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format p-values — format_pvalues","text":"","code":"format_pvalues(x, digits = 4, asterisk = TRUE, non_empty = NULL)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_pvalues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format p-values — format_pvalues","text":"x Vector p-values formatted. digits Number digits decimal display. asterisk Logical, whether indicate significance levels asterisks. Encoding: `***` p-value < 0.001, `**` p-value < 0.01, `*` p-value < 0.05, `.` p-value < 0.1. non_empty Vector defining values displayed despite NAs.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_pvalues2.html","id":null,"dir":"Reference","previous_headings":"","what":"Format p-values using scientific format — format_pvalues2","title":"Format p-values using scientific format — format_pvalues2","text":"Format p-values using scientific format","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_pvalues2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format p-values using scientific format — format_pvalues2","text":"","code":"format_pvalues2(x, digits = 4, asterisk = TRUE)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_pvalues2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format p-values using scientific format — format_pvalues2","text":"x Vector p-values formatted. digits Number digits decimial display. asterisk Logical, whether indicate significance levels asterisks. Encoding: `***` p-value < 0.001, `**` p-value < 0.01, `*` p-value < 0.05, `.` p-value < 0.1.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_shapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Format or create shapes for a vector with categorical values — format_shapes","title":"Format or create shapes for a vector with categorical values — format_shapes","text":"Format create shapes vector categorical values","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_shapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format or create shapes for a vector with categorical values — format_shapes","text":"","code":"format_shapes(x, shapes = NULL, allow_duplicated = TRUE)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_shapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format or create shapes for a vector with categorical values — format_shapes","text":"x Vector categorical values want specify shapes. shapes Vector shapes longer equal number unique levels x. Can named non-named. NULL, shapes generated.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_shapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format or create shapes for a vector with categorical values — format_shapes","text":"Named vector shapes unique values x.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_summ.html","id":null,"dir":"Reference","previous_headings":"","what":"Format summary statistics such as N, mean, median, min, max — format_summ","title":"Format summary statistics such as N, mean, median, min, max — format_summ","text":"Format summary statistics N, mean, median, min, max","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_summ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format summary statistics such as N, mean, median, min, max — format_summ","text":"","code":"format_summ(summ, digits = 2)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_summ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format summary statistics such as N, mean, median, min, max — format_summ","text":"summ Vector values format. digits Vector digits used formatC.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_summ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format summary statistics such as N, mean, median, min, max — format_summ","text":"","code":"if (FALSE) { summ <- c(10, 1000000, 1e6, 23.6442) digits <- c(0, 0, 0, 2)  format_summ(summ, digits) }"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_summ_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Format summary statistics such as N, mean, median, min, max — format_summ_df","title":"Format summary statistics such as N, mean, median, min, max — format_summ_df","text":"Format summary statistics N, mean, median, min, max","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_summ_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format summary statistics such as N, mean, median, min, max — format_summ_df","text":"","code":"format_summ_df(summ, per = \"row\", digits = 2)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_summ_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format summary statistics such as N, mean, median, min, max — format_summ_df","text":"summ Data frame. per Whether lapply per row per column. digits Vector digits used formatC.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_variable_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Create variable names — format_variable_names","title":"Create variable names — format_variable_names","text":"Make sure variable names exists variables data frame. Creates scratch adds missing variable names variables data.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_variable_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create variable names — format_variable_names","text":"","code":"format_variable_names(data, variable_names = NULL, unique = FALSE)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_variable_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create variable names — format_variable_names","text":"data Data frame vector. variable_names Named vector variable names corresponding variables data. vector contain names variables data. names variables missing, created. NULL, variable names created subtracting underscore column names data.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_variable_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create variable names — format_variable_names","text":"Named vector (optionally unique) variable names variables data.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_vs.html","id":null,"dir":"Reference","previous_headings":"","what":"Format versus — format_vs","title":"Format versus — format_vs","text":"Format versus","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_vs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format versus — format_vs","text":"","code":"format_vs(level, reference)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/format_vs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format versus — format_vs","text":"level Vector levels. reference Vector references.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/indicate_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function used in bkable to highlight the rows — indicate_blocks","title":"Internal function used in bkable to highlight the rows — indicate_blocks","text":"Internal function used bkable highlight rows","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/indicate_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function used in bkable to highlight the rows — indicate_blocks","text":"","code":"indicate_blocks(d, block_vars, return = \"block\")"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/isValidAndUnreservedName.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a vector consists of valid names — isValidAndUnreservedName","title":"Check if a vector consists of valid names — isValidAndUnreservedName","text":"Check vector consists valid names","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/isValidAndUnreservedName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a vector consists of valid names — isValidAndUnreservedName","text":"","code":"isValidAndUnreservedName(x)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/jaccard_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Jaccard similarity for pairs of covariates — jaccard_matrix","title":"Compute Jaccard similarity for pairs of covariates — jaccard_matrix","text":"Compute Jaccard similarity pairs covariates","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/jaccard_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Jaccard similarity for pairs of covariates — jaccard_matrix","text":"","code":"jaccard_matrix(x)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/jaccard_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Jaccard similarity for pairs of covariates — jaccard_matrix","text":"x Data frame covariates absence encoded 0 presence encoded 1.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/length_nonNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate number of non-NA elements in a vector — length_nonNA","title":"Calculate number of non-NA elements in a vector — length_nonNA","text":"Calculate number non-NA elements vector","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/length_nonNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate number of non-NA elements in a vector — length_nonNA","text":"","code":"length_nonNA(x)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/or_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute odds ratios for pairs of covariates — or_matrix","title":"Compute odds ratios for pairs of covariates — or_matrix","text":"Compute odds ratios pairs covariates","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/or_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute odds ratios for pairs of covariates — or_matrix","text":"","code":"or_matrix(x)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/or_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute odds ratios for pairs of covariates — or_matrix","text":"x Data frame covariates absence encoded 0 presence encoded 1.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/order2.html","id":null,"dir":"Reference","previous_headings":"","what":"My version of order for data frame — order2","title":"My version of order for data frame — order2","text":"version order data frame","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/order2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"My version of order for data frame — order2","text":"","code":"order2(x, na.last = TRUE, decreasing = FALSE)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/order2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"My version of order for data frame — order2","text":"x Data frame","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/round_signif.html","id":null,"dir":"Reference","previous_headings":"","what":"Use round or signif — round_signif","title":"Use round or signif — round_signif","text":"Use round signif","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/round_signif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use round or signif — round_signif","text":"","code":"round_signif(x, digits = 2)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/subchunkify.html","id":null,"dir":"Reference","previous_headings":"","what":"My version of subchunkify — subchunkify","title":"My version of subchunkify — subchunkify","text":"original function taken blog post referenced stack overflow https://stackoverflow.com/questions/15365829/dynamic-height--width--knitr-plots. Remember set chunk options `results = \"asis\"`. Also necessary set knit_child: `knitr::opts_knit$set(output.dir = getwd())`","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/subchunkify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"My version of subchunkify — subchunkify","text":"","code":"subchunkify(   g,   fig.height = 5,   fig.width = 6,   fig.prefix = NULL,   fig.suffix = NULL,   chunk_name = NULL,   envir = parent.frame(),   display_subchunk = FALSE )"},{"path":[]},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_KM_plot_biomarker.html","id":null,"dir":"Reference","previous_headings":"","what":"KM plots with biomarker effect per treatment arm — wrapper_KM_plot_biomarker","title":"KM plots with biomarker effect per treatment arm — wrapper_KM_plot_biomarker","text":"KM plots biomarker effect per treatment arm","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_KM_plot_biomarker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KM plots with biomarker effect per treatment arm — wrapper_KM_plot_biomarker","text":"","code":"wrapper_KM_plot_biomarker(   data,   tte_var,   censor_var,   biomarker_var,   treatment_var = NULL,   strat2_var = NULL,   colors = NULL,   palette = NULL,   linetypes = 1,   variable_names = NULL,   title = TRUE,   xlab = TRUE,   strat1_label_both = TRUE,   strat2_label_both = TRUE,   legend_colors_title = TRUE,   legend_position = c(0.03, 0.03),   legend_justification = c(0, 0),   break_time_by = NULL,   max_tte = NULL,   risk_table = TRUE,   conf_int = FALSE,   surv_median_line = \"none\",   ggtheme = ggplot2::theme_get(),   line_size = 1,   title_size = NULL,   label_size = NULL,   rel_heights = c(5, 1),   background_grid_major = \"none\",   risk_table_labels = TRUE,   print_hr = FALSE,   print_mst = FALSE,   print_pvalues = FALSE,   print_options = NULL,   cox_covariate_var = NULL,   cox_strat_var = NULL,   strat_scales = \"fixed\",   strat1_nrow = 1,   strat1_ncol = NULL,   strat2_nrow = NULL,   strat2_ncol = 1 )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_KM_plot_biomarker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KM plots with biomarker effect per treatment arm — wrapper_KM_plot_biomarker","text":"data Data frame. tte_var Name variable containing time--event data. censor_var Name variable containing censoring information. Censor variable must numeric encode 1 event 0 censor. strat2_var Name second stratification variable. colors Vector colors treatment X biomarker levels. Unique colors can generated function `format_colors_cat_strata`. Alternatively, vector colors biomarker levels. risk_table_labels Possible values: \"levels\", \"shape\" print_options Named vector. default c(npcx = 1, npcy = 0.05, hjust = 1, vjust = 0, size = 4) text bottom right corner. text top right corner use c(npcx = 1, npcy = 1, hjust = 1, vjust = 1, size = 4)","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_KM_plot_core.html","id":null,"dir":"Reference","previous_headings":"","what":"KM plot — wrapper_KM_plot_core","title":"KM plot — wrapper_KM_plot_core","text":"KM plot","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_KM_plot_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KM plot — wrapper_KM_plot_core","text":"","code":"wrapper_KM_plot_core(   data,   tte_var,   censor_var,   covariate_var,   colors = NULL,   linetypes = 1,   variable_names = NULL,   title = TRUE,   subtitle = TRUE,   xlab = TRUE,   legend_colors_title = TRUE,   legend_position = c(0.03, 0.03),   legend_justification = c(0, 0),   break_time_by = NULL,   max_tte = NULL,   risk_table = TRUE,   conf_int = FALSE,   surv_median_line = \"none\",   ggtheme = ggplot2::theme_get(),   line_size = 1,   title_size = NULL,   label_size = NULL,   rel_heights = c(5, 1),   background_grid_major = \"none\",   level_mapping = NULL,   risk_table_labels = TRUE,   print_hr = FALSE,   print_mst = FALSE,   print_pvalues = FALSE,   print_options = NULL,   cox_covariate_var = NULL,   cox_strat_var = NULL )  wrapper_KM_plot_core_strat(   data,   tte_var,   censor_var,   covariate_var,   strat1_var = NULL,   strat2_var = NULL,   colors = NULL,   linetypes = 1,   variable_names = NULL,   title = TRUE,   xlab = TRUE,   strat1_label_both = TRUE,   strat2_label_both = TRUE,   legend_colors_title = TRUE,   legend_position = c(0.03, 0.03),   legend_justification = c(0, 0),   break_time_by = NULL,   max_tte = NULL,   risk_table = TRUE,   conf_int = FALSE,   surv_median_line = \"none\",   ggtheme = ggplot2::theme_get(),   line_size = 1,   title_size = NULL,   label_size = NULL,   rel_heights = c(5, 1),   background_grid_major = \"none\",   level_mapping = NULL,   risk_table_labels = TRUE,   print_hr = FALSE,   print_mst = FALSE,   print_pvalues = FALSE,   print_options = NULL,   cox_covariate_var = NULL,   cox_strat_var = NULL,   strat_scales = \"fixed\",   strat1_nrow = 1,   strat1_ncol = NULL,   strat2_nrow = NULL,   strat2_ncol = 1 )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_KM_plot_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KM plot — wrapper_KM_plot_core","text":"data Data frame. tte_var Name variable containing time--event data. censor_var Name variable containing censoring information. Censor variable must numeric encode 1 event 0 censor. covariate_var Name variable defines subgroups survival calculated. variable must factor. level_mapping Named vector level mapping. names correspond original levels covariate_var. risk_table_labels Possible values: \"levels\", \"shape\" print_options Named vector. default c(npcx = 1, npcy = 0.05, hjust = 1, vjust = 0, size = 4) text bottom right corner. text top right corner use c(npcx = 1, npcy = 1, hjust = 1, vjust = 1, size = 4) strat1_var Name firts stratification variable. strat2_var Name second stratification variable.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_KM_plot_core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"KM plot — wrapper_KM_plot_core","text":"","code":"data(bdata)  data <- bdata  tte_var <- \"PFS\" censor_var <- \"PFS_Event\" covariate_var <- \"Treatment_Arm\"   wrapper_KM_plot_core(data = data, tte_var = tte_var, censor_var = censor_var, covariate_var = covariate_var)    data(bdata)  data <- bdata data$GeneA_cat2 <- wrapper_cut_2groups(data$GeneA)  tte_var <- \"PFS\" censor_var <- \"PFS_Event\" covariate_var <- \"GeneA_cat2\"  strat1_var = \"Treatment_Arm\" strat2_var = \"Cell_Of_Origin\"   wrapper_KM_plot_core_strat(data = data, tte_var = tte_var, censor_var = censor_var, covariate_var = covariate_var, strat1_var = strat1_var, strat2_var = strat2_var)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_KM_plot_interaction.html","id":null,"dir":"Reference","previous_headings":"","what":"KM plot with curves per biomarker and treatment in a single panel — wrapper_KM_plot_interaction","title":"KM plot with curves per biomarker and treatment in a single panel — wrapper_KM_plot_interaction","text":"KM plot curves per biomarker treatment single panel","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_KM_plot_interaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KM plot with curves per biomarker and treatment in a single panel — wrapper_KM_plot_interaction","text":"","code":"wrapper_KM_plot_interaction(   data,   tte_var,   censor_var,   biomarker_var,   treatment_var,   strat1_var = NULL,   strat2_var = NULL,   colors = NULL,   palette = NULL,   linetypes = 1,   variable_names = NULL,   title = TRUE,   xlab = TRUE,   strat1_label_both = TRUE,   strat2_label_both = TRUE,   legend_colors_title = TRUE,   legend_position = c(0.03, 0.03),   legend_justification = c(0, 0),   break_time_by = NULL,   max_tte = NULL,   risk_table = TRUE,   conf_int = FALSE,   surv_median_line = \"none\",   ggtheme = ggplot2::theme_get(),   line_size = 1,   title_size = NULL,   label_size = NULL,   rel_heights = c(5, 1.5),   background_grid_major = \"none\",   risk_table_labels = TRUE,   print_hr = FALSE,   print_mst = FALSE,   print_pvalues = FALSE,   print_options = NULL,   cox_covariate_var = NULL,   cox_strat_var = NULL,   strat_scales = \"fixed\",   strat1_nrow = 1,   strat1_ncol = NULL,   strat2_nrow = NULL,   strat2_ncol = 1 )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_KM_plot_interaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KM plot with curves per biomarker and treatment in a single panel — wrapper_KM_plot_interaction","text":"data Data frame. tte_var Name variable containing time--event data. censor_var Name variable containing censoring information. Censor variable must numeric encode 1 event 0 censor. strat1_var Name firts stratification variable. strat2_var Name second stratification variable. colors Vector colors treatment X biomarker levels. Unique colors can generated function `format_colors_cat_strata`. risk_table_labels Possible values: \"levels\", \"shape\" print_options Named vector. default c(npcx = 1, npcy = 0.05, hjust = 1, vjust = 0, size = 4) text bottom right corner. text top right corner use c(npcx = 1, npcy = 1, hjust = 1, vjust = 1, size = 4)","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_KM_plot_treatment.html","id":null,"dir":"Reference","previous_headings":"","what":"KM plot with treatment effect per biomarker subgroup — wrapper_KM_plot_treatment","title":"KM plot with treatment effect per biomarker subgroup — wrapper_KM_plot_treatment","text":"KM plot treatment effect per biomarker subgroup","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_KM_plot_treatment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KM plot with treatment effect per biomarker subgroup — wrapper_KM_plot_treatment","text":"","code":"wrapper_KM_plot_treatment(   data,   tte_var,   censor_var,   treatment_var,   biomarker_var = NULL,   strat2_var = NULL,   colors = NULL,   palette = NULL,   linetypes = 1,   variable_names = NULL,   title = TRUE,   xlab = TRUE,   strat1_label_both = TRUE,   strat2_label_both = TRUE,   legend_colors_title = TRUE,   legend_position = c(0.03, 0.03),   legend_justification = c(0, 0),   break_time_by = NULL,   max_tte = NULL,   risk_table = TRUE,   conf_int = FALSE,   surv_median_line = \"none\",   ggtheme = ggplot2::theme_get(),   line_size = 1,   title_size = NULL,   label_size = NULL,   rel_heights = c(5, 1),   background_grid_major = \"none\",   risk_table_labels = TRUE,   print_hr = FALSE,   print_mst = FALSE,   print_pvalues = FALSE,   print_options = NULL,   cox_covariate_var = NULL,   cox_strat_var = NULL,   strat_scales = \"fixed\",   strat1_nrow = 1,   strat1_ncol = NULL,   strat2_nrow = NULL,   strat2_ncol = 1 )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_KM_plot_treatment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KM plot with treatment effect per biomarker subgroup — wrapper_KM_plot_treatment","text":"data Data frame. tte_var Name variable containing time--event data. censor_var Name variable containing censoring information. Censor variable must numeric encode 1 event 0 censor. strat2_var Name second stratification variable. colors Vector colors treatment X biomarker levels. Unique colors can generated function `format_colors_cat_strata`. Alternatively, vector colors treatment levels. risk_table_labels Possible values: \"levels\", \"shape\" print_options Named vector. default c(npcx = 1, npcy = 0.05, hjust = 1, vjust = 0, size = 4) text bottom right corner. text top right corner use c(npcx = 1, npcy = 1, hjust = 1, vjust = 1, size = 4)","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_NES_barplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Bar plot with NES from GSEA — wrapper_NES_barplot","title":"Bar plot with NES from GSEA — wrapper_NES_barplot","text":"far works one contrast.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_NES_barplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bar plot with NES from GSEA — wrapper_NES_barplot","text":"","code":"wrapper_NES_barplot(   x,   geneset_var = \"GenesetID\",   enrichment_score_prefix = \"NES\",   adjp_prefix = \"adj.P.Val\",   pval = 0.05,   sep = \"_\",   title = \"\",   legend_position = \"right\",   axis_text_y_size = NULL,   axis_text_y_width = 80,   title_size = NULL )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_NES_barplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bar plot with NES from GSEA — wrapper_NES_barplot","text":"x TopTable results GSEA","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_NES_barplot2.html","id":null,"dir":"Reference","previous_headings":"","what":"Bar plot with NES from GSEA — wrapper_NES_barplot2","title":"Bar plot with NES from GSEA — wrapper_NES_barplot2","text":"far works one contrast.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_NES_barplot2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bar plot with NES from GSEA — wrapper_NES_barplot2","text":"","code":"wrapper_NES_barplot2(   x,   geneset_var = \"GenesetID\",   enrichment_score_prefix = \"NES\",   adjp_prefix = \"adj.P.Val\",   pval = 0.05,   sep = \"_\",   title = \"\",   legend_position = \"right\",   color_low = \"#42399B\",   color_mid = \"white\",   color_high = \"#D70131\",   trim_values = 3,   trim_prop = NULL,   trim_range = NULL,   ceiling = FALSE,   axis_text_y_size = NULL,   axis_text_y_width = 80,   title_size = NULL )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_NES_barplot2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bar plot with NES from GSEA — wrapper_NES_barplot2","text":"x TopTable results GSEA","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_bar_plot_biomarker.html","id":null,"dir":"Reference","previous_headings":"","what":"Bar plot with biomarker effect on response per treatment arm — wrapper_bar_plot_biomarker","title":"Bar plot with biomarker effect on response per treatment arm — wrapper_bar_plot_biomarker","text":"Bar plot biomarker effect response per treatment arm","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_bar_plot_biomarker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bar plot with biomarker effect on response per treatment arm — wrapper_bar_plot_biomarker","text":"","code":"wrapper_bar_plot_biomarker(   data,   response_var,   biomarker_var,   treatment_var = NULL,   y_type = \"Proportion\",   facet_var = NULL,   rev = FALSE,   strat2_var = NULL,   colors_bar = NULL,   color_border = \"black\",   variable_names = NULL,   title = TRUE,   xlab = TRUE,   ylab = TRUE,   strat1_label_both = TRUE,   strat2_label_both = TRUE,   legend_colors_title = TRUE,   legend_position = \"right\",   facet_label_both = TRUE,   skip_levels = NULL,   method = \"facet\",   show_proportions = TRUE,   show_counts = TRUE,   show_subtotal_proportions = FALSE,   show_subtotal_counts = FALSE,   show_total_counts = FALSE,   label_size = 4,   label_angle = 0,   label_nudge = 0.025,   title_size = NULL,   strip_text_size = NULL,   facet_scales = \"fixed\",   ylim = NULL,   axis_text_x_angle = 0,   axis_text_x_vjust = 1,   axis_text_x_hjust = 0.5,   aspect_ratio = NULL,   background_grid_major = \"none\",   strat_scales = \"fixed\",   strat1_nrow = 1,   strat1_ncol = NULL,   strat2_nrow = NULL,   strat2_ncol = 1,   less_legends = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_bar_plot_biomarker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bar plot with biomarker effect on response per treatment arm — wrapper_bar_plot_biomarker","text":"data Data frame. y_type Possible values: \"Proportion\" \"Count\" strat2_var Name second stratification variable. colors_bar Vector colors treatment X response interaction. Alternatively, method One methods: c(\"facet\", \"dodge_facet\", \"dodge_facet2\", \"facet2\", \"dodge\")","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_bar_plot_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot — wrapper_bar_plot_core","title":"Barplot — wrapper_bar_plot_core","text":"Generate signle barplot.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_bar_plot_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot — wrapper_bar_plot_core","text":"","code":"wrapper_bar_plot_core(   data,   x_var,   y_var,   y_type = \"Proportion\",   facet_var = NULL,   rev = FALSE,   colors_bar = NULL,   color_border = \"black\",   variable_names = NULL,   title = TRUE,   subtitle = TRUE,   xlab = TRUE,   ylab = TRUE,   legend_colors_title = TRUE,   legend_position = \"right\",   facet_label_both = TRUE,   skip_levels = NULL,   method = \"facet\",   show_proportions = TRUE,   show_counts = TRUE,   show_subtotal_proportions = FALSE,   show_subtotal_counts = FALSE,   show_total_counts = FALSE,   label_size = 4,   label_angle = 0,   label_nudge = 0.025,   title_size = NULL,   strip_text_size = NULL,   facet_scales = \"fixed\",   ylim = NULL,   axis_text_x_angle = 0,   axis_text_x_vjust = 1,   axis_text_x_hjust = 0.5,   aspect_ratio = NULL,   background_grid_major = \"none\" )  wrapper_bar_plot_core_strat(   data,   x_var,   y_var,   y_type = \"Proportion\",   facet_var = NULL,   rev = FALSE,   strat1_var = NULL,   strat2_var = NULL,   colors_bar = NULL,   color_border = \"black\",   variable_names = NULL,   title = TRUE,   xlab = TRUE,   ylab = TRUE,   strat1_label_both = TRUE,   strat2_label_both = TRUE,   legend_colors_title = TRUE,   legend_position = \"right\",   facet_label_both = TRUE,   skip_levels = NULL,   method = \"facet\",   show_proportions = TRUE,   show_counts = TRUE,   show_subtotal_proportions = FALSE,   show_subtotal_counts = FALSE,   show_total_counts = FALSE,   label_size = 4,   label_angle = 0,   label_nudge = 0.025,   title_size = NULL,   strip_text_size = NULL,   facet_scales = \"fixed\",   ylim = NULL,   axis_text_x_angle = 0,   axis_text_x_vjust = 1,   axis_text_x_hjust = 0.5,   aspect_ratio = NULL,   background_grid_major = \"none\",   strat_scales = \"fixed\",   strat1_nrow = 1,   strat1_ncol = NULL,   strat2_nrow = NULL,   strat2_ncol = 1,   less_legends = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_bar_plot_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot — wrapper_bar_plot_core","text":"data Data frame. y_type Possible values: \"Proportion\" \"Count\" method One methods: c(\"facet\", \"dodge_facet\", \"dodge_facet2\", \"facet2\", \"dodge\") strat1_var Name first stratification variable. strat2_var Name second stratification variable.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_bar_plot_core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barplot — wrapper_bar_plot_core","text":"","code":"data(bdata)  data <- bdata data$GeneA_cat2 <- wrapper_cut_2groups(data$GeneA)  x_var = \"GeneA_cat2\" y_var = \"Response\"  wrapper_bar_plot_core(data = data, x_var = x_var, y_var = y_var)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_bar_plot_treatment.html","id":null,"dir":"Reference","previous_headings":"","what":"Bar plot with treatment effect on response per biomarker subgroup — wrapper_bar_plot_treatment","title":"Bar plot with treatment effect on response per biomarker subgroup — wrapper_bar_plot_treatment","text":"Bar plot treatment effect response per biomarker subgroup","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_bar_plot_treatment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bar plot with treatment effect on response per biomarker subgroup — wrapper_bar_plot_treatment","text":"","code":"wrapper_bar_plot_treatment(   data,   response_var,   treatment_var,   biomarker_var = NULL,   y_type = \"Proportion\",   facet_var = NULL,   rev = FALSE,   strat2_var = NULL,   colors_bar = NULL,   color_border = \"black\",   variable_names = NULL,   title = TRUE,   xlab = TRUE,   ylab = TRUE,   strat1_label_both = TRUE,   strat2_label_both = TRUE,   legend_colors_title = TRUE,   legend_position = \"right\",   facet_label_both = TRUE,   skip_levels = NULL,   method = \"facet\",   show_proportions = TRUE,   show_counts = TRUE,   show_subtotal_proportions = FALSE,   show_subtotal_counts = FALSE,   show_total_counts = FALSE,   label_size = 4,   label_angle = 0,   label_nudge = 0.025,   title_size = NULL,   strip_text_size = NULL,   facet_scales = \"fixed\",   ylim = NULL,   axis_text_x_angle = 0,   axis_text_x_vjust = 1,   axis_text_x_hjust = 0.5,   aspect_ratio = NULL,   background_grid_major = \"none\",   strat_scales = \"fixed\",   strat1_nrow = 1,   strat1_ncol = NULL,   strat2_nrow = NULL,   strat2_ncol = 1,   less_legends = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_bar_plot_treatment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bar plot with treatment effect on response per biomarker subgroup — wrapper_bar_plot_treatment","text":"data Data frame. y_type Possible values: \"Proportion\" \"Count\" strat2_var Name second stratification variable. colors_bar Vector colors treatment X response interaction. method One methods: c(\"facet\", \"dodge_facet\", \"dodge_facet2\", \"facet2\", \"dodge\")","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_bar_plot_yvars_core_strat.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplots — wrapper_bar_plot_yvars_core_strat","title":"Barplots — wrapper_bar_plot_yvars_core_strat","text":"Generate barplots multiple variables one faceted dodged panel.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_bar_plot_yvars_core_strat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplots — wrapper_bar_plot_yvars_core_strat","text":"","code":"wrapper_bar_plot_yvars_core_strat(   data,   x_var,   y_vars,   y_type = \"Proportion\",   rev = FALSE,   strat1_var = NULL,   strat2_var = NULL,   colors_bar = NULL,   color_border = \"black\",   variable_names = NULL,   title = TRUE,   xlab = TRUE,   ylab = TRUE,   strat1_label_both = TRUE,   strat2_label_both = TRUE,   legend_colors_title = TRUE,   legend_position = \"right\",   facet_label_both = TRUE,   skip_levels = NULL,   method = \"facet\",   show_proportions = TRUE,   show_counts = TRUE,   show_subtotal_proportions = FALSE,   show_subtotal_counts = FALSE,   show_total_counts = FALSE,   label_size = 4,   label_angle = 0,   label_nudge = 0.025,   title_size = NULL,   strip_text_size = NULL,   facet_scales = \"fixed\",   ylim = NULL,   axis_text_x_angle = 0,   axis_text_x_vjust = 1,   axis_text_x_hjust = 0.5,   aspect_ratio = NULL,   background_grid_major = \"none\",   strat_scales = \"fixed\",   strat1_nrow = 1,   strat1_ncol = NULL,   strat2_nrow = NULL,   strat2_ncol = 1,   less_legends = FALSE,   names_to = \"name\",   values_to = \"value\" )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_bar_plot_yvars_core_strat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplots — wrapper_bar_plot_yvars_core_strat","text":"data Data frame. y_type Possible values: \"Proportion\" \"Count\" strat1_var Name first stratification variable. strat2_var Name second stratification variable. method One methods: c(\"facet\", \"dodge_facet\", \"dodge_facet2\", \"facet2\", \"dodge\")","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_box_plot_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplot — wrapper_box_plot_core","title":"Boxplot — wrapper_box_plot_core","text":"Boxplot","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_box_plot_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxplot — wrapper_box_plot_core","text":"","code":"wrapper_box_plot_core(   data,   x_var,   y_var,   dodge_var = NULL,   facet_var = NULL,   color_point_var = NULL,   colors_box = NULL,   colors_point = NULL,   variable_names = NULL,   title = TRUE,   subtitle = TRUE,   xlab = TRUE,   ylab = TRUE,   legend_colors_box_title = TRUE,   legend_colors_point_title = TRUE,   legend_position = \"right\",   facet_label_both = TRUE,   show_total_counts = FALSE,   show_median = FALSE,   point_plot = TRUE,   point_size = 1,   point_shape = 20,   point_alpha = 1,   point_stroke = 0.8,   label_size = 3.5,   label_nudge = 0.025,   title_size = NULL,   strip_text_size = NULL,   facet_scales = \"fixed\",   facet_nrow = NULL,   facet_ncol = NULL,   ylim = NULL,   drop = FALSE,   scale_y_continuous_custome = scale_y_continuous(),   axis_text_x_angle = 0,   axis_text_x_vjust = 1,   axis_text_x_hjust = 0.5,   aspect_ratio = NULL,   background_grid_major = \"none\" )  wrapper_box_plot_core_strat(   data,   x_var,   y_var,   dodge_var = NULL,   facet_var = NULL,   color_point_var = NULL,   strat1_var = NULL,   strat2_var = NULL,   colors_box = NULL,   colors_point = NULL,   variable_names = NULL,   title = TRUE,   xlab = TRUE,   ylab = TRUE,   strat1_label_both = TRUE,   strat2_label_both = TRUE,   legend_colors_box_title = TRUE,   legend_colors_point_title = TRUE,   legend_position = \"right\",   facet_label_both = TRUE,   show_total_counts = FALSE,   show_median = FALSE,   point_plot = TRUE,   point_size = 1,   point_shape = 20,   point_alpha = 1,   point_stroke = 0.8,   label_size = 3.5,   label_nudge = 0.025,   title_size = NULL,   strip_text_size = NULL,   facet_scales = \"fixed\",   facet_nrow = NULL,   facet_ncol = NULL,   ylim = NULL,   drop = FALSE,   scale_y_continuous_custome = scale_y_continuous(),   axis_text_x_angle = 0,   axis_text_x_vjust = 1,   axis_text_x_hjust = 0.5,   aspect_ratio = NULL,   background_grid_major = \"none\",   strat_scales = \"fixed\",   strat1_nrow = 1,   strat1_ncol = NULL,   strat2_nrow = NULL,   strat2_ncol = 1,   strat1_rel_widths = 1,   strat1_rel_heights = 1,   strat2_rel_widths = 1,   strat2_rel_heights = 1,   less_legends = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_box_plot_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplot — wrapper_box_plot_core","text":"data Data frame. strat1_var Name first stratification variable. strat2_var Name second stratification variable.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_box_plot_core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boxplot — wrapper_box_plot_core","text":"","code":"data(bdata) data <- bdata  x_var <- \"Cell_Of_Origin\" y_var <- \"GeneA\"  wrapper_box_plot_core(data = data, x_var = x_var, y_var = y_var)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_box_plot_yvars_core_strat.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplots — wrapper_box_plot_yvars_core_strat","title":"Boxplots — wrapper_box_plot_yvars_core_strat","text":"Generate boxplots multiple variables one faceted dodged panel.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_box_plot_yvars_core_strat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxplots — wrapper_box_plot_yvars_core_strat","text":"","code":"wrapper_box_plot_yvars_core_strat(   data,   y_vars,   x_var = NULL,   dodge_var = NULL,   facet_var = NULL,   color_point_var = NULL,   strat1_var = NULL,   strat2_var = NULL,   colors_box = NULL,   colors_point = NULL,   variable_names = NULL,   title = TRUE,   xlab = TRUE,   ylab = TRUE,   strat1_label_both = TRUE,   strat2_label_both = TRUE,   legend_colors_box_title = TRUE,   legend_colors_point_title = TRUE,   legend_position = \"right\",   facet_label_both = TRUE,   show_total_counts = FALSE,   show_median = FALSE,   point_plot = TRUE,   point_size = 1,   point_shape = 20,   point_alpha = 1,   point_stroke = 0.8,   label_size = 3.5,   label_nudge = 0.025,   title_size = NULL,   strip_text_size = NULL,   facet_scales = \"fixed\",   facet_nrow = NULL,   facet_ncol = NULL,   ylim = NULL,   scale_y_continuous_custome = scale_y_continuous(),   axis_text_x_angle = 0,   axis_text_x_vjust = 1,   axis_text_x_hjust = 0.5,   aspect_ratio = NULL,   background_grid_major = \"none\",   strat_scales = \"fixed\",   strat1_nrow = 1,   strat1_ncol = NULL,   strat2_nrow = NULL,   strat2_ncol = 1,   less_legends = FALSE,   names_to = \"name\",   values_to = \"value\" )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_box_plot_yvars_core_strat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplots — wrapper_box_plot_yvars_core_strat","text":"data Data frame. strat1_var Name first stratification variable. strat2_var Name second stratification variable.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_bresults_to_topTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert results from Cox regression into a topTable — wrapper_bresults_to_topTable","title":"Convert results from Cox regression into a topTable — wrapper_bresults_to_topTable","text":"Convert results Cox regression topTable","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_bresults_to_topTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert results from Cox regression into a topTable — wrapper_bresults_to_topTable","text":"","code":"wrapper_bresults_to_topTable(   x,   contrast_vars,   id_cols = \"biomarker\",   statistic_change = \"HR\",   readjust_pvalues = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_bresults_to_topTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert results from Cox regression into a topTable — wrapper_bresults_to_topTable","text":"x \"BclassTesting\" object, example, output wrapper_cox_regression_biomarker function. work log-rank test results.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_calculate_sample_logFC.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate logFC for expression data that will be plotted in a heatmap — wrapper_calculate_sample_logFC","title":"Calculate logFC for expression data that will be plotted in a heatmap — wrapper_calculate_sample_logFC","text":"Calculate logFC expression data plotted heatmap","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_calculate_sample_logFC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate logFC for expression data that will be plotted in a heatmap — wrapper_calculate_sample_logFC","text":"","code":"wrapper_calculate_sample_logFC(x, comparison_var, subgroup_var = NULL)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_calculate_sample_logFC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate logFC for expression data that will be plotted in a heatmap — wrapper_calculate_sample_logFC","text":"x eSet object","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cameraPR.html","id":null,"dir":"Reference","previous_headings":"","what":"Run CAMERA — wrapper_cameraPR","title":"Run CAMERA — wrapper_cameraPR","text":"Run CAMERA","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cameraPR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run CAMERA — wrapper_cameraPR","text":"","code":"wrapper_cameraPR(   x,   genesets,   genesets_extra_info = NULL,   gene_mapping = NULL,   min_GS_size = 10,   max_GS_size = 500,   gene_var = \"EntrezIDs\",   statistic_prefix = \"t\",   sep = \"_\",   topn_genes = 20 )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cameraPR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run CAMERA — wrapper_cameraPR","text":"x TopTable","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cameraPR_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Run CAMERA — wrapper_cameraPR_core","title":"Run CAMERA — wrapper_cameraPR_core","text":"Run CAMERA","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cameraPR_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run CAMERA — wrapper_cameraPR_core","text":"","code":"wrapper_cameraPR_core(   statistic,   genesets,   genesets_extra_info = NULL,   gene_mapping = NULL,   name = \"\",   sep = \"_\",   min_GS_size = 10,   max_GS_size = 500,   topn_genes = 20,   statistic_name = \"t\" )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cameraPR_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run CAMERA — wrapper_cameraPR_core","text":"statistic Named vector t statistics limma logFC.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_characteristics_bep.html","id":null,"dir":"Reference","previous_headings":"","what":"Table with distribution summary for a list of covariates for ITT and BEP — wrapper_characteristics_bep","title":"Table with distribution summary for a list of covariates for ITT and BEP — wrapper_characteristics_bep","text":"Table distribution summary list covariates ITT BEP","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_characteristics_bep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table with distribution summary for a list of covariates for ITT and BEP — wrapper_characteristics_bep","text":"","code":"wrapper_characteristics_bep(   data,   covariate_vars,   bep_vars = NULL,   treatment_var = NULL,   variable_names = NULL,   caption = NULL,   itt_name = \"ITT\",   display_statistics = c(\"Median\", \"Mean\") )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_characteristics_bep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table with distribution summary for a list of covariates for ITT and BEP — wrapper_characteristics_bep","text":"data Data frame. bep_vars Vector column names logical variables TRUE indicates biomarker evaluable population (BEP).","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_characteristics_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Table with distribution summary for categorical and numerical covariates — wrapper_characteristics_core","title":"Table with distribution summary for categorical and numerical covariates — wrapper_characteristics_core","text":"Table distribution summary categorical numerical covariates","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_characteristics_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table with distribution summary for categorical and numerical covariates — wrapper_characteristics_core","text":"","code":"wrapper_characteristics_core(   data,   covariate_vars,   strat_var = NULL,   variable_names = NULL,   caption = NULL,   out_colname = \"Value\",   display_statistics = c(\"Median\", \"Mean\") )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_characteristics_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table with distribution summary for categorical and numerical covariates — wrapper_characteristics_core","text":"data Data frame.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_characteristics_core_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Table with distribution summary for a categorical covariate — wrapper_characteristics_core_cat","title":"Table with distribution summary for a categorical covariate — wrapper_characteristics_core_cat","text":"Table distribution summary categorical covariate","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_characteristics_core_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table with distribution summary for a categorical covariate — wrapper_characteristics_core_cat","text":"","code":"wrapper_characteristics_core_cat(   data,   covariate_var,   strat_var = NULL,   variable_names = NULL,   caption = NULL,   out_colname = \"Value\" )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_characteristics_core_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table with distribution summary for a categorical covariate — wrapper_characteristics_core_cat","text":"data Data frame.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_characteristics_core_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Table with distribution summary for a numerical covariate — wrapper_characteristics_core_num","title":"Table with distribution summary for a numerical covariate — wrapper_characteristics_core_num","text":"Table distribution summary numerical covariate","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_characteristics_core_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table with distribution summary for a numerical covariate — wrapper_characteristics_core_num","text":"","code":"wrapper_characteristics_core_num(   data,   covariate_var,   strat_var = NULL,   variable_names = NULL,   caption = NULL,   out_colname = \"Value\",   display_statistics = c(\"Median\", \"Mean\") )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_characteristics_core_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table with distribution summary for a numerical covariate — wrapper_characteristics_core_num","text":"data Data frame.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cooccurence_dotplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Dotplot with cooccurence odds ratios — wrapper_cooccurence_dotplot","title":"Dotplot with cooccurence odds ratios — wrapper_cooccurence_dotplot","text":"Dotplot cooccurence odds ratios","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cooccurence_dotplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dotplot with cooccurence odds ratios — wrapper_cooccurence_dotplot","text":"","code":"wrapper_cooccurence_dotplot(x, order = TRUE, title = \"\")"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cooccurence_dotplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dotplot with cooccurence odds ratios — wrapper_cooccurence_dotplot","text":"x Data frame covariates absence encoded 0 presence encoded 1.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cooccurence_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap of Jaccard similarity between pairs of covariates — wrapper_cooccurence_heatmap","title":"Heatmap of Jaccard similarity between pairs of covariates — wrapper_cooccurence_heatmap","text":"Heatmap Jaccard similarity pairs covariates","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cooccurence_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap of Jaccard similarity between pairs of covariates — wrapper_cooccurence_heatmap","text":"","code":"wrapper_cooccurence_heatmap(   x,   method = \"Jaccard\",   column_title = \"\",   colors = NULL,   print_text = FALSE,   text_fontsize = 5,   text_col = \"black\",   order = TRUE,   draw = TRUE,   title = \"\" )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cooccurence_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap of Jaccard similarity between pairs of covariates — wrapper_cooccurence_heatmap","text":"x Data frame covariates absence encoded 0 presence encoded 1.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_biomarker.html","id":null,"dir":"Reference","previous_headings":"","what":"Cox regression estimating biomarker effect — wrapper_cox_regression_biomarker","title":"Cox regression estimating biomarker effect — wrapper_cox_regression_biomarker","text":"Cox regression estimating biomarker effect","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_biomarker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cox regression estimating biomarker effect — wrapper_cox_regression_biomarker","text":"","code":"wrapper_cox_regression_biomarker(   data,   tte_var,   censor_var,   biomarker_vars,   treatment_var = NULL,   adjustment_vars = NULL,   strata_vars = NULL,   strat2_var = NULL,   variable_names = NULL,   caption = NULL,   sr_times = NULL,   print_nevent = TRUE,   print_mst = TRUE,   print_total = TRUE,   print_pvalues = TRUE,   print_adjpvalues = TRUE,   print_hr = TRUE,   print_sr_cis = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_biomarker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cox regression estimating biomarker effect — wrapper_cox_regression_biomarker","text":"data Data frame. tte_var Name time--event variable. variable must numeric. censor_var Name censor variable. numeric encode 1 event 0 censor. biomarker_vars Vector biomarker names. treatment_var Name variable treatment arms. provided biomarker effect tested per arm. adjustment_vars Vector covariate names used adjustment model. strata_vars Vector covariates used stratification factors model. strat2_var Name second stratification variable used splitting data. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. sr_times Vector times used compute survival rates, example, percent 3-year IDSF. print_nevent Logical. Whether print numbers events. print_mst Logical. Whether print median survival time (MST). print_total Logical. Whether print total number samples total number events. print_pvalues Logical. Whether print p-values. print_adjpvalues Logical. Whether print adjusted p-values.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_core_interaction.html","id":null,"dir":"Reference","previous_headings":"","what":"Cox regression with additive model with interaction — wrapper_cox_regression_core_interaction","title":"Cox regression with additive model with interaction — wrapper_cox_regression_core_interaction","text":"Cox regression additive model interaction","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_core_interaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cox regression with additive model with interaction — wrapper_cox_regression_core_interaction","text":"","code":"wrapper_cox_regression_core_interaction(   data,   tte_var,   censor_var,   interaction1_vars,   interaction2_var,   covariate_vars = NULL,   strata_vars = NULL,   keep_obs = TRUE,   variable_names = NULL,   caption = NULL,   print_pvalues = TRUE,   print_adjpvalues = TRUE )  wrapper_cox_regression_core_interaction_strat(   data,   tte_var,   censor_var,   interaction1_vars,   interaction2_var,   covariate_vars = NULL,   strata_vars = NULL,   strat1_var = NULL,   strat2_var = NULL,   variable_names = NULL,   caption = NULL,   print_pvalues = TRUE,   print_adjpvalues = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_core_interaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cox regression with additive model with interaction — wrapper_cox_regression_core_interaction","text":"data Data frame. tte_var Name time--event variable. variable must numeric. censor_var Name censor variable. numeric encode 1 event 0 censor. interaction1_vars Names first interaction variables. correspond biomarkers. interaction2_var Name second interaction variable. correspond treatment arm. covariate_vars Vector names covariates included formula simple additive model: `~ covariate_vars[1] + covariate_vars[2] + covariate_vars[3] + ....` strata_vars Vector names covariates used strata. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. print_pvalues Logical. Whether print p-values. print_adjpvalues Logical. Whether print adjusted p-values. strat1_var Name second stratification variable. strat2_var Name second stratification variable used splitting data.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_core_interaction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cox regression with additive model with interaction — wrapper_cox_regression_core_interaction","text":"","code":"data(bdata)  data <- bdata  data$GeneA_cat2 <- wrapper_cut_2groups(data$GeneA) data$GeneB_cat2 <- wrapper_cut_2groups(data$GeneB)  tte_var <- \"PFS\" censor_var <- \"PFS_Event\"  interaction1_vars <- c(\"GeneA_cat2\", \"GeneB_cat2\") interaction2_var <- \"Treatment_Arm\" covariate_vars <- c(\"IPI\", \"Cell_Of_Origin\")  x <- wrapper_cox_regression_core_interaction(data, tte_var = tte_var, censor_var = censor_var, interaction1_vars = interaction1_vars, interaction2_var = interaction2_var, covariate_vars = covariate_vars)  boutput(x) #>   Covariate1     Effect1    Covariate2     Effect2 Total N   HR     HR 95% CI #> 1 GeneA cat2 high vs low Treatment Arm TRT vs CTRL     391 1.02 (0.54 - 1.91) #> 2 GeneB cat2 high vs low Treatment Arm TRT vs CTRL     391 0.66 (0.35 - 1.25) #>   P-value Adj. P-value #> 1  0.9595       0.9595 #> 2  0.2000       0.4000"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_core_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Cox regression with simple additive model — wrapper_cox_regression_core_simple","title":"Cox regression with simple additive model — wrapper_cox_regression_core_simple","text":"function can used one interested effects multiple covariates multivariate model.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_core_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cox regression with simple additive model — wrapper_cox_regression_core_simple","text":"","code":"wrapper_cox_regression_core_simple(   data,   tte_var,   censor_var,   covariate_vars,   strata_vars = NULL,   return_vars = NULL,   keep_obs = TRUE,   variable_names = NULL,   caption = NULL,   force_empty_cols = FALSE,   sr_times = NULL,   print_nevent = TRUE,   print_mst = TRUE,   print_total = TRUE,   print_pvalues = TRUE,   print_adjpvalues = TRUE,   print_hr = TRUE,   print_sr_cis = FALSE )  wrapper_cox_regression_core_simple_strat(   data,   tte_var,   censor_var,   covariate_vars,   strata_vars = NULL,   return_vars = NULL,   strat1_var = NULL,   strat2_var = NULL,   variable_names = NULL,   caption = NULL,   force_empty_cols = FALSE,   sr_times = NULL,   print_nevent = TRUE,   print_mst = TRUE,   print_total = TRUE,   print_pvalues = TRUE,   print_adjpvalues = TRUE,   print_hr = TRUE,   print_sr_cis = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_core_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cox regression with simple additive model — wrapper_cox_regression_core_simple","text":"data Data frame. tte_var Name time--event variable. variable must numeric. censor_var Name censor variable. numeric encode 1 event 0 censor. covariate_vars Vector names covariates included formula simple additive model: `~ covariate_vars[1] + covariate_vars[2] + covariate_vars[3] + ....` strata_vars Vector names covariates used strata. return_vars Vector names covariates statistics returned. NULL, statistics returned covariates. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. force_empty_cols Logical. Whether display output columns empty. sr_times Vector times used compute survival rates, example, percent 3-year IDSF. print_nevent Logical. Whether print numbers events. print_mst Logical. Whether print median survival time (MST). print_total Logical. Whether print total number samples total number events. print_pvalues Logical. Whether print p-values. print_adjpvalues Logical. Whether print adjusted p-values. strat1_var Name first stratification variable used splitting data. strat2_var Name second stratification variable used splitting data.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_core_simple.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cox regression with simple additive model — wrapper_cox_regression_core_simple","text":"factor covariate returned reference level zero count, results set NAs levels used reference means possible fit model want.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_core_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cox regression with simple additive model — wrapper_cox_regression_core_simple","text":"","code":"data(bdata)  data <- bdata tte_var <- \"PFS\" censor_var <- \"PFS_Event\" covariate_vars <- c(\"Treatment_Arm\", \"GeneA\", \"IPI\", \"Cell_Of_Origin\")  x <- wrapper_cox_regression_core_simple(data, tte_var = tte_var, censor_var = censor_var, covariate_vars = covariate_vars) #> Warning: row names were found from a short variable and have been discarded #> Warning: row names were found from a short variable and have been discarded #> Warning: row names were found from a short variable and have been discarded  boutput(x) #>         Covariate          Subgroup Total N Total Events   N     Events   MST #> 1   Treatment Arm              CTRL     391          165 200 85 (42.5%)  83.0 #> 2                               TRT     391          165 191 80 (41.9%) 100.3 #> 3           GeneA                       391          165                      #> 4             IPI               Low     391          165  78 25 (32.1%)    NA #> 5                  Low-Intermediate     391          165 144 51 (35.4%)  92.0 #> 6                 High-Intermediate     391          165 103 49 (47.6%)  83.1 #> 7                              High     391          165  66 40 (60.6%)  63.6 #> 8  Cell Of Origin               GCB     391          165 218 80 (36.7%)    NA #> 9                      UNCLASSIFIED     391          165  62 34 (54.8%)  80.4 #> 10                              ABC     391          165 111 51 (45.9%)  84.5 #>       MST 95% CI   HR     HR 95% CI    P-value Adj. P-value #> 1    (80.3 - NA)                                            #> 2    (84.6 - NA) 0.73 (0.53 - 0.99)   0.0444 *     0.0777 . #> 3                1.03 (0.89 - 1.20)     0.6919       0.6919 #> 4    (99.9 - NA)                                            #> 5    (84.5 - NA) 1.17 (0.72 - 1.91)     0.5157       0.6017 #> 6    (63.4 - NA) 1.79 (1.10 - 2.93)   0.0202 *     0.0500 * #> 7  (27.3 - 82.2) 2.70 (1.62 - 4.51) 0.0001 ***   0.0010 *** #> 8    (87.1 - NA)                                            #> 9  (57.6 - 88.7) 1.62 (1.07 - 2.44)   0.0214 *     0.0500 * #> 10   (74.7 - NA) 1.23 (0.86 - 1.75)     0.2659       0.3723  bforest(x)    ### Fit a stratified model   covariate_vars <- c(\"Treatment_Arm\", \"GeneA\") strata_vars <- c(\"IPI\", \"Cell_Of_Origin\")  x <- wrapper_cox_regression_core_simple(data, tte_var = tte_var, censor_var = censor_var, covariate_vars = covariate_vars, strata_vars = strata_vars) #> Warning: row names were found from a short variable and have been discarded  boutput(x) #>       Covariate Subgroup Total N Total Events   N     Events   MST  MST 95% CI #> 1 Treatment Arm     CTRL     391          165 200 85 (42.5%)  83.0 (80.3 - NA) #> 2                    TRT     391          165 191 80 (41.9%) 100.3 (84.6 - NA) #> 3         GeneA              391          165                                  #>     HR     HR 95% CI  P-value Adj. P-value #> 1                                          #> 2 0.74 (0.54 - 1.01) 0.0555 .       0.1110 #> 3 0.99 (0.85 - 1.16)   0.9334       0.9334    data(bdata)  data <- bdata tte_var <- \"PFS\" censor_var <- \"PFS_Event\" covariate_vars <- c(\"IPI\", \"GeneA\")  strat1_var = \"Cell_Of_Origin\" strat2_var = \"Treatment_Arm\"   x <- wrapper_cox_regression_core_simple_strat(data, tte_var = tte_var, censor_var = censor_var, covariate_vars = covariate_vars, strat1_var = strat1_var, strat2_var = strat2_var) #> Warning: row names were found from a short variable and have been discarded #> Warning: row names were found from a short variable and have been discarded #> Warning: row names were found from a short variable and have been discarded #> Warning: row names were found from a short variable and have been discarded #> Warning: row names were found from a short variable and have been discarded #> Warning: row names were found from a short variable and have been discarded  boutput(x) #>    Treatment Arm Cell Of Origin Covariate          Subgroup Total N #> 1           CTRL            GCB       IPI               Low     121 #> 2                                          Low-Intermediate     121 #> 3                                         High-Intermediate     121 #> 4                                                      High     121 #> 5           CTRL            GCB     GeneA                       121 #> 6           CTRL   UNCLASSIFIED       IPI               Low      28 #> 7                                          Low-Intermediate      28 #> 8                                         High-Intermediate      28 #> 9                                                      High      28 #> 10          CTRL   UNCLASSIFIED     GeneA                        28 #> 11          CTRL            ABC       IPI               Low      51 #> 12                                         Low-Intermediate      51 #> 13                                        High-Intermediate      51 #> 14                                                     High      51 #> 15          CTRL            ABC     GeneA                        51 #> 16           TRT            GCB       IPI               Low      97 #> 17                                         Low-Intermediate      97 #> 18                                        High-Intermediate      97 #> 19                                                     High      97 #> 20           TRT            GCB     GeneA                        97 #> 21           TRT   UNCLASSIFIED       IPI               Low      34 #> 22                                         Low-Intermediate      34 #> 23                                        High-Intermediate      34 #> 24                                                     High      34 #> 25           TRT   UNCLASSIFIED     GeneA                        34 #> 26           TRT            ABC       IPI               Low      60 #> 27                                         Low-Intermediate      60 #> 28                                        High-Intermediate      60 #> 29                                                     High      60 #> 30           TRT            ABC     GeneA                        60 #>    Total Events  N     Events   MST  MST 95% CI    HR       HR 95% CI   P-value #> 1            50 32 12 (37.5%)    NA (76.9 - NA)                                 #> 2            50 44 14 (31.8%)    NA (78.3 - NA)  0.97   (0.45 - 2.11)    0.9439 #> 3            50 32 17 (53.1%)  65.7 (36.5 - NA)  2.22   (1.05 - 4.70)  0.0374 * #> 4            50 13  7 (53.8%)  98.3 (19.6 - NA)  1.89   (0.74 - 4.82)    0.1860 #> 5            50                                  0.99   (0.73 - 1.34)    0.9417 #> 6            14  7  3 (42.9%)    NA (32.1 - NA)                                 #> 7            14 10  6 (60.0%)  80.4 (15.1 - NA)  1.65   (0.37 - 7.43)    0.5120 #> 8            14  7  3 (42.9%)    NA  (1.6 - NA)  1.29   (0.25 - 6.61)    0.7592 #> 9            14  4  2 (50.0%)  28.8 (13.7 - NA)  1.74  (0.28 - 10.74)    0.5528 #> 10           14                                  0.93   (0.59 - 1.45)    0.7359 #> 11           21  5  2 (40.0%)    NA  (4.0 - NA)                                 #> 12           21 17  3 (17.6%)    NA (83.0 - NA)  0.23   (0.03 - 1.53)    0.1271 #> 13           21 18  9 (50.0%)  82.6 (33.3 - NA)  0.91   (0.18 - 4.62)    0.9130 #> 14           21 11  7 (63.6%)  23.4  (9.9 - NA)  2.91  (0.59 - 14.20)    0.1874 #> 15           21                                  1.68   (1.01 - 2.79)  0.0463 * #> 16           30 23  3 (13.0%)    NA          NA                                 #> 17           30 36  9 (25.0%)    NA (91.0 - NA)  2.19   (0.59 - 8.13)    0.2396 #> 18           30 20  7 (35.0%) 100.3 (72.4 - NA)  3.06  (0.79 - 11.86)    0.1065 #> 19           30 18 11 (61.1%)  75.5 (27.3 - NA)  6.13  (1.70 - 22.09) 0.0055 ** #> 20           30                                  1.08   (0.71 - 1.64)    0.7348 #> 21           20  5  1 (20.0%)    NA (31.9 - NA)                                 #> 22           20 14  8 (57.1%)  82.1 (31.2 - NA)  3.53  (0.44 - 28.27)    0.2346 #> 23           20 10  6 (60.0%)  72.7 (48.8 - NA)  4.07  (0.49 - 34.00)    0.1954 #> 24           20  5 5 (100.0%)  21.9  (8.9 - NA) 10.54 (1.07 - 103.38)  0.0433 * #> 25           20                                  1.02   (0.67 - 1.54)    0.9268 #> 26           30  6  4 (66.7%)  76.1 (33.6 - NA)                                 #> 27           30 23 11 (47.8%)  84.5 (74.7 - NA)  0.70   (0.22 - 2.20)    0.5411 #> 28           30 16  7 (43.8%)    NA (40.7 - NA)  0.63   (0.18 - 2.15)    0.4583 #> 29           30 15  8 (53.3%)  67.6 (15.9 - NA)  1.03   (0.31 - 3.42)    0.9676 #> 30           30                                  0.81   (0.53 - 1.25)    0.3499 #>    Adj. P-value #> 1               #> 2        0.9676 #> 3        0.2777 #> 4        0.5209 #> 5        0.9676 #> 6               #> 7        0.8292 #> 8        0.9590 #> 9        0.8292 #> 10       0.9590 #> 11              #> 12       0.5085 #> 13       0.9676 #> 14       0.5209 #> 15       0.2777 #> 16              #> 17       0.5229 #> 18       0.5085 #> 19       0.1328 #> 20       0.9590 #> 21              #> 22       0.5229 #> 23       0.5209 #> 24       0.2777 #> 25       0.9676 #> 26              #> 27       0.8292 #> 28       0.8292 #> 29       0.9676 #> 30       0.6999"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_interaction.html","id":null,"dir":"Reference","previous_headings":"","what":"Cox regression estimating interaction effect between biomaker and treatment — wrapper_cox_regression_interaction","title":"Cox regression estimating interaction effect between biomaker and treatment — wrapper_cox_regression_interaction","text":"Cox regression estimating interaction effect biomaker treatment","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_interaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cox regression estimating interaction effect between biomaker and treatment — wrapper_cox_regression_interaction","text":"","code":"wrapper_cox_regression_interaction(   data,   tte_var,   censor_var,   treatment_var,   biomarker_vars,   adjustment_vars = NULL,   strata_vars = NULL,   strat1_var = NULL,   strat2_var = NULL,   variable_names = NULL,   caption = NULL,   print_pvalues = TRUE,   print_adjpvalues = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_interaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cox regression estimating interaction effect between biomaker and treatment — wrapper_cox_regression_interaction","text":"data Data frame. tte_var Name time--event variable. variable must numeric. censor_var Name censor variable. numeric encode 1 event 0 censor. treatment_var Name column treatment information. biomarker_vars Vector biomarker names. adjustment_vars Vector covariate names used adjustment. strata_vars Vector names covariates used strata. strat1_var Name second stratification variable. strat2_var Name second stratification variable used splitting data. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. print_pvalues Logical. Whether print p-values. print_adjpvalues Logical. Whether print adjusted p-values.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_treatment.html","id":null,"dir":"Reference","previous_headings":"","what":"Cox regression estimating treatment effect within biomarker subgroups — wrapper_cox_regression_treatment","title":"Cox regression estimating treatment effect within biomarker subgroups — wrapper_cox_regression_treatment","text":"analysis biomarkers must categorical.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_treatment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cox regression estimating treatment effect within biomarker subgroups — wrapper_cox_regression_treatment","text":"","code":"wrapper_cox_regression_treatment(   data,   tte_var,   censor_var,   treatment_var,   biomarker_vars = NULL,   adjustment_vars = NULL,   strata_vars = NULL,   strat2_var = NULL,   variable_names = NULL,   caption = NULL,   sr_times = NULL,   print_nevent = TRUE,   print_mst = TRUE,   print_total = TRUE,   print_pvalues = TRUE,   print_adjpvalues = TRUE,   print_hr = TRUE,   print_sr_cis = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cox_regression_treatment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cox regression estimating treatment effect within biomarker subgroups — wrapper_cox_regression_treatment","text":"data Data frame. tte_var Name time--event variable. variable must numeric. censor_var Name censor variable. numeric encode 1 event 0 censor. treatment_var Name variable treatment arms. biomarker_vars Vector names categorical biomarkers. NULL, overall treatment effect estimated. adjustment_vars Vector covariate names used adjustment model. strata_vars Vector covariates used stratification factors model. strat2_var Name second stratification variable used splitting data. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. sr_times Vector times used compute survival rates, example, percent 3-year IDSF. print_nevent Logical. Whether print numbers events. print_mst Logical. Whether print median survival time (MST). print_total Logical. Whether print total number samples total number events. print_pvalues Logical. Whether print p-values. print_adjpvalues Logical. Whether print adjusted p-values.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cut_2groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratify data into two groups — wrapper_cut_2groups","title":"Stratify data into two groups — wrapper_cut_2groups","text":"Stratify data two groups","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cut_2groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratify data into two groups — wrapper_cut_2groups","text":"","code":"wrapper_cut_2groups(x, probs = 0.5, cutoff = NULL, labels = NULL, right = TRUE)  wrapper_cut_2groups_strat(   x,   strata,   probs = rep(0.5, nlevels(strata)),   cutoff = NULL,   labels = NULL,   right = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cut_2groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratify data into two groups — wrapper_cut_2groups","text":"x Vector continuous values cut.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cut_median.html","id":null,"dir":"Reference","previous_headings":"","what":"Dichotomize data by median — wrapper_cut_median","title":"Dichotomize data by median — wrapper_cut_median","text":"Dichotomize data median","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cut_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dichotomize data by median — wrapper_cut_median","text":"","code":"wrapper_cut_median(x, labels = NULL, right = TRUE)  wrapper_cut_median_strat(x, strata, labels = NULL, right = TRUE)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cut_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dichotomize data by median — wrapper_cut_median","text":"x Vector continuous values cut.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cut_quartiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratify data into quartiles — wrapper_cut_quartiles","title":"Stratify data into quartiles — wrapper_cut_quartiles","text":"Stratify data quartiles","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cut_quartiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratify data into quartiles — wrapper_cut_quartiles","text":"","code":"wrapper_cut_quartiles(x, labels = NULL, right = TRUE)  wrapper_cut_quartiles_strat(x, strata, labels = NULL, right = TRUE)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cut_quartiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratify data into quartiles — wrapper_cut_quartiles","text":"x Vector continuous values cut.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cut_quartiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stratify data into quartiles — wrapper_cut_quartiles","text":"","code":"set.seed(123) x <- sample.int(n = 100, replace = TRUE) x #>   [1] 31 79 51 14 67 42 50 43 14 25 90 91 69 91 57 92  9 93 99 72 26  7 42  9 83 #>  [26] 36 78 81 43 76 15 32  7  9 41 74 23 27 60 53  7 53 27 96 38 89 34 93 69 72 #>  [51] 76 63 13 82 97 91 25 38 21 79 41 47 90 60 95 16 94  6 72 86 86 39 31 81 50 #>  [76] 34  4 13 69 25 52 22 89 32 25 87 35 40 30 12 31 30 64 99 14 93 96 71 67 23 strata <- factor(rep(c(\"A\", \"B\"), each = 50)) strata  #>   [1] A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A #>  [38] A A A A A A A A A A A A A B B B B B B B B B B B B B B B B B B B B B B B B #>  [75] B B B B B B B B B B B B B B B B B B B B B B B B B B #> Levels: A B  wrapper_cut_quartiles_strat(x = x, strata = strata) #>   [1] (25%, 50%]  (75%, 100%] (50%, 75%]  [0%, 25%]   (50%, 75%]  (25%, 50%]  #>   [7] (25%, 50%]  (25%, 50%]  [0%, 25%]   [0%, 25%]   (75%, 100%] (75%, 100%] #>  [13] (50%, 75%]  (75%, 100%] (50%, 75%]  (75%, 100%] [0%, 25%]   (75%, 100%] #>  [19] (75%, 100%] (50%, 75%]  [0%, 25%]   [0%, 25%]   (25%, 50%]  [0%, 25%]   #>  [25] (75%, 100%] (25%, 50%]  (75%, 100%] (75%, 100%] (25%, 50%]  (50%, 75%]  #>  [31] [0%, 25%]   (25%, 50%]  [0%, 25%]   [0%, 25%]   (25%, 50%]  (50%, 75%]  #>  [37] [0%, 25%]   [0%, 25%]   (50%, 75%]  (50%, 75%]  [0%, 25%]   (50%, 75%]  #>  [43] [0%, 25%]   (75%, 100%] (25%, 50%]  (75%, 100%] (25%, 50%]  (75%, 100%] #>  [49] (50%, 75%]  (50%, 75%]  (50%, 75%]  (50%, 75%]  [0%, 25%]   (75%, 100%] #>  [55] (75%, 100%] (75%, 100%] [0%, 25%]   (25%, 50%]  [0%, 25%]   (50%, 75%]  #>  [61] (25%, 50%]  (25%, 50%]  (75%, 100%] (50%, 75%]  (75%, 100%] [0%, 25%]   #>  [67] (75%, 100%] [0%, 25%]   (50%, 75%]  (75%, 100%] (75%, 100%] (25%, 50%]  #>  [73] (25%, 50%]  (50%, 75%]  (50%, 75%]  (25%, 50%]  [0%, 25%]   [0%, 25%]   #>  [79] (50%, 75%]  [0%, 25%]   (50%, 75%]  [0%, 25%]   (75%, 100%] (25%, 50%]  #>  [85] [0%, 25%]   (75%, 100%] (25%, 50%]  (25%, 50%]  (25%, 50%]  [0%, 25%]   #>  [91] (25%, 50%]  (25%, 50%]  (50%, 75%]  (75%, 100%] [0%, 25%]   (75%, 100%] #>  [97] (75%, 100%] (50%, 75%]  (50%, 75%]  [0%, 25%]   #> Levels: [0%, 25%] (25%, 50%] (50%, 75%] (75%, 100%]"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cut_quintiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratify data into quintiles — wrapper_cut_quintiles","title":"Stratify data into quintiles — wrapper_cut_quintiles","text":"Stratify data quintiles","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cut_quintiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratify data into quintiles — wrapper_cut_quintiles","text":"","code":"wrapper_cut_quintiles(x, labels = NULL, right = TRUE)  wrapper_cut_quintiles_strat(x, strata, labels = NULL, right = TRUE)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cut_quintiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratify data into quintiles — wrapper_cut_quintiles","text":"x Vector continuous values cut.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cut_tertiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratify data into tertiles — wrapper_cut_tertiles","title":"Stratify data into tertiles — wrapper_cut_tertiles","text":"Stratify data tertiles","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cut_tertiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratify data into tertiles — wrapper_cut_tertiles","text":"","code":"wrapper_cut_tertiles(x, labels = NULL, right = TRUE)  wrapper_cut_tertiles_strat(x, strata, labels = NULL, right = TRUE)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_cut_tertiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratify data into tertiles — wrapper_cut_tertiles","text":"x Vector continuous values cut.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_deside_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a summary variable indicating significant genes — wrapper_deside_tests","title":"Create a summary variable indicating significant genes — wrapper_deside_tests","text":"Create summary variable indicating significant genes","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_deside_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a summary variable indicating significant genes — wrapper_deside_tests","text":"","code":"wrapper_deside_tests(   x,   topn = Inf,   pval = 0.05,   lfc = 0,   gene_vars = c(\"HGNC_Symbol\"),   lfc_prefix = \"logFC\",   pval_prefix = \"P.Value\",   adjp_prefix = \"adj.P.Val\",   summary_prefix = NULL,   sep = \"_\",   order_both_direction = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_deside_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a summary variable indicating significant genes — wrapper_deside_tests","text":"x Data frame merged topTables","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_dispaly_significant_camera.html","id":null,"dir":"Reference","previous_headings":"","what":"Display significantly enriched gene sets — wrapper_dispaly_significant_camera","title":"Display significantly enriched gene sets — wrapper_dispaly_significant_camera","text":"Display significantly enriched gene sets","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_dispaly_significant_camera.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display significantly enriched gene sets — wrapper_dispaly_significant_camera","text":"","code":"wrapper_dispaly_significant_camera(   x,   contrast,   direction = \"up\",   sort_by = \"pval\",   topn = 20,   pval = 0.05,   geneset_vars = \"GenesetID\",   direction_prefix = \"Direction\",   pval_prefix = \"P.Value\",   adjp_prefix = \"adj.P.Val\",   stats_prefixes = c(\"Size\", \"Leading.Genes\", \"Median.t\"),   sep = \"_\",   caption = NULL )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_dispaly_significant_camera.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display significantly enriched gene sets — wrapper_dispaly_significant_camera","text":"x Data frame CAMERA results.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_dispaly_significant_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Display significantly DE genes — wrapper_dispaly_significant_genes","title":"Display significantly DE genes — wrapper_dispaly_significant_genes","text":"Display significantly DE genes","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_dispaly_significant_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display significantly DE genes — wrapper_dispaly_significant_genes","text":"","code":"wrapper_dispaly_significant_genes(   x,   contrast,   direction = \"up\",   sort_by = \"pval\",   topn = 20,   pval = 0.05,   lfc = 0,   gene_vars = c(\"HGNC_Symbol\"),   lfc_prefix = \"logFC\",   pval_prefix = \"P.Value\",   adjp_prefix = \"adj.P.Val\",   stats_prefixes = NULL,   sep = \"_\",   caption = NULL )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_dispaly_significant_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display significantly DE genes — wrapper_dispaly_significant_genes","text":"x Data frame merged topTables direction Possible values: \"\", \"\", \"\". sort_by Possible values: \"none\", \"pval\", \"lfc\".","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_dispaly_significant_gsea.html","id":null,"dir":"Reference","previous_headings":"","what":"Display significantly enriched gene sets — wrapper_dispaly_significant_gsea","title":"Display significantly enriched gene sets — wrapper_dispaly_significant_gsea","text":"Display significantly enriched gene sets","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_dispaly_significant_gsea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display significantly enriched gene sets — wrapper_dispaly_significant_gsea","text":"","code":"wrapper_dispaly_significant_gsea(   x,   contrast,   direction = \"up\",   sort_by = \"pval\",   topn = 20,   pval = 0.05,   geneset_vars = \"GenesetID\",   direction_prefix = \"Direction\",   pval_prefix = \"P.Value\",   adjp_prefix = \"adj.P.Val\",   stats_prefixes = c(\"Size\", \"Leading.Genes\", \"NES\"),   sep = \"_\",   caption = NULL )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_dispaly_significant_gsea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display significantly enriched gene sets — wrapper_dispaly_significant_gsea","text":"x Data frame GSEA results.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_dispaly_significant_ora.html","id":null,"dir":"Reference","previous_headings":"","what":"Display significant pathways for a given contrast and direction — wrapper_dispaly_significant_ora","title":"Display significant pathways for a given contrast and direction — wrapper_dispaly_significant_ora","text":"Display significant pathways given contrast direction","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_dispaly_significant_ora.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display significant pathways for a given contrast and direction — wrapper_dispaly_significant_ora","text":"","code":"wrapper_dispaly_significant_ora(   x,   contrast,   direction = \"both\",   sort_by = \"pval\",   topn = 20,   pval = 0.05,   geneset_vars = \"GenesetID\",   pval_prefix = \"P.Value\",   adjp_prefix = \"adj.P.Val\",   genes_prefix = \"Genes\",   stats_prefixes = c(\"GeneRatio\", \"BgRatio\", \"Observed\", \"Expected\"),   sep = \"_\",   caption = NULL )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_dispaly_significant_ora.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display significant pathways for a given contrast and direction — wrapper_dispaly_significant_ora","text":"x TopTable ORA results.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_error_line_plot_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Error line plot — wrapper_error_line_plot_core","title":"Error line plot — wrapper_error_line_plot_core","text":"Error line plot","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_error_line_plot_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error line plot — wrapper_error_line_plot_core","text":"","code":"wrapper_error_line_plot_core(   data = NULL,   x_var,   y_var,   color_line_var,   colors_line = NULL,   variable_names = NULL,   title = TRUE,   subtitle = TRUE,   xlab = TRUE,   ylab = TRUE,   ggdata = NULL )  wrapper_error_line_plot_core_strat(   data,   x_var,   y_var,   color_line_var,   strat1_var = NULL,   strat2_var = NULL,   colors_line = NULL,   variable_names = NULL,   title = TRUE,   xlab = TRUE,   ylab = TRUE,   strat1_label_both = TRUE,   strat2_label_both = TRUE,   legend_colors_line_title = TRUE,   legend_position = \"right\",   xlim = NULL,   ylim = NULL,   strat_scales = \"fixed\",   strat1_nrow = 1,   strat1_ncol = NULL,   strat2_nrow = NULL,   strat2_ncol = 1,   less_legends = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_error_line_plot_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error line plot — wrapper_error_line_plot_core","text":"data Data frame. strat1_var Name first stratification variable. strat2_var Name second stratification variable.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_extract_from_topTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract given statistics for all contrasts available in merged topTable — wrapper_extract_from_topTable","title":"Extract given statistics for all contrasts available in merged topTable — wrapper_extract_from_topTable","text":"Extract given statistics contrasts available merged topTable","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_extract_from_topTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract given statistics for all contrasts available in merged topTable — wrapper_extract_from_topTable","text":"","code":"wrapper_extract_from_topTable(   x,   contrasts = NULL,   extract_prefix = \"logFC\",   sep = \"_\" )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_extract_from_topTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract given statistics for all contrasts available in merged topTable — wrapper_extract_from_topTable","text":"x Data frame merged topTables","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_fishers_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisher's test — wrapper_fishers_test","title":"Fisher's test — wrapper_fishers_test","text":"Run Fisher's test multiple covariates.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_fishers_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisher's test — wrapper_fishers_test","text":"","code":"wrapper_fishers_test(   data,   col_var,   row_vars,   strat1_var = NULL,   strat2_var = NULL,   variable_names = NULL,   caption = NULL,   margin = 1,   force_empty_cols = FALSE,   print_pvalues = TRUE,   print_adjpvalues = TRUE,   print_OR = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_fishers_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisher's test — wrapper_fishers_test","text":"data Data frame. row_vars Vector names categorical variables. strat1_var Name second stratification variable.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_fishers_test_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisher's test — wrapper_fishers_test_core","title":"Fisher's test — wrapper_fishers_test_core","text":"Fisher's test","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_fishers_test_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisher's test — wrapper_fishers_test_core","text":"","code":"wrapper_fishers_test_core(   data,   col_var,   row_var,   variable_names = NULL,   caption = NULL,   margin = 1,   force_empty_cols = FALSE,   print_pvalues = TRUE,   print_OR = TRUE )  wrapper_fishers_test_core_strat(   data,   col_var,   row_var,   strat1_var = NULL,   strat2_var = NULL,   variable_names = NULL,   caption = NULL,   margin = 1,   force_empty_cols = FALSE,   print_pvalues = TRUE,   print_adjpvalues = TRUE,   print_OR = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_fishers_test_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisher's test — wrapper_fishers_test_core","text":"data Data frame. strat1_var Name second stratification variable.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_gene_expression_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap with logFC or z-score normalized gene expression — wrapper_gene_expression_heatmap","title":"Heatmap with logFC or z-score normalized gene expression — wrapper_gene_expression_heatmap","text":"Heatmap logFC z-score normalized gene expression","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_gene_expression_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap with logFC or z-score normalized gene expression — wrapper_gene_expression_heatmap","text":"","code":"wrapper_gene_expression_heatmap(   x,   center = TRUE,   scale = TRUE,   title = \"\",   name = NULL,   centered = TRUE,   palette = NULL,   rev = FALSE,   trim_values = NULL,   trim_prop = NULL,   trim_range = NULL,   ceiling = FALSE,   rect_gp = grid::gpar(col = NA),   cluster_rows = FALSE,   cluster_columns = FALSE,   row_dend_reorder = FALSE,   column_dend_reorder = FALSE,   row_split = NULL,   column_split = NULL,   show_row_names = TRUE,   show_column_names = FALSE,   row_names_gp = grid::gpar(fontsize = 9),   column_names_gp = grid::gpar(fontsize = 9),   row_names_max_width = unit(20, \"cm\"),   column_names_max_height = unit(20, \"cm\"),   row_names_width = 80,   draw = TRUE,   return = \"ht\",   ... )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_gene_expression_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap with logFC or z-score normalized gene expression — wrapper_gene_expression_heatmap","text":"x Matrix expression plot","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_gsea.html","id":null,"dir":"Reference","previous_headings":"","what":"Run GSEA — wrapper_gsea","title":"Run GSEA — wrapper_gsea","text":"Run GSEA","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_gsea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run GSEA — wrapper_gsea","text":"","code":"wrapper_gsea(   x,   genesets,   genesets_extra_info = NULL,   gene_mapping = NULL,   gene_var = \"EntrezIDs\",   statistic_prefix = \"t\",   sep = \"_\",   min_GS_size = 10,   max_GS_size = 500,   topn_genes = 20,   scoreType = NULL,   nPermSimple = 1000 )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_gsea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run GSEA — wrapper_gsea","text":"x TopTable","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_gsea_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Run GSEA — wrapper_gsea_core","title":"Run GSEA — wrapper_gsea_core","text":"Run GSEA fgsea::fgseaMultilevel","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_gsea_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run GSEA — wrapper_gsea_core","text":"","code":"wrapper_gsea_core(   statistic,   genesets,   genesets_extra_info = NULL,   gene_mapping = NULL,   name = \"\",   sep = \"_\",   min_GS_size = 10,   max_GS_size = 500,   topn_genes = 20,   statistic_name = \"t\",   scoreType = NULL,   nPermSimple = 1000 )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_gsea_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run GSEA — wrapper_gsea_core","text":"statistic Named vector t statistics logFC limma.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_gsea_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot GSEA statistics ranks — wrapper_gsea_plot","title":"Plot GSEA statistics ranks — wrapper_gsea_plot","text":"Plot GSEA statistics ranks","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_gsea_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot GSEA statistics ranks — wrapper_gsea_plot","text":"","code":"wrapper_gsea_plot(   x,   contrast,   genesets,   gene_var = \"EntrezIDs\",   statistic_prefix = \"t\",   sep = \"_\",   gsea_results = NULL,   geneset_var = \"GenesetID\",   adjp_var = \"adj.P.Val\",   enrichment_score_var = \"NES\",   trim_limits = 0.01,   color_low = \"#42399B\",   color_mid = \"darkgrey\",   color_high = \"#D70131\",   title = \"\",   title_size = 10,   title_width = 100,   axis_text_y_size = 9,   axis_text_y_width = 80 )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_gsea_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot GSEA statistics ranks — wrapper_gsea_plot","text":"x TopTable statistic, example, DGE results limma. gsea_results TopTable selected GSEA results obtained running 'wrapper_dispaly_significant_gsea'.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_gsea_plot_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot GSEA statistics ranks — wrapper_gsea_plot_core","title":"Plot GSEA statistics ranks — wrapper_gsea_plot_core","text":"Plot GSEA statistics ranks","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_gsea_plot_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot GSEA statistics ranks — wrapper_gsea_plot_core","text":"","code":"wrapper_gsea_plot_core(   statistic,   genesets,   adjp = NULL,   enrichment_score = NULL,   statistic_name = \"t\",   geneset_name = \"GenesetID\",   adjp_name = \"adj.P.Val\",   enrichment_score_name = \"NES\",   trim_limits = 0.01,   color_low = \"#42399B\",   color_mid = \"darkgrey\",   color_high = \"#D70131\",   title = \"\",   title_size = 10,   title_width = 100,   axis_text_y_size = 9,   axis_text_y_width = 80 )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_gsea_plot_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot GSEA statistics ranks — wrapper_gsea_plot_core","text":"statistic Named vector statistic. Names correspond genes. genesets Named list gene sets plot. Names correspond gene sets. adjp Vector adjusted p-values gene sets. enrichment_score Vector enrichment scores gene sets.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_kruskal_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Kruskal-Wallis H test or Wilcoxon Rank-Sum test — wrapper_kruskal_test","title":"Kruskal-Wallis H test or Wilcoxon Rank-Sum test — wrapper_kruskal_test","text":"Run Kruskal-Wallis H test Wilcoxon Rank-Sum test multiple covariates","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_kruskal_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kruskal-Wallis H test or Wilcoxon Rank-Sum test — wrapper_kruskal_test","text":"","code":"wrapper_kruskal_test(   data,   num_vars,   cat_vars,   strat1_var = NULL,   strat2_var = NULL,   method = \"kruskal\",   alternative = \"two.sided\",   paired = FALSE,   pairwise = FALSE,   variable_names = NULL,   caption = NULL,   display_statistics = NULL,   display_in_column = \"cat\",   force_empty_cols = FALSE,   print_pvalues = TRUE,   print_adjpvalues = TRUE,   drop = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_kruskal_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kruskal-Wallis H test or Wilcoxon Rank-Sum test — wrapper_kruskal_test","text":"data Data frame. num_vars Vector names numerical variables. length >= 1, 'cat_var' must length 1, stratification subgroups displayed columns statistics rows. cat_vars Vector names categorical variables. length >= 1, 'num_var' must length 1, stratification subgroups displayed rows statistics columns. strat1_var Name second stratification variable. method Test used. Possible values: \"kruskal\", \"wilcox\", \"t\". paired Logical. Paired test possible wilcox t. data must ordered pairing variable, usually subject ID. display_statistics Vector possible values: \"N\", \"Median\", \"Mean\", \"Min\", \"Max\", \"First.Quartile\", \"Third.Quartile\". display_in_column Possible values: \"cat\", \"num\".","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_kruskal_test_core_col_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Kruskal-Wallis H test or Wilcoxon Rank-Sum test (know also as Wilcoxon-Mann-Whitney test) or t-test — wrapper_kruskal_test_core_col_cat","title":"Kruskal-Wallis H test or Wilcoxon Rank-Sum test (know also as Wilcoxon-Mann-Whitney test) or t-test — wrapper_kruskal_test_core_col_cat","text":"Returns table stratification subgroups columns distribution summary statistics numerical variable rows.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_kruskal_test_core_col_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kruskal-Wallis H test or Wilcoxon Rank-Sum test (know also as Wilcoxon-Mann-Whitney test) or t-test — wrapper_kruskal_test_core_col_cat","text":"","code":"wrapper_kruskal_test_core_col_cat(   data,   num_var,   cat_var,   method = \"kruskal\",   alternative = \"two.sided\",   paired = FALSE,   variable_names = NULL,   caption = NULL,   display_statistics = NULL,   force_empty_cols = FALSE,   print_pvalues = TRUE,   drop = FALSE )  wrapper_kruskal_test_core_col_cat_strat(   data,   num_var,   cat_var,   strat1_var = NULL,   strat2_var = NULL,   method = \"kruskal\",   alternative = \"two.sided\",   paired = FALSE,   variable_names = NULL,   caption = NULL,   display_statistics = NULL,   force_empty_cols = FALSE,   print_pvalues = TRUE,   print_adjpvalues = TRUE,   drop = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_kruskal_test_core_col_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kruskal-Wallis H test or Wilcoxon Rank-Sum test (know also as Wilcoxon-Mann-Whitney test) or t-test — wrapper_kruskal_test_core_col_cat","text":"data Data frame. num_var Name numerical variable. cat_var Name categorical variable. variable must factor least two levels. method Test used. Possible values: \"kruskal\", \"wilcox\", \"t\". paired Logical. Paired test possible wilcox t. data must ordered pairing variable, usually subject ID. display_statistics Vector possible values: \"N\", \"Median\", \"Mean\", \"Min\", \"Max\", \"First.Quartile\", \"Third.Quartile\". strat1_var Name second stratification variable.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_kruskal_test_core_col_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Kruskal-Wallis H test or Wilcoxon Rank-Sum test (know also as Wilcoxon-Mann-Whitney test) or t-test — wrapper_kruskal_test_core_col_num","title":"Kruskal-Wallis H test or Wilcoxon Rank-Sum test (know also as Wilcoxon-Mann-Whitney test) or t-test — wrapper_kruskal_test_core_col_num","text":"Returns table stratification subgroups rows distribution summary statistics numerical variable columns.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_kruskal_test_core_col_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kruskal-Wallis H test or Wilcoxon Rank-Sum test (know also as Wilcoxon-Mann-Whitney test) or t-test — wrapper_kruskal_test_core_col_num","text":"","code":"wrapper_kruskal_test_core_col_num(   data,   num_var,   cat_var,   method = \"kruskal\",   alternative = \"two.sided\",   paired = FALSE,   pairwise = FALSE,   variable_names = NULL,   caption = NULL,   display_statistics = NULL,   force_empty_cols = FALSE,   print_pvalues = TRUE,   drop = FALSE )  wrapper_kruskal_test_core_col_num_strat(   data,   num_var,   cat_var,   strat1_var = NULL,   strat2_var = NULL,   method = \"kruskal\",   alternative = \"two.sided\",   paired = FALSE,   pairwise = FALSE,   variable_names = NULL,   caption = NULL,   display_statistics = NULL,   force_empty_cols = FALSE,   print_pvalues = TRUE,   print_adjpvalues = TRUE,   drop = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_kruskal_test_core_col_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kruskal-Wallis H test or Wilcoxon Rank-Sum test (know also as Wilcoxon-Mann-Whitney test) or t-test — wrapper_kruskal_test_core_col_num","text":"data Data frame. num_var Name numerical variable. cat_var Name categorical variable. variable must factor least two levels. method Test used. Possible values: \"kruskal\", \"wilcox\", \"t\". paired Logical. Paired test possible wilcox t. data must ordered pairing variable, usually subject ID. display_statistics Vector possible values: \"N\", \"Median\", \"Mean\", \"Min\", \"Max\", \"First.Quartile\", \"Third.Quartile\". strat1_var Name second stratification variable.","code":""},{"path":[]},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_line_plot_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line plot — wrapper_line_plot_core","text":"","code":"wrapper_line_plot_core(   data,   x_var,   y_var,   group_var,   color_line_var = NULL,   shape_point_var = NULL,   facet_var = NULL,   box_plot = FALSE,   colors_line = NULL,   palette_line = NULL,   shapes_point = NULL,   colors_box = \"snow\",   variable_names = NULL,   title = TRUE,   subtitle = TRUE,   xlab = TRUE,   ylab = TRUE,   legend_colors_line_title = TRUE,   legend_shapes_point_title = TRUE,   legend_position = \"right\",   legend_drop = TRUE,   aspect_ratio = NULL,   facet_label_both = TRUE,   line_size = 1,   line_type = 1,   line_alpha = 1,   smooth = \"none\",   smooth_method = \"lm\",   smooth_formula = y ~ x,   smooth_se = FALSE,   smooth_size = 1.5,   smooth_linetype = 1,   stat_summary_fun = \"median\",   stat_summary_geom = \"errorbar\",   stat_summary_position = position_dodge(width = 0.2),   point_size = 1.5,   point_alpha = 1,   title_size = NULL,   strip_text_size = NULL,   facet_scales = \"fixed\",   xlim = NULL,   ylim = NULL,   scale_y_continuous_custome = scale_y_continuous(),   axis_text_x_angle = 0,   axis_text_x_vjust = 1,   axis_text_x_hjust = 0.5,   background_grid_major = \"none\" )  wrapper_line_plot_core_strat(   data,   x_var,   y_var,   group_var,   color_line_var = NULL,   shape_point_var = NULL,   facet_var = NULL,   box_plot = FALSE,   strat1_var = NULL,   strat2_var = NULL,   colors_line = NULL,   palette_line = NULL,   shapes_point = NULL,   colors_box = \"snow\",   variable_names = NULL,   title = TRUE,   xlab = TRUE,   ylab = TRUE,   strat1_label_both = TRUE,   strat2_label_both = TRUE,   legend_colors_line_title = TRUE,   legend_shapes_point_title = TRUE,   legend_position = \"right\",   legend_drop = TRUE,   aspect_ratio = NULL,   facet_label_both = TRUE,   line_size = 1,   line_type = 1,   line_alpha = 1,   smooth = \"none\",   smooth_method = \"lm\",   smooth_formula = y ~ x,   smooth_se = FALSE,   smooth_size = 1.5,   smooth_linetype = 1,   stat_summary_fun = \"median\",   stat_summary_geom = \"errorbar\",   stat_summary_position = position_dodge(width = 0.2),   point_size = 1.5,   point_alpha = 1,   title_size = NULL,   strip_text_size = NULL,   facet_scales = \"fixed\",   xlim = NULL,   ylim = NULL,   scale_y_continuous_custome = scale_y_continuous(),   axis_text_x_angle = 0,   axis_text_x_vjust = 1,   axis_text_x_hjust = 0.5,   background_grid_major = \"none\",   strat_scales = \"fixed\",   strat1_nrow = 1,   strat1_ncol = NULL,   strat2_nrow = NULL,   strat2_ncol = 1,   less_legends = FALSE,   return_list = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_line_plot_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line plot — wrapper_line_plot_core","text":"data Data frame. smooth Possible values: \"none\", \"pooled\", \"strat\". \"strat\", stratification defined `color_line_var`. x variable continuous, `geom_smooth` used. x variable factor, `stat_summary` used. stat_summary_fun Possible values: \"median\" \"mean\". \"median\", plotted limits indicate 25 stat_summary_geomPossible values: \"crossbar\", \"errorbar\", \"linerange\", \"pointrange\". stat_summary_positionUsed define dodging summary lines smoothing strata used. strat1_varName first stratification variable. strat2_varName second stratification variable. Line plot","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a linear model — wrapper_lm","title":"Fit a linear model — wrapper_lm","text":"Fit linear model","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a linear model — wrapper_lm","text":"","code":"wrapper_lm(data, biomarker_vars, formula, contrast_matrix)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a linear model — wrapper_lm","text":"data Data frame. biomarker_vars Variables defining dependent variables.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_lmer.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a linear mixed model — wrapper_lmer","title":"Fit a linear mixed model — wrapper_lmer","text":"Fit linear mixed model","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_lmer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a linear mixed model — wrapper_lmer","text":"","code":"wrapper_lmer(data, biomarker_vars, formula, contrast_matrix)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_lmer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a linear mixed model — wrapper_lmer","text":"data Data frame. biomarker_vars Variables defining dependent variables.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logFC_dotplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Dot plot with logFC and p-values for multiple contrasts — wrapper_logFC_dotplot","title":"Dot plot with logFC and p-values for multiple contrasts — wrapper_logFC_dotplot","text":"Dot plot logFC p-values multiple contrasts","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logFC_dotplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dot plot with logFC and p-values for multiple contrasts — wrapper_logFC_dotplot","text":"","code":"wrapper_logFC_dotplot(   x,   gene_var = \"Hgnc_Symbol\",   lfc_prefix = \"logFC\",   pval_prefix = \"P.Value\",   adjp_prefix = \"adj.P.Val\",   sep = \"_\",   pval = 0.05,   title = \"\",   color_low = \"#42399B\",   color_mid = \"white\",   color_high = \"#D70131\",   trim_values = 3,   trim_prop = NULL,   trim_range = NULL,   ceiling = FALSE,   radius_range = c(3, 10),   legend_position = \"right\",   axis_text_x_angle = 90,   axis_text_x_vjust = 0.5,   axis_text_x_hjust = 1,   axis_text_y_size = NULL,   axis_text_y_width = 80,   title_size = NULL )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logFC_dotplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dot plot with logFC and p-values for multiple contrasts — wrapper_logFC_dotplot","text":"x TopTable","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logFC_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap with logFC for multiple contrasts — wrapper_logFC_heatmap","title":"Heatmap with logFC for multiple contrasts — wrapper_logFC_heatmap","text":"Heatmap logFC multiple contrasts","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logFC_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap with logFC for multiple contrasts — wrapper_logFC_heatmap","text":"","code":"wrapper_logFC_heatmap(   x,   gene_var = \"Hgnc_Symbol\",   lfc_prefix = \"logFC\",   adjp_prefix = \"adj.P.Val\",   sep = \"_\",   title = \"\",   palette = c(\"#42399B\", \"white\", \"#D70131\"),   rev = FALSE,   trim_values = 3,   trim_prop = NULL,   trim_range = NULL,   ceiling = FALSE,   font_size = 10,   rect_gp = grid::gpar(col = \"grey\"),   cluster_rows = FALSE,   cluster_columns = FALSE,   row_dend_reorder = FALSE,   column_dend_reorder = FALSE,   show_row_names = TRUE,   show_column_names = TRUE,   row_names_gp = grid::gpar(fontsize = 9),   column_names_gp = grid::gpar(fontsize = 9),   row_names_max_width = unit(20, \"cm\"),   column_names_max_height = unit(20, \"cm\"),   row_names_width = 80,   draw = TRUE,   return = \"ht\",   ... )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logFC_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap with logFC for multiple contrasts — wrapper_logFC_heatmap","text":"x TopTable","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_log_rank_test_biomarker.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-rank test testing biomarker effect — wrapper_log_rank_test_biomarker","title":"Log-rank test testing biomarker effect — wrapper_log_rank_test_biomarker","text":"Log-rank test testing biomarker effect","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_log_rank_test_biomarker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-rank test testing biomarker effect — wrapper_log_rank_test_biomarker","text":"","code":"wrapper_log_rank_test_biomarker(   data,   tte_var,   censor_var,   biomarker_vars,   treatment_var = NULL,   strata_vars = NULL,   strat2_var = NULL,   variable_names = NULL,   caption = NULL,   sr_times = NULL,   print_nevent = TRUE,   print_mst = TRUE,   print_hr = TRUE,   print_total = TRUE,   print_pvalues = TRUE,   print_adjpvalues = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_log_rank_test_biomarker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-rank test testing biomarker effect — wrapper_log_rank_test_biomarker","text":"data Data frame. tte_var Name time--event variable. variable must numeric. censor_var Name censor variable. numeric encode 1 event 0 censor. biomarker_vars Vector biomarker names. strata_vars Vector names covariates used strata. strat2_var Name second stratification variable. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. print_nevent Logical. Whether print numbers events. print_mst Logical. Whether print median survival time (MST). print_hr Logical. Whether print hazard rations estimated Cox regression. print_total Logical. Whether print total number samples total number events. print_pvalues Logical. Whether print p-values. print_adjpvalues Logical. Whether print adjusted p-values.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_log_rank_test_core_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-rank test — wrapper_log_rank_test_core_simple","title":"Log-rank test — wrapper_log_rank_test_core_simple","text":"Log-rank test","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_log_rank_test_core_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-rank test — wrapper_log_rank_test_core_simple","text":"","code":"wrapper_log_rank_test_core_simple(   data,   tte_var,   censor_var,   covariate_var,   strata_vars = NULL,   keep_obs = TRUE,   variable_names = NULL,   caption = NULL,   sr_times = NULL,   print_nevent = TRUE,   print_mst = TRUE,   print_hr = TRUE,   print_total = FALSE,   print_pvalues = TRUE )  wrapper_log_rank_test_core_simple_strat(   data,   tte_var,   censor_var,   covariate_var,   strata_vars = NULL,   strat1_var = NULL,   strat2_var = NULL,   variable_names = NULL,   caption = NULL,   sr_times = NULL,   print_nevent = TRUE,   print_mst = TRUE,   print_hr = TRUE,   print_total = TRUE,   print_pvalues = TRUE,   print_adjpvalues = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_log_rank_test_core_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-rank test — wrapper_log_rank_test_core_simple","text":"data Data frame. tte_var Name time--event variable. variable must numeric. censor_var Name censor variable. numeric encode 1 event 0 censor. covariate_var Name covariate defines subgroups survival estimated. strata_vars Vector names covariates used strata. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. print_nevent Logical. Whether print numbers events. print_mst Logical. Whether print median survival time (MST). print_hr Logical. Whether print hazard rations estimated Cox regression. print_total Logical. Whether print total number samples total number events. print_pvalues Logical. Whether print p-values. strat1_var Name firts stratification variable. strat2_var Name second stratification variable. print_adjpvalues Logical. Whether print adjusted p-values.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_log_rank_test_core_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log-rank test — wrapper_log_rank_test_core_simple","text":"","code":"data(bdata)  data <- bdata tte_var <- \"PFS\" censor_var <- \"PFS_Event\" covariate_var <- \"Treatment_Arm\"  x <- wrapper_log_rank_test_core_simple(data, tte_var = tte_var, censor_var = censor_var, covariate_var = covariate_var)  boutput(x) #>       Covariate Subgroup   N      Events  MST  MST 95% CI   HR     HR 95% CI #> 1 Treatment Arm     CTRL 252 109 (43.3%) 83.1 (78.3 - NA)                    #> 2                    TRT 248 105 (42.3%) 99.9 (87.5 - NA) 0.79 (0.60 - 1.03) #>    P-value #> 1 0.0806 . #> 2            ### Fit a stratified model   strata_vars <- c(\"IPI\", \"Cell_Of_Origin\")  x <- wrapper_log_rank_test_core_simple(data, tte_var = tte_var, censor_var = censor_var, covariate_var = covariate_var, strata_vars = strata_vars)  boutput(x) #>       Covariate Subgroup   N     Events   MST  MST 95% CI   HR     HR 95% CI #> 1 Treatment Arm     CTRL 223 95 (42.6%)  83.3 (80.3 - NA)                    #> 2                    TRT 222 90 (40.5%) 100.3 (88.7 - NA) 0.70 (0.52 - 0.94) #>    P-value #> 1 0.0167 * #> 2             data(bdata)  data <- bdata tte_var <- \"PFS\" censor_var <- \"PFS_Event\" covariate_var <- \"Treatment_Arm\"  strat1_var = \"Cell_Of_Origin\"   x <- wrapper_log_rank_test_core_simple_strat(data, tte_var = tte_var, censor_var = censor_var, covariate_var = covariate_var, strat1_var = strat1_var)  boutput(x) #>   Cell Of Origin     Covariate Subgroup Total N Total Events   N     Events #> 1            GCB Treatment Arm     CTRL     252           91 135 56 (41.5%) #> 2                                   TRT     252           91 117 35 (29.9%) #> 3   UNCLASSIFIED Treatment Arm     CTRL      69           37  32 15 (46.9%) #> 4                                   TRT      69           37  37 22 (59.5%) #> 5            ABC Treatment Arm     CTRL     124           57  56 24 (42.9%) #> 6                                   TRT     124           57  68 33 (48.5%) #>    MST    MST 95% CI   HR     HR 95% CI   P-value Adj. P-value #> 1 85.6   (78.3 - NA)                    0.0090 **     0.0269 * #> 2   NA  (100.3 - NA) 0.57 (0.37 - 0.87)                        #> 3 83.3   (55.1 - NA)                       0.6926       0.6926 #> 4 82.1 (57.4 - 92.1) 1.14 (0.59 - 2.20)                        #> 5 82.6   (63.6 - NA)                       0.5822       0.6926 #> 6 92.0   (71.9 - NA) 0.86 (0.51 - 1.46)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_log_rank_test_treatment.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-rank test testing treatment effect within biomarker subgroups — wrapper_log_rank_test_treatment","title":"Log-rank test testing treatment effect within biomarker subgroups — wrapper_log_rank_test_treatment","text":"Log-rank test testing treatment effect within biomarker subgroups","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_log_rank_test_treatment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-rank test testing treatment effect within biomarker subgroups — wrapper_log_rank_test_treatment","text":"","code":"wrapper_log_rank_test_treatment(   data,   tte_var,   censor_var,   treatment_var,   biomarker_vars = NULL,   strata_vars = NULL,   strat2_var = NULL,   variable_names = NULL,   caption = NULL,   sr_times = NULL,   print_nevent = TRUE,   print_mst = TRUE,   print_hr = TRUE,   print_total = TRUE,   print_pvalues = TRUE,   print_adjpvalues = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_log_rank_test_treatment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-rank test testing treatment effect within biomarker subgroups — wrapper_log_rank_test_treatment","text":"data Data frame. tte_var Name time--event variable. variable must numeric. censor_var Name censor variable. numeric encode 1 event 0 censor. treatment_var Name column treatment information. biomarker_vars Vector names categorical biomarkers. NULL, overall treatment effect estimated. strata_vars Vector names covariates used strata. strat2_var Name second stratification variable. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. print_nevent Logical. Whether print numbers events. print_mst Logical. Whether print median survival time (MST). print_hr Logical. Whether print hazard rations estimated Cox regression. print_total Logical. Whether print total number samples total number events. print_pvalues Logical. Whether print p-values. print_adjpvalues Logical. Whether print adjusted p-values.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logistic_regression_biomarker.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic regression estimating biomarker effect — wrapper_logistic_regression_biomarker","title":"Logistic regression estimating biomarker effect — wrapper_logistic_regression_biomarker","text":"Logistic regression estimating biomarker effect","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logistic_regression_biomarker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic regression estimating biomarker effect — wrapper_logistic_regression_biomarker","text":"","code":"wrapper_logistic_regression_biomarker(   data,   response_var,   biomarker_vars,   treatment_var = NULL,   adjustment_vars = NULL,   strat2_var = NULL,   variable_names = NULL,   caption = NULL,   print_total = TRUE,   print_non_response = TRUE,   print_pvalues = TRUE,   print_adjpvalues = TRUE,   print_OR = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logistic_regression_biomarker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic regression estimating biomarker effect — wrapper_logistic_regression_biomarker","text":"data Data frame. response_var Name response variable. variable must factor 'success' interpreted factor first level. biomarker_vars Vector biomarker names. adjustment_vars Vector covariate names used adjustment. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. print_total Logical. Whether print total number samples. print_pvalues Logical. Whether print p-values. print_adjpvalues Logical. Whether print adjusted p-values.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logistic_regression_core_interaction.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic regression with additive model with interaction — wrapper_logistic_regression_core_interaction","title":"Logistic regression with additive model with interaction — wrapper_logistic_regression_core_interaction","text":"Logistic regression additive model interaction","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logistic_regression_core_interaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic regression with additive model with interaction — wrapper_logistic_regression_core_interaction","text":"","code":"wrapper_logistic_regression_core_interaction(   data,   response_var,   interaction1_var,   interaction2_var,   covariate_vars = NULL,   variable_names = NULL,   caption = NULL,   print_pvalues = TRUE,   print_adjpvalues = TRUE )  wrapper_logistic_regression_core_interaction_strat(   data,   response_var,   interaction1_var,   interaction2_var,   covariate_vars = NULL,   strat1_var = NULL,   strat2_var = NULL,   variable_names = NULL,   caption = NULL,   print_pvalues = TRUE,   print_adjpvalues = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logistic_regression_core_interaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic regression with additive model with interaction — wrapper_logistic_regression_core_interaction","text":"data Data frame. response_var Name response variable. variable must factor 'success' interpreted factor first level. interaction1_var Name first interaction variable. interaction2_var Name second interaction variable. covariate_vars Vector names covariate included formula. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. print_pvalues Logical. Whether print p-values. print_adjpvalues Logical. Whether print adjusted p-values. strat1_var Name second stratification variable.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logistic_regression_core_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic regression with simple additive model — wrapper_logistic_regression_core_simple","title":"Logistic regression with simple additive model — wrapper_logistic_regression_core_simple","text":"Logistic regression simple additive model","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logistic_regression_core_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic regression with simple additive model — wrapper_logistic_regression_core_simple","text":"","code":"wrapper_logistic_regression_core_simple(   data,   response_var,   covariate_vars,   return_vars = NULL,   variable_names = NULL,   caption = NULL,   force_empty_cols = FALSE,   print_total = TRUE,   print_non_response = TRUE,   print_pvalues = TRUE,   print_adjpvalues = TRUE,   print_OR = TRUE )  wrapper_logistic_regression_core_simple_strat(   data,   response_var,   covariate_vars,   return_vars = NULL,   strat1_var = NULL,   strat2_var = NULL,   variable_names = NULL,   caption = NULL,   force_empty_cols = FALSE,   print_total = TRUE,   print_non_response = TRUE,   print_pvalues = TRUE,   print_adjpvalues = TRUE,   print_OR = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logistic_regression_core_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic regression with simple additive model — wrapper_logistic_regression_core_simple","text":"data Data frame. response_var Name response variable. variable must factor 'success' interpreted factor first level. covariate_vars Vector names covariate included formula. return_vars Vector names covariate statistics returned. NULL, statistics covariates returned. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. force_empty_cols Logical. Whether display output columns empty. print_total Logical. Whether print total number samples. print_pvalues Logical. Whether print p-values. print_adjpvalues Logical. Whether print adjusted p-values. strat1_var Name second stratification variable.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logistic_regression_core_simple.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Logistic regression with simple additive model — wrapper_logistic_regression_core_simple","text":"factor covariate returned reference level zero counts, results set NA levels used reference means possible estimate odds ratios want.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logistic_regression_interaction.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic regression estimating effect of interaction between biomarker and treatment — wrapper_logistic_regression_interaction","title":"Logistic regression estimating effect of interaction between biomarker and treatment — wrapper_logistic_regression_interaction","text":"Logistic regression estimating effect interaction biomarker treatment","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logistic_regression_interaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic regression estimating effect of interaction between biomarker and treatment — wrapper_logistic_regression_interaction","text":"","code":"wrapper_logistic_regression_interaction(   data,   response_var,   treatment_var,   biomarker_vars,   adjustment_vars = NULL,   strat1_var = NULL,   strat2_var = NULL,   variable_names = NULL,   caption = NULL,   print_pvalues = TRUE,   print_adjpvalues = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logistic_regression_interaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic regression estimating effect of interaction between biomarker and treatment — wrapper_logistic_regression_interaction","text":"data Data frame. response_var Name response variable. variable must factor 'success' interpreted factor first level. treatment_var Name variable treatment information. biomarker_vars Vector biomarker names. adjustment_vars Vector covariate names used adjustment. strat1_var Name second stratification variable. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. print_pvalues Logical. Whether print p-values. print_adjpvalues Logical. Whether print adjusted p-values.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logistic_regression_treatment.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic regression estimating treatment effect within biomarker subgroups — wrapper_logistic_regression_treatment","title":"Logistic regression estimating treatment effect within biomarker subgroups — wrapper_logistic_regression_treatment","text":"Logistic regression estimating treatment effect within biomarker subgroups","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logistic_regression_treatment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic regression estimating treatment effect within biomarker subgroups — wrapper_logistic_regression_treatment","text":"","code":"wrapper_logistic_regression_treatment(   data,   response_var,   treatment_var,   biomarker_vars = NULL,   adjustment_vars = NULL,   strat2_var = NULL,   variable_names = NULL,   caption = NULL,   print_total = TRUE,   print_non_response = TRUE,   print_pvalues = TRUE,   print_adjpvalues = TRUE,   print_OR = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_logistic_regression_treatment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic regression estimating treatment effect within biomarker subgroups — wrapper_logistic_regression_treatment","text":"data Data frame. response_var Name response variable. variable must factor 'success' interpreted factor first level. treatment_var Name column treatment information. biomarker_vars Vector biomarker names. adjustment_vars Vector covariate names used adjustment. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. print_total Logical. Whether print total number samples. print_pvalues Logical. Whether print p-values. print_adjpvalues Logical. Whether print adjusted p-values.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_max_text_height.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum height of text — wrapper_max_text_height","title":"Maximum height of text — wrapper_max_text_height","text":"Maximum height text","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_max_text_height.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum height of text — wrapper_max_text_height","text":"","code":"wrapper_max_text_height(   text,   fontsize = 12,   rot = 0,   wrap_width = NULL,   unit = \"inches\" )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_max_text_width.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum width of text — wrapper_max_text_width","title":"Maximum width of text — wrapper_max_text_width","text":"Maximum width text","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_max_text_width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum width of text — wrapper_max_text_width","text":"","code":"wrapper_max_text_width(   text,   fontsize = 12,   rot = 0,   wrap_width = NULL,   unit = \"inches\" )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_merge_topTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge topTable results for multiple contrasts — wrapper_merge_topTables","title":"Merge topTable results for multiple contrasts — wrapper_merge_topTables","text":"Merge topTable results multiple contrasts","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_merge_topTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge topTable results for multiple contrasts — wrapper_merge_topTables","text":"","code":"wrapper_merge_topTables(   fit,   contrasts,   gene_vars = c(\"Hgnc_Symbol\", \"EntrezIDs\", \"GeneName\"),   res_vars = c(\"logFC\", \"AveExpr\", \"t\", \"P.Value\", \"adj.P.Val\"),   sep = \"_\",   pval = 0.05,   lfc = c(0, 1) )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_merge_topTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge topTable results for multiple contrasts — wrapper_merge_topTables","text":"fit Fit object class `MArrayLM` produced `lmFit` `eBayes` can apply `topTable`.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ncc_cox_regression_core_predictive.html","id":null,"dir":"Reference","previous_headings":"","what":"Cox regression with additive model with interactions for Nested Case-Control NCC study — wrapper_ncc_cox_regression_core_predictive","title":"Cox regression with additive model with interactions for Nested Case-Control NCC study — wrapper_ncc_cox_regression_core_predictive","text":"Returns HRs treatment effects biomarker subgroups p-value interaction term","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ncc_cox_regression_core_predictive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cox regression with additive model with interactions for Nested Case-Control NCC study — wrapper_ncc_cox_regression_core_predictive","text":"","code":"wrapper_ncc_cox_regression_core_predictive(   data,   tte_var,   censor_var,   interaction1_var,   interaction2_var,   covariate_vars = NULL,   ncc_vars,   samplestat_var,   m,   match.var,   match.int,   variable_names = NULL,   caption = NULL,   print_pvalues = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ncc_cox_regression_core_predictive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cox regression with additive model with interactions for Nested Case-Control NCC study — wrapper_ncc_cox_regression_core_predictive","text":"data Data frame preprocessed NCC analysis 'multipleNCC::wpl()'. tte_var Name time--event variable. variable must numeric. censor_var Name censor variable. numeric encode 1 event 0 censor. interaction1_var Names first interaction variable. correspond biomarker. variable must factor. interaction2_var Name second interaction variable. correspond treatment arm. variable must factor two levels. covariate_vars Vector names covariates included formula additive model. ncc_vars Vector names covariates measured NCC. samplestat_var Name variable indicating samplestat values. See 'multipleNCC::wpl()'. m See 'multipleNCC::wpl()'. match.var See 'multipleNCC::wpl()'. matrix continuous values. match.int See 'multipleNCC::wpl()'. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. print_pvalues Logical. Whether print p-values.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ncc_cox_regression_core_predictive.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cox regression with additive model with interactions for Nested Case-Control NCC study — wrapper_ncc_cox_regression_core_predictive","text":"factor covariate returned reference level zero count, results set NAs levels used reference means possible fit model want.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ncc_cox_regression_core_predictive2.html","id":null,"dir":"Reference","previous_headings":"","what":"Cox regression with additive model with interactions for Nested Case-Control NCC study — wrapper_ncc_cox_regression_core_predictive2","title":"Cox regression with additive model with interactions for Nested Case-Control NCC study — wrapper_ncc_cox_regression_core_predictive2","text":"Returns HRs treatment effects biomarker subgroups p-value interaction term","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ncc_cox_regression_core_predictive2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cox regression with additive model with interactions for Nested Case-Control NCC study — wrapper_ncc_cox_regression_core_predictive2","text":"","code":"wrapper_ncc_cox_regression_core_predictive2(   data,   tte_var,   censor_var,   interaction1_var,   interaction2_var,   covariate_prog_vars = NULL,   covariate_pred_vars = NULL,   ncc_vars,   samplestat_var,   m,   match.var,   match.int,   variable_names = NULL,   caption = NULL,   print_pvalues = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ncc_cox_regression_core_predictive2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cox regression with additive model with interactions for Nested Case-Control NCC study — wrapper_ncc_cox_regression_core_predictive2","text":"data Data frame preprocessed NCC analysis 'multipleNCC::wpl()'. tte_var Name time--event variable. variable must numeric. censor_var Name censor variable. numeric encode 1 event 0 censor. interaction1_var Names first interaction variable. correspond biomarker. variable must factor. interaction2_var Name second interaction variable. correspond treatment arm. variable must factor two levels. covariate_prog_vars Vector names prognostic covariates included formula additive model. covariate_pred_vars Vector names predictive covariates included formula additive model. ncc_vars Vector names covariates measured NCC. samplestat_var Name variable indicating samplestat values. See 'multipleNCC::wpl()'. m See 'multipleNCC::wpl()'. match.var See 'multipleNCC::wpl()'. matrix continuous values. match.int See 'multipleNCC::wpl()'. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. print_pvalues Logical. Whether print p-values.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ncc_cox_regression_core_predictive2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cox regression with additive model with interactions for Nested Case-Control NCC study — wrapper_ncc_cox_regression_core_predictive2","text":"factor covariate returned reference level zero count, results set NAs levels used reference means possible fit model want.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ncc_cox_regression_core_prognostic.html","id":null,"dir":"Reference","previous_headings":"","what":"Cox regression with simple additive model for Nested Case-Control NCC study — wrapper_ncc_cox_regression_core_prognostic","title":"Cox regression with simple additive model for Nested Case-Control NCC study — wrapper_ncc_cox_regression_core_prognostic","text":"Cox regression simple additive model Nested Case-Control NCC study","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ncc_cox_regression_core_prognostic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cox regression with simple additive model for Nested Case-Control NCC study — wrapper_ncc_cox_regression_core_prognostic","text":"","code":"wrapper_ncc_cox_regression_core_prognostic(   data,   tte_var,   censor_var,   covariate_vars,   ncc_vars,   samplestat_var,   m,   match.var,   match.int,   return_vars = NULL,   variable_names = NULL,   caption = NULL,   print_pvalues = TRUE,   print_adjpvalues = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ncc_cox_regression_core_prognostic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cox regression with simple additive model for Nested Case-Control NCC study — wrapper_ncc_cox_regression_core_prognostic","text":"data Data frame preprocessed NCC analysis 'multipleNCC::wpl()'. tte_var Name time--event variable. variable must numeric. censor_var Name censor variable. numeric encode 1 event 0 censor. covariate_vars Vector names covariates included formula simple additive model. ncc_vars Vector names covariates measured NCC. samplestat_var Name variable indicating samplestat values. See 'multipleNCC::wpl()'. m See 'multipleNCC::wpl()'. match.var See 'multipleNCC::wpl()'. matrix continuous values. match.int See 'multipleNCC::wpl()'. return_vars Vector names covariates statistics returned. NULL, statistics returned covariates. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. print_pvalues Logical. Whether print p-values.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ncc_cox_regression_core_prognostic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cox regression with simple additive model for Nested Case-Control NCC study — wrapper_ncc_cox_regression_core_prognostic","text":"factor covariate returned reference level zero count, results set NAs levels used reference means possible fit model want.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ora.html","id":null,"dir":"Reference","previous_headings":"","what":"Over-representation analysis (ORA) — wrapper_ora","title":"Over-representation analysis (ORA) — wrapper_ora","text":"-representation analysis (ORA)","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ora.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Over-representation analysis (ORA) — wrapper_ora","text":"","code":"wrapper_ora(   x,   genesets,   contrasts = NULL,   universe = NULL,   genesets_extra_info = NULL,   gene_mapping = NULL,   method = \"hypergeometric\",   min_GS_size = 10,   max_GS_size = 500,   directions = c(\"up\", \"down\", \"both\"),   min_DE_size = 5,   topn = Inf,   pval = 0.05,   lfc = 0,   gene_var = \"EntrezIDs\",   lfc_prefix = \"logFC\",   pval_prefix = \"P.Value\",   adjp_prefix = \"adj.P.Val\",   sep = \"_\",   topn_genes = 20 )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ora.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Over-representation analysis (ORA) — wrapper_ora","text":"x TopTable DGE results.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ora_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Over-representation analysis (ORA) — wrapper_ora_core","title":"Over-representation analysis (ORA) — wrapper_ora_core","text":"-representation analysis (ORA)","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ora_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Over-representation analysis (ORA) — wrapper_ora_core","text":"","code":"wrapper_ora_core(   genes,   genesets,   universe,   genesets_extra_info = NULL,   gene_mapping = NULL,   name = \"\",   sep = \"_\",   method = \"hypergeometric\",   min_GS_size = 10,   max_GS_size = 500,   topn_genes = 20 )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ora_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Over-representation analysis (ORA) — wrapper_ora_core","text":"genes Vector genes tested -representation. genesets List gene sets. universe Vector genes defining gene universe.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ora_dotplot_multiple.html","id":null,"dir":"Reference","previous_headings":"","what":"Dot plot with ORA results for multiple contrasts — wrapper_ora_dotplot_multiple","title":"Dot plot with ORA results for multiple contrasts — wrapper_ora_dotplot_multiple","text":"Dot plot ORA results multiple contrasts","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ora_dotplot_multiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dot plot with ORA results for multiple contrasts — wrapper_ora_dotplot_multiple","text":"","code":"wrapper_ora_dotplot_multiple(   x,   geneset_var = \"GenesetID\",   observed_prefix = \"Observed\",   adjp_prefix = \"adj.P.Val\",   sep = \"_\",   directions = c(\"both\", \"up\", \"down\"),   title = \"\",   title_size = 10,   title_width = 100,   axis_text_y_size = 8,   axis_text_y_width = 80,   colors_point = NULL,   size_range = c(2, 10),   point_alpha = 0.8 )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ora_dotplot_multiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dot plot with ORA results for multiple contrasts — wrapper_ora_dotplot_multiple","text":"x TopTable ORA results.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ora_dotplot_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Dot plot with ORA results for a single contrast — wrapper_ora_dotplot_single","title":"Dot plot with ORA results for a single contrast — wrapper_ora_dotplot_single","text":"Dot plot ORA results single contrast","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ora_dotplot_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dot plot with ORA results for a single contrast — wrapper_ora_dotplot_single","text":"","code":"wrapper_ora_dotplot_single(   x,   geneset_var = \"GenesetID\",   observed_var = \"Observed\",   adjp_var = \"adj.P.Val\",   color_point_var = NULL,   plot_x_var = \"log.adj.P.Val\",   trim_limits = 0.01,   color_point = \"darkslateblue\",   color_low = \"#42399B\",   color_mid = \"white\",   color_high = \"#D70131\",   size_range = c(2, 10),   title = \"\",   title_size = 10,   title_width = 100,   axis_text_y_size = 8,   axis_text_y_width = 80 )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_ora_dotplot_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dot plot with ORA results for a single contrast — wrapper_ora_dotplot_single","text":"x TopTable selected ORA results obtained running 'wrapper_ora_dispaly_significant' 'bresults'. plot_x_var plot x-axis. Possible values \"log.adj.P.Val\" corresponds -log10(adjp_var) \"sign.adj.P.Val\" corresponds -log10(adjp_var) * sign(color_point_var).","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_pearsons_test_biomarker.html","id":null,"dir":"Reference","previous_headings":"","what":"Testing biomarker effect on response with Pearson's Chi-squared test or Cochran-Mantel-Haenszel Chi-Squared Test — wrapper_pearsons_test_biomarker","title":"Testing biomarker effect on response with Pearson's Chi-squared test or Cochran-Mantel-Haenszel Chi-Squared Test — wrapper_pearsons_test_biomarker","text":"Testing biomarker effect response Pearson's Chi-squared test Cochran-Mantel-Haenszel Chi-Squared Test","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_pearsons_test_biomarker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Testing biomarker effect on response with Pearson's Chi-squared test or Cochran-Mantel-Haenszel Chi-Squared Test — wrapper_pearsons_test_biomarker","text":"","code":"wrapper_pearsons_test_biomarker(   data,   response_var,   biomarker_vars,   treatment_var = NULL,   strata_vars = NULL,   strat2_var = NULL,   method = \"pearson\",   variable_names = NULL,   caption = NULL,   print_total = TRUE,   print_non_response = TRUE,   print_pvalues = TRUE,   print_adjpvalues = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_pearsons_test_biomarker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Testing biomarker effect on response with Pearson's Chi-squared test or Cochran-Mantel-Haenszel Chi-Squared Test — wrapper_pearsons_test_biomarker","text":"data Data frame. response_var Name categorical variable defining successes failures first level corresponds failure second level corresponds success. biomarker_vars Vector biomarker names. strata_vars Stratification factors. defined, Cochran-Mantel-Haenszel Chi-Squared Test applied. method Method 'pearson' 'fisher' test. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. print_total Logical. Whether print total number samples. print_pvalues Logical. Whether print p-values. print_adjpvalues Logical. Whether print adjusted p-values.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_pearsons_test_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Pearson's Chi-squared test or Fisher's exact test or Cochran-Mantel-Haenszel Chi-Squared Test — wrapper_pearsons_test_core","title":"Pearson's Chi-squared test or Fisher's exact test or Cochran-Mantel-Haenszel Chi-Squared Test — wrapper_pearsons_test_core","text":"Pearson's Chi-squared test Fisher's exact test Cochran-Mantel-Haenszel Chi-Squared Test","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_pearsons_test_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pearson's Chi-squared test or Fisher's exact test or Cochran-Mantel-Haenszel Chi-Squared Test — wrapper_pearsons_test_core","text":"","code":"wrapper_pearsons_test_core(   data,   response_var,   covariate_var,   strata_vars = NULL,   method = \"pearson\",   variable_names = NULL,   caption = NULL,   force_empty_cols = FALSE,   print_total = TRUE,   print_non_response = TRUE,   print_pvalues = TRUE )  wrapper_pearsons_test_core_strat(   data,   response_var,   covariate_var,   strata_vars = NULL,   strat1_var = NULL,   strat2_var = NULL,   method = \"pearson\",   variable_names = NULL,   caption = NULL,   force_empty_cols = FALSE,   print_total = TRUE,   print_non_response = TRUE,   print_pvalues = TRUE,   print_adjpvalues = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_pearsons_test_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pearson's Chi-squared test or Fisher's exact test or Cochran-Mantel-Haenszel Chi-Squared Test — wrapper_pearsons_test_core","text":"data Data frame. response_var Name categorical variable defining successes failures first level corresponds failure second level corresponds success. covariate_var Name categorical variable defining subgroups. strata_vars Stratification factors. defined, Cochran-Mantel-Haenszel Chi-Squared Test applied. method Method 'pearson' 'fisher' test. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. force_empty_cols Logical. Whether display output columns empty. print_total Logical. Whether print total number samples. print_pvalues Logical. Whether print p-values. strat1_var Name second stratification variable. print_adjpvalues Logical. Whether print adjusted p-values.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_pearsons_test_treatment.html","id":null,"dir":"Reference","previous_headings":"","what":"Testing treatment effect on response with Pearson's Chi-squared test or Cochran-Mantel-Haenszel Chi-Squared Test — wrapper_pearsons_test_treatment","title":"Testing treatment effect on response with Pearson's Chi-squared test or Cochran-Mantel-Haenszel Chi-Squared Test — wrapper_pearsons_test_treatment","text":"Testing treatment effect response Pearson's Chi-squared test Cochran-Mantel-Haenszel Chi-Squared Test","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_pearsons_test_treatment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Testing treatment effect on response with Pearson's Chi-squared test or Cochran-Mantel-Haenszel Chi-Squared Test — wrapper_pearsons_test_treatment","text":"","code":"wrapper_pearsons_test_treatment(   data,   response_var,   treatment_var,   biomarker_vars = NULL,   strata_vars = NULL,   strat2_var = NULL,   method = \"pearson\",   variable_names = NULL,   caption = NULL,   print_total = TRUE,   print_non_response = TRUE,   print_pvalues = TRUE,   print_adjpvalues = TRUE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_pearsons_test_treatment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Testing treatment effect on response with Pearson's Chi-squared test or Cochran-Mantel-Haenszel Chi-Squared Test — wrapper_pearsons_test_treatment","text":"data Data frame. response_var Name categorical variable defining successes failures first level corresponds failure second level corresponds success. treatment_var Name column treatment information. biomarker_vars Vector names categorical biomarkers. NULL, overall treatment effect estimated. strata_vars Stratification factors. defined, Cochran-Mantel-Haenszel Chi-Squared Test applied. method Method 'pearson' 'fisher' test. variable_names Named vector variable names. supplied, variable names created replacing column names underscores spaces. caption Caption table results. print_total Logical. Whether print total number samples. print_pvalues Logical. Whether print p-values. print_adjpvalues Logical. Whether print adjusted p-values.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_point_plot_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatter plot — wrapper_point_plot_core","title":"Scatter plot — wrapper_point_plot_core","text":"Scatter plot","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_point_plot_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatter plot — wrapper_point_plot_core","text":"","code":"wrapper_point_plot_core(   data,   x_var,   y_var,   color_point_var = NULL,   facet_var = NULL,   colors_point = NULL,   scale_gradient = \"gradientn\",   color_low_point = \"#42399B\",   color_mid_point = \"white\",   color_high_point = \"#D70131\",   midpoint = 0,   trim_values = NULL,   trim_prop = NULL,   trim_range = NULL,   ceiling = FALSE,   centered = FALSE,   variable_names = NULL,   title = TRUE,   subtitle = TRUE,   xlab = TRUE,   ylab = TRUE,   legend_colors_point_title = TRUE,   legend_position = \"right\",   aspect_ratio = NULL,   facet_label_both = TRUE,   point_size = 1.5,   point_shape = 20,   point_alpha = 1,   point_stroke = 0.8,   smooth = \"none\",   smooth_method = \"auto\",   smooth_formula = y ~ x,   smooth_se = FALSE,   smooth_size = 1,   smooth_linetype = 1,   title_size = NULL,   strip_text_size = NULL,   facet_scales = \"fixed\",   xlim = NULL,   ylim = NULL,   display_correlation = FALSE,   background_grid_major = \"none\" )  wrapper_point_plot_core_strat(   data,   x_var,   y_var,   color_point_var = NULL,   facet_var = NULL,   strat1_var = NULL,   strat2_var = NULL,   colors_point = NULL,   scale_gradient = \"gradientn\",   color_low_point = \"#42399B\",   color_mid_point = \"white\",   color_high_point = \"#D70131\",   midpoint = 0,   trim_values = NULL,   trim_prop = NULL,   trim_range = NULL,   ceiling = FALSE,   centered = FALSE,   variable_names = NULL,   title = TRUE,   xlab = TRUE,   ylab = TRUE,   strat1_label_both = TRUE,   strat2_label_both = TRUE,   legend_colors_point_title = TRUE,   legend_position = \"right\",   aspect_ratio = NULL,   facet_label_both = TRUE,   point_size = 1.5,   point_shape = 20,   point_alpha = 1,   point_stroke = 0.8,   smooth = \"none\",   smooth_method = \"auto\",   smooth_formula = y ~ x,   smooth_se = FALSE,   smooth_size = 1,   smooth_linetype = 1,   title_size = NULL,   strip_text_size = NULL,   facet_scales = \"fixed\",   xlim = NULL,   ylim = NULL,   display_correlation = FALSE,   background_grid_major = \"none\",   strat_scales = \"fixed\",   strat1_nrow = 1,   strat1_ncol = NULL,   strat2_nrow = NULL,   strat2_ncol = 1,   less_legends = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_point_plot_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatter plot — wrapper_point_plot_core","text":"data Data frame. scale_gradient Possible values: \"gradientn\", \"gradient2\", \"gradient\". smooth Possible values: \"none\", \"pooled\", \"strat\". smooth_method Method used geom_smooth(), example, \"auto\", \"loess\", \"lm\". strat1_var Name first stratification variable. strat2_var Name second stratification variable.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_point_plot_core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatter plot — wrapper_point_plot_core","text":"","code":"data(bdata) data <- bdata  x_var <- \"GeneA\" y_var <- \"GeneB\"   wrapper_point_plot_core(data = data, x_var = x_var, y_var = y_var) #> Warning: No shared levels found between `names(values)` of the manual scale and the #> data's fill values.   wrapper_point_plot_core(data = bdata, x_var = x_var, y_var = y_var, color_point_var = \"Sex\", smooth = \"strat\") #> `geom_smooth()` using method = 'loess'   wrapper_point_plot_core(data = bdata, x_var = x_var, y_var = y_var, color_point_var = \"Age\")"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_print_plot_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Spit a list of plots into chunks and plot them in a grid layout — wrapper_print_plot_grid","title":"Spit a list of plots into chunks and plot them in a grid layout — wrapper_print_plot_grid","text":"Spit list plots chunks plot grid layout","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_print_plot_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spit a list of plots into chunks and plot them in a grid layout — wrapper_print_plot_grid","text":"","code":"wrapper_print_plot_grid(plotlist, nsplit = NULL, ncol = 2, nrow = NULL)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_read_gmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Read gmt file and return a list of genes — wrapper_read_gmt","title":"Read gmt file and return a list of genes — wrapper_read_gmt","text":"Read gmt file return list genes","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_read_gmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read gmt file and return a list of genes — wrapper_read_gmt","text":"","code":"wrapper_read_gmt(filename)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_renumber_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Renumber clusters based on their splitting so they can be traced — wrapper_renumber_clusters","title":"Renumber clusters based on their splitting so they can be traced — wrapper_renumber_clusters","text":"Renumber clusters based splitting can traced","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_renumber_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renumber clusters based on their splitting so they can be traced — wrapper_renumber_clusters","text":"","code":"wrapper_renumber_clusters(x, method = \"new\", threshold = 70)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_renumber_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renumber clusters based on their splitting so they can be traced — wrapper_renumber_clusters","text":"x Data frame clustering, columns ordered non-decreasing rank clustering.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_signature_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap with signature and expression of genes defining that signature — wrapper_signature_heatmap","title":"Heatmap with signature and expression of genes defining that signature — wrapper_signature_heatmap","text":"Heatmap signature expression genes defining signature","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_signature_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap with signature and expression of genes defining that signature — wrapper_signature_heatmap","text":"","code":"wrapper_signature_heatmap(   x,   signature,   title = \"\",   plot_expr = FALSE,   show_row_names = FALSE )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_signature_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap with signature and expression of genes defining that signature — wrapper_signature_heatmap","text":"x Matrix log transformed normalized gene expression. Genes rows samples columns. signature Vector precalculated signature. title Title.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_summarized_expression_dotplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Dotplot of gene expression summarized per group — wrapper_summarized_expression_dotplot","title":"Dotplot of gene expression summarized per group — wrapper_summarized_expression_dotplot","text":"Dotplot gene expression summarized per group","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_summarized_expression_dotplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dotplot of gene expression summarized per group — wrapper_summarized_expression_dotplot","text":"","code":"wrapper_summarized_expression_dotplot(x, group)"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_summarized_expression_dotplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dotplot of gene expression summarized per group — wrapper_summarized_expression_dotplot","text":"x Log transformed normalized expression group Vector grouping","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_summarized_expression_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap of gene expression summarized per group — wrapper_summarized_expression_heatmap","title":"Heatmap of gene expression summarized per group — wrapper_summarized_expression_heatmap","text":"Heatmap gene expression summarized per group","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_summarized_expression_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap of gene expression summarized per group — wrapper_summarized_expression_heatmap","text":"","code":"wrapper_summarized_expression_heatmap(   x,   group,   adjp = NULL,   center = TRUE,   scale = TRUE,   summary_fun = NULL,   skip_zeros = FALSE,   title = \"\",   name = NULL,   centered = TRUE,   palette = NULL,   rev = FALSE,   trim_values = NULL,   trim_prop = NULL,   trim_range = NULL,   ceiling = FALSE,   cell_fun_method = \"none\",   font_size = 10,   rect_gp = grid::gpar(col = \"white\"),   cluster_rows = FALSE,   cluster_columns = FALSE,   row_dend_reorder = FALSE,   column_dend_reorder = FALSE,   show_row_names = TRUE,   show_column_names = TRUE,   top_annotation = NULL,   extra_top_annotation = NULL,   row_names_gp = grid::gpar(fontsize = 9),   column_names_gp = grid::gpar(fontsize = 9),   row_names_max_width = unit(30, \"cm\"),   column_names_max_height = unit(30, \"cm\"),   row_names_width = 80,   draw = TRUE,   return = \"ht\",   ... )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_summarized_expression_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap of gene expression summarized per group — wrapper_summarized_expression_heatmap","text":"x Matrix gene expression. group Vector factors grouping. adjp Matrix adjusted p-values selected groups. Column names must correspond groups.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_tile_plot1_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Tile plot — wrapper_tile_plot1_core","title":"Tile plot — wrapper_tile_plot1_core","text":"Tile plot","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_tile_plot1_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tile plot — wrapper_tile_plot1_core","text":"","code":"wrapper_tile_plot1_core(   data,   y_vars,   colors = NULL,   variable_names = NULL,   skip_NAs = FALSE,   rev = TRUE,   rev_levels_skip = NULL,   order = TRUE,   return_plotlist = FALSE,   nrow_legend = 3 )  wrapper_tile_plot2_core(   data,   y_vars,   colors = NULL,   variable_names = NULL,   skip_NAs = FALSE,   rev = TRUE,   rev_levels_skip = NULL,   return_plotlist = FALSE,   nrow_legend = 3 )"},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_tile_plot1_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tile plot — wrapper_tile_plot1_core","text":"data Data frame. y_vars Names variables plotted tiles. variables must factors. colors Named list colors 'y_vars'. variable_names Named vector nicer variable names. skip_NAs Logical vector. Whether skip NAs.","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_write_gmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a list of genes into a gmt file — wrapper_write_gmt","title":"Write a list of genes into a gmt file — wrapper_write_gmt","text":"Write list genes gmt file","code":""},{"path":"https://gosianow.github.io/BiomarkerWrappers/reference/wrapper_write_gmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a list of genes into a gmt file — wrapper_write_gmt","text":"","code":"wrapper_write_gmt(x, filename)"}]
